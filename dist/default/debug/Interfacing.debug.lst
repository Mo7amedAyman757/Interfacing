

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 22 19:56:29 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F46K20 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   0013F8                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_registers
    64   0013F8  80                 	db	128
    65   0013F9  0F                 	db	15
    66   0013FA  81                 	db	129
    67   0013FB  0F                 	db	15
    68   0013FC  82                 	db	130
    69   0013FD  0F                 	db	15
    70   0013FE  83                 	db	131
    71   0013FF  0F                 	db	15
    72   001400  84                 	db	132
    73   001401  0F                 	db	15
    74                           
    75                           ;initializer for _lat_registers
    76   001402  89                 	db	137
    77   001403  0F                 	db	15
    78   001404  8A                 	db	138
    79   001405  0F                 	db	15
    80   001406  8B                 	db	139
    81   001407  0F                 	db	15
    82   001408  8C                 	db	140
    83   001409  0F                 	db	15
    84   00140A  8D                 	db	141
    85   00140B  0F                 	db	15
    86                           
    87                           ;initializer for _tris_registers
    88   00140C  92                 	db	146
    89   00140D  0F                 	db	15
    90   00140E  93                 	db	147
    91   00140F  0F                 	db	15
    92   001410  94                 	db	148
    93   001411  0F                 	db	15
    94   001412  95                 	db	149
    95   001413  0F                 	db	15
    96   001414  96                 	db	150
    97   001415  0F                 	db	15
    98                           
    99                           ;initializer for _ret
   100   001416  01                 	db	1
   101                           
   102                           ;initializer for _dc_motor_2
   103   001417  12                 	db	18
   104   001418  1A                 	db	26
   105                           
   106                           ;initializer for _dc_motor_1
   107   001419  02                 	db	2
   108   00141A  0A                 	db	10
   109   000000                     _PORTA	set	3968
   110   000000                     _LATA	set	3977
   111   000000                     _TRISA	set	3986
   112   000000                     _TRISE	set	3990
   113   000000                     _TRISD	set	3989
   114   000000                     _TRISC	set	3988
   115   000000                     _TRISB	set	3987
   116   000000                     _LATE	set	3981
   117   000000                     _LATD	set	3980
   118   000000                     _LATC	set	3979
   119   000000                     _LATB	set	3978
   120   000000                     _PORTE	set	3972
   121   000000                     _PORTD	set	3971
   122   000000                     _PORTC	set	3970
   123   000000                     _PORTB	set	3969
   124                           
   125                           ; #config settings
   126                           
   127                           	psect	cinit
   128   00139C                     __pcinit:
   129                           	callstack 0
   130   00139C                     start_initialization:
   131                           	callstack 0
   132   00139C                     __initialization:
   133                           	callstack 0
   134                           
   135                           ; Initialize objects allocated to COMRAM (35 bytes)
   136                           ; load TBLPTR registers with __pidataCOMRAM
   137   00139C  0EF8               	movlw	low __pidataCOMRAM
   138   00139E  6EF6               	movwf	tblptrl,c
   139   0013A0  0E13               	movlw	high __pidataCOMRAM
   140   0013A2  6EF7               	movwf	tblptrh,c
   141   0013A4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   142   0013A6  6EF8               	movwf	tblptru,c
   143   0013A8  EE00  F001         	lfsr	0,__pdataCOMRAM
   144   0013AC  EE10 F023          	lfsr	1,35
   145   0013B0                     copy_data0:
   146   0013B0  0009               	tblrd		*+
   147   0013B2  CFF5 FFEE          	movff	tablat,postinc0
   148   0013B6  50E5               	movf	postdec1,w,c
   149   0013B8  50E1               	movf	fsr1l,w,c
   150   0013BA  E1FA               	bnz	copy_data0
   151                           
   152                           ; Clear objects allocated to COMRAM (9 bytes)
   153   0013BC  EE00  F031         	lfsr	0,__pbssCOMRAM
   154   0013C0  0E09               	movlw	9
   155   0013C2                     clear_0:
   156   0013C2  6AEE               	clrf	postinc0,c
   157   0013C4  06E8               	decf	wreg,f,c
   158   0013C6  E1FD               	bnz	clear_0
   159   0013C8                     end_of_initialization:
   160                           	callstack 0
   161   0013C8                     __end_of__initialization:
   162                           	callstack 0
   163   0013C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   164   0013CA  6EF8               	movwf	tblptru,c
   165   0013CC  0100               	movlb	0
   166   0013CE  EF12  F009         	goto	_main	;jump to C main() function
   167                           
   168                           	psect	bssCOMRAM
   169   000031                     __pbssCOMRAM:
   170                           	callstack 0
   171   000031                     relay_turn_off@F3147:
   172                           	callstack 0
   173   000031                     	ds	1
   174   000032                     relay_turn_on@F3142:
   175                           	callstack 0
   176   000032                     	ds	1
   177   000033                     relay_initialize@F3137:
   178                           	callstack 0
   179   000033                     	ds	1
   180   000034                     led_turn_toggle@F3158:
   181                           	callstack 0
   182   000034                     	ds	1
   183   000035                     led_turn_off@F3153:
   184                           	callstack 0
   185   000035                     	ds	1
   186   000036                     led_turn_on@F3148:
   187                           	callstack 0
   188   000036                     	ds	1
   189   000037                     led_initialize@F3143:
   190                           	callstack 0
   191   000037                     	ds	1
   192   000038                     	ds	1
   193   000039                     	ds	1
   194                           
   195                           	psect	dataCOMRAM
   196   000001                     __pdataCOMRAM:
   197                           	callstack 0
   198   000001                     _port_registers:
   199                           	callstack 0
   200   000001                     	ds	10
   201   00000B                     _lat_registers:
   202                           	callstack 0
   203   00000B                     	ds	10
   204   000015                     _tris_registers:
   205                           	callstack 0
   206   000015                     	ds	10
   207   00001F                     _ret:
   208                           	callstack 0
   209   00001F                     	ds	1
   210   000020                     _dc_motor_2:
   211                           	callstack 0
   212   000020                     	ds	2
   213   000022                     _dc_motor_1:
   214                           	callstack 0
   215   000022                     	ds	2
   216                           
   217                           	psect	cstackCOMRAM
   218   000024                     __pcstackCOMRAM:
   219                           	callstack 0
   220   000024                     gpio_pin_direction_initialization@pin_config:
   221                           	callstack 0
   222   000024                     gpio_pin_write_logic@pin_config:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x0
   226   000024                     	ds	1
   227   000025                     ??_gpio_pin_direction_initialization:
   228   000025                     gpio_pin_write_logic@logic:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x1
   232   000025                     	ds	1
   233   000026                     ??_gpio_pin_write_logic:
   234                           
   235                           ; 1 bytes @ 0x2
   236   000026                     	ds	4
   237   00002A                     gpio_pin_direction_initialization@ret:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x6
   241   00002A                     	ds	1
   242   00002B                     gpio_pin_write_logic@ret:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x7
   246   00002B                     	ds	1
   247   00002C                     dc_motor_move_right@dc_motor:
   248                           	callstack 0
   249   00002C                     dc_motor_move_left@dc_motor:
   250                           	callstack 0
   251   00002C                     dc_motor_stop@dc_motor:
   252                           	callstack 0
   253   00002C                     gpio_pin_initialization@pin_config:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x8
   257   00002C                     	ds	1
   258   00002D                     ??_gpio_pin_initialization:
   259   00002D                     dc_motor_move_right@ret:
   260                           	callstack 0
   261   00002D                     dc_motor_move_left@ret:
   262                           	callstack 0
   263   00002D                     dc_motor_stop@ret:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x9
   267   00002D                     	ds	1
   268   00002E                     dc_motor_initialize@dc_motor:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0xA
   272   00002E                     	ds	1
   273   00002F                     ??_main:
   274                           
   275                           ; 1 bytes @ 0xB
   276   00002F                     	ds	2
   277                           
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 35 in file "application.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  2  247[None  ] int 
   290 ;; Registers used:
   291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : 0/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;Total ram usage:        2 bytes
   302 ;; Hardware stack levels required when called: 4
   303 ;; This function calls:
   304 ;;		_application_initialize
   305 ;;		_dc_motor_move_left
   306 ;;		_dc_motor_move_right
   307 ;;		_dc_motor_stop
   308 ;; This function is called by:
   309 ;;		Startup code after reset
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313                           	psect	text0
   314   001224                     __ptext0:
   315                           	callstack 0
   316   001224                     _main:
   317                           	callstack 27
   318   001224                     
   319                           ;application.c: 37:     application_initialize();
   320   001224  EC0E  F00A         	call	_application_initialize	;wreg free
   321   001228                     l248:
   322                           
   323                           ;application.c: 41:         ret = dc_motor_move_right(&dc_motor_1);
   324   001228  0E22               	movlw	low _dc_motor_1
   325   00122A  6E2C               	movwf	dc_motor_move_right@dc_motor^0,c
   326   00122C  EC96  F009         	call	_dc_motor_move_right	;wreg free
   327   001230  6E1F               	movwf	_ret^0,c
   328                           
   329                           ;application.c: 42:         ret = dc_motor_move_right(&dc_motor_2);
   330   001232  0E20               	movlw	low _dc_motor_2
   331   001234  6E2C               	movwf	dc_motor_move_right@dc_motor^0,c
   332   001236  EC96  F009         	call	_dc_motor_move_right	;wreg free
   333   00123A  6E1F               	movwf	_ret^0,c
   334   00123C                     
   335                           ;application.c: 44:         _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   336   00123C  0E15               	movlw	21
   337   00123E  6E30               	movwf	(??_main+1)^0,c
   338   001240  0E4B               	movlw	75
   339   001242  6E2F               	movwf	??_main^0,c
   340   001244  0EBE               	movlw	190
   341   001246                     u827:
   342   001246  2EE8               	decfsz	wreg,f,c
   343   001248  D7FE               	bra	u827
   344   00124A  2E2F               	decfsz	??_main^0,f,c
   345   00124C  D7FC               	bra	u827
   346   00124E  2E30               	decfsz	(??_main+1)^0,f,c
   347   001250  D7FA               	bra	u827
   348   001252  F000 F000          	nop2	
   349   001256                     
   350                           ;application.c: 46:         ret = dc_motor_move_left(&dc_motor_1);
   351   001256  0E22               	movlw	low _dc_motor_1
   352   001258  6E2C               	movwf	dc_motor_move_left@dc_motor^0,c
   353   00125A  ECB2  F009         	call	_dc_motor_move_left	;wreg free
   354   00125E  6E1F               	movwf	_ret^0,c
   355   001260                     
   356                           ;application.c: 47:         ret = dc_motor_move_left(&dc_motor_2);
   357   001260  0E20               	movlw	low _dc_motor_2
   358   001262  6E2C               	movwf	dc_motor_move_left@dc_motor^0,c
   359   001264  ECB2  F009         	call	_dc_motor_move_left	;wreg free
   360   001268  6E1F               	movwf	_ret^0,c
   361   00126A                     
   362                           ;application.c: 49:         _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   363   00126A  0E15               	movlw	21
   364   00126C  6E30               	movwf	(??_main+1)^0,c
   365   00126E  0E4B               	movlw	75
   366   001270  6E2F               	movwf	??_main^0,c
   367   001272  0EBE               	movlw	190
   368   001274                     u837:
   369   001274  2EE8               	decfsz	wreg,f,c
   370   001276  D7FE               	bra	u837
   371   001278  2E2F               	decfsz	??_main^0,f,c
   372   00127A  D7FC               	bra	u837
   373   00127C  2E30               	decfsz	(??_main+1)^0,f,c
   374   00127E  D7FA               	bra	u837
   375   001280  F000 F000          	nop2	
   376                           
   377                           ;application.c: 51:         ret = dc_motor_stop(&dc_motor_1);
   378   001284  0E22               	movlw	low _dc_motor_1
   379   001286  6E2C               	movwf	dc_motor_stop@dc_motor^0,c
   380   001288  EC7A  F009         	call	_dc_motor_stop	;wreg free
   381   00128C  6E1F               	movwf	_ret^0,c
   382                           
   383                           ;application.c: 52:         ret = dc_motor_stop(&dc_motor_2);
   384   00128E  0E20               	movlw	low _dc_motor_2
   385   001290  6E2C               	movwf	dc_motor_stop@dc_motor^0,c
   386   001292  EC7A  F009         	call	_dc_motor_stop	;wreg free
   387   001296  6E1F               	movwf	_ret^0,c
   388   001298  EF14  F009         	goto	l248
   389   00129C  EF01  F000         	goto	start
   390   0012A0                     __end_of_main:
   391                           	callstack 0
   392                           
   393 ;; *************** function _dc_motor_stop *****************
   394 ;; Defined at:
   395 ;;		line 53 in file "ECU_Layer/DC_Motor/ecu_motor.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;  dc_motor        1    8[COMRAM] PTR const struct .
   398 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  ret             1    9[COMRAM] unsigned char 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      unsigned char 
   403 ;; Registers used:
   404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   410 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;Total ram usage:        2 bytes
   415 ;; Hardware stack levels used: 1
   416 ;; Hardware stack levels required when called: 1
   417 ;; This function calls:
   418 ;;		_gpio_pin_write_logic
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	text1
   425   0012F4                     __ptext1:
   426                           	callstack 0
   427   0012F4                     _dc_motor_stop:
   428                           	callstack 29
   429   0012F4                     
   430                           ;ECU_Layer/DC_Motor/ecu_motor.c: 55:     STD_ReturnType ret = (STD_ReturnType)0x01;
   431   0012F4  0E01               	movlw	1
   432   0012F6  6E2D               	movwf	dc_motor_stop@ret^0,c
   433                           
   434                           ;ECU_Layer/DC_Motor/ecu_motor.c: 56:     if (((void*)0) == dc_motor) {
   435   0012F8  502C               	movf	dc_motor_stop@dc_motor^0,w,c
   436   0012FA  A4D8               	btfss	status,2,c
   437   0012FC  EF82  F009         	goto	u681
   438   001300  EF84  F009         	goto	u680
   439   001304                     u681:
   440   001304  EF88  F009         	goto	l1358
   441   001308                     u680:
   442   001308                     
   443                           ;ECU_Layer/DC_Motor/ecu_motor.c: 57:         ret = (STD_ReturnType)0x00;
   444   001308  0E00               	movlw	0
   445   00130A  6E2D               	movwf	dc_motor_stop@ret^0,c
   446                           
   447                           ;ECU_Layer/DC_Motor/ecu_motor.c: 58:     } else {
   448   00130C  EF94  F009         	goto	l1360
   449   001310                     l1358:
   450                           
   451                           ;ECU_Layer/DC_Motor/ecu_motor.c: 59:         gpio_pin_write_logic(&(dc_motor->dc_motor[0
      +                          ]), GPIO_LOW);
   452   001310  C02C  F024         	movff	dc_motor_stop@dc_motor,gpio_pin_write_logic@pin_config
   453   001314  0E00               	movlw	0
   454   001316  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   455   001318  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   456                           
   457                           ;ECU_Layer/DC_Motor/ecu_motor.c: 60:         gpio_pin_write_logic(&(dc_motor->dc_motor[1
      +                          ]), GPIO_LOW);
   458   00131C  282C               	incf	dc_motor_stop@dc_motor^0,w,c
   459   00131E  6E24               	movwf	gpio_pin_write_logic@pin_config^0,c
   460   001320  0E00               	movlw	0
   461   001322  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   462   001324  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   463   001328                     l1360:
   464                           
   465                           ;ECU_Layer/DC_Motor/ecu_motor.c: 62:     return ret;
   466   001328  502D               	movf	dc_motor_stop@ret^0,w,c
   467   00132A  0012               	return		;funcret
   468   00132C                     __end_of_dc_motor_stop:
   469                           	callstack 0
   470                           
   471 ;; *************** function _dc_motor_move_right *****************
   472 ;; Defined at:
   473 ;;		line 27 in file "ECU_Layer/DC_Motor/ecu_motor.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  dc_motor        1    8[COMRAM] PTR const struct .
   476 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  ret             1    9[COMRAM] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      unsigned char 
   481 ;; Registers used:
   482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   488 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;Total ram usage:        2 bytes
   493 ;; Hardware stack levels used: 1
   494 ;; Hardware stack levels required when called: 1
   495 ;; This function calls:
   496 ;;		_gpio_pin_write_logic
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text2
   503   00132C                     __ptext2:
   504                           	callstack 0
   505   00132C                     _dc_motor_move_right:
   506                           	callstack 29
   507   00132C                     
   508                           ;ECU_Layer/DC_Motor/ecu_motor.c: 29:     STD_ReturnType ret = (STD_ReturnType)0x01;
   509   00132C  0E01               	movlw	1
   510   00132E  6E2D               	movwf	dc_motor_move_right@ret^0,c
   511                           
   512                           ;ECU_Layer/DC_Motor/ecu_motor.c: 30:     if (((void*)0) == dc_motor) {
   513   001330  502C               	movf	dc_motor_move_right@dc_motor^0,w,c
   514   001332  A4D8               	btfss	status,2,c
   515   001334  EF9E  F009         	goto	u661
   516   001338  EFA0  F009         	goto	u660
   517   00133C                     u661:
   518   00133C  EFA4  F009         	goto	l1338
   519   001340                     u660:
   520   001340                     
   521                           ;ECU_Layer/DC_Motor/ecu_motor.c: 31:         ret = (STD_ReturnType)0x00;
   522   001340  0E00               	movlw	0
   523   001342  6E2D               	movwf	dc_motor_move_right@ret^0,c
   524                           
   525                           ;ECU_Layer/DC_Motor/ecu_motor.c: 32:     } else {
   526   001344  EFB0  F009         	goto	l1340
   527   001348                     l1338:
   528                           
   529                           ;ECU_Layer/DC_Motor/ecu_motor.c: 33:         gpio_pin_write_logic(&(dc_motor->dc_motor[0
      +                          ]), GPIO_HIGH);
   530   001348  C02C  F024         	movff	dc_motor_move_right@dc_motor,gpio_pin_write_logic@pin_config
   531   00134C  0E01               	movlw	1
   532   00134E  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   533   001350  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   534                           
   535                           ;ECU_Layer/DC_Motor/ecu_motor.c: 34:         gpio_pin_write_logic(&(dc_motor->dc_motor[1
      +                          ]), GPIO_LOW);
   536   001354  282C               	incf	dc_motor_move_right@dc_motor^0,w,c
   537   001356  6E24               	movwf	gpio_pin_write_logic@pin_config^0,c
   538   001358  0E00               	movlw	0
   539   00135A  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   540   00135C  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   541   001360                     l1340:
   542                           
   543                           ;ECU_Layer/DC_Motor/ecu_motor.c: 36:     return ret;
   544   001360  502D               	movf	dc_motor_move_right@ret^0,w,c
   545   001362  0012               	return		;funcret
   546   001364                     __end_of_dc_motor_move_right:
   547                           	callstack 0
   548                           
   549 ;; *************** function _dc_motor_move_left *****************
   550 ;; Defined at:
   551 ;;		line 40 in file "ECU_Layer/DC_Motor/ecu_motor.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  dc_motor        1    8[COMRAM] PTR const struct .
   554 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  ret             1    9[COMRAM] unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      unsigned char 
   559 ;; Registers used:
   560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   566 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;Total ram usage:        2 bytes
   571 ;; Hardware stack levels used: 1
   572 ;; Hardware stack levels required when called: 1
   573 ;; This function calls:
   574 ;;		_gpio_pin_write_logic
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text3
   581   001364                     __ptext3:
   582                           	callstack 0
   583   001364                     _dc_motor_move_left:
   584                           	callstack 29
   585   001364                     
   586                           ;ECU_Layer/DC_Motor/ecu_motor.c: 42:     STD_ReturnType ret = (STD_ReturnType)0x01;
   587   001364  0E01               	movlw	1
   588   001366  6E2D               	movwf	dc_motor_move_left@ret^0,c
   589                           
   590                           ;ECU_Layer/DC_Motor/ecu_motor.c: 43:     if (((void*)0) == dc_motor) {
   591   001368  502C               	movf	dc_motor_move_left@dc_motor^0,w,c
   592   00136A  A4D8               	btfss	status,2,c
   593   00136C  EFBA  F009         	goto	u671
   594   001370  EFBC  F009         	goto	u670
   595   001374                     u671:
   596   001374  EFC0  F009         	goto	l1348
   597   001378                     u670:
   598   001378                     
   599                           ;ECU_Layer/DC_Motor/ecu_motor.c: 44:         ret = (STD_ReturnType)0x00;
   600   001378  0E00               	movlw	0
   601   00137A  6E2D               	movwf	dc_motor_move_left@ret^0,c
   602                           
   603                           ;ECU_Layer/DC_Motor/ecu_motor.c: 45:     } else {
   604   00137C  EFCC  F009         	goto	l1350
   605   001380                     l1348:
   606                           
   607                           ;ECU_Layer/DC_Motor/ecu_motor.c: 46:         gpio_pin_write_logic(&(dc_motor->dc_motor[0
      +                          ]), GPIO_LOW);
   608   001380  C02C  F024         	movff	dc_motor_move_left@dc_motor,gpio_pin_write_logic@pin_config
   609   001384  0E00               	movlw	0
   610   001386  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   611   001388  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   612                           
   613                           ;ECU_Layer/DC_Motor/ecu_motor.c: 47:         gpio_pin_write_logic(&(dc_motor->dc_motor[1
      +                          ]), GPIO_HIGH);
   614   00138C  282C               	incf	dc_motor_move_left@dc_motor^0,w,c
   615   00138E  6E24               	movwf	gpio_pin_write_logic@pin_config^0,c
   616   001390  0E01               	movlw	1
   617   001392  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   618   001394  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   619   001398                     l1350:
   620                           
   621                           ;ECU_Layer/DC_Motor/ecu_motor.c: 49:     return ret;
   622   001398  502D               	movf	dc_motor_move_left@ret^0,w,c
   623   00139A  0012               	return		;funcret
   624   00139C                     __end_of_dc_motor_move_left:
   625                           	callstack 0
   626                           
   627 ;; *************** function _application_initialize *****************
   628 ;; Defined at:
   629 ;;		line 57 in file "application.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; Hardware stack levels required when called: 3
   650 ;; This function calls:
   651 ;;		_dc_motor_initialize
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text4
   658   00141C                     __ptext4:
   659                           	callstack 0
   660   00141C                     _application_initialize:
   661                           	callstack 27
   662   00141C                     
   663                           ;application.c: 59:     dc_motor_initialize(&dc_motor_1);
   664   00141C  0E22               	movlw	low _dc_motor_1
   665   00141E  6E2E               	movwf	dc_motor_initialize@dc_motor^0,c
   666   001420  ECE9  F009         	call	_dc_motor_initialize	;wreg free
   667                           
   668                           ;application.c: 60:     dc_motor_initialize(&dc_motor_2);
   669   001424  0E20               	movlw	low _dc_motor_2
   670   001426  6E2E               	movwf	dc_motor_initialize@dc_motor^0,c
   671   001428  ECE9  F009         	call	_dc_motor_initialize	;wreg free
   672   00142C  0012               	return		;funcret
   673   00142E                     __end_of_application_initialize:
   674                           	callstack 0
   675                           
   676 ;; *************** function _dc_motor_initialize *****************
   677 ;; Defined at:
   678 ;;		line 13 in file "ECU_Layer/DC_Motor/ecu_motor.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  dc_motor        1   10[COMRAM] PTR const struct .
   681 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  ret             1    0        unsigned char 
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      unsigned char 
   686 ;; Registers used:
   687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   693 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;Total ram usage:        1 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; Hardware stack levels required when called: 2
   700 ;; This function calls:
   701 ;;		_gpio_pin_initialization
   702 ;; This function is called by:
   703 ;;		_application_initialize
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text5
   708   0013D2                     __ptext5:
   709                           	callstack 0
   710   0013D2                     _dc_motor_initialize:
   711                           	callstack 27
   712   0013D2                     
   713                           ;ECU_Layer/DC_Motor/ecu_motor.c: 16:     if (((void*)0) == dc_motor) {
   714   0013D2  502E               	movf	dc_motor_initialize@dc_motor^0,w,c
   715   0013D4  A4D8               	btfss	status,2,c
   716   0013D6  EFEF  F009         	goto	u651
   717   0013DA  EFF1  F009         	goto	u650
   718   0013DE                     u651:
   719   0013DE  EFF3  F009         	goto	l1330
   720   0013E2                     u650:
   721   0013E2                     
   722                           ;ECU_Layer/DC_Motor/ecu_motor.c: 18:     } else {
   723   0013E2  EFFB  F009         	goto	l36
   724   0013E6                     l1330:
   725                           
   726                           ;ECU_Layer/DC_Motor/ecu_motor.c: 20:         gpio_pin_initialization(&(dc_motor->dc_moto
      +                          r[0]));
   727   0013E6  C02E  F02C         	movff	dc_motor_initialize@dc_motor,gpio_pin_initialization@pin_config
   728   0013EA  EC50  F009         	call	_gpio_pin_initialization	;wreg free
   729                           
   730                           ;ECU_Layer/DC_Motor/ecu_motor.c: 21:         gpio_pin_initialization(&(dc_motor->dc_moto
      +                          r[1]));
   731   0013EE  282E               	incf	dc_motor_initialize@dc_motor^0,w,c
   732   0013F0  6E2C               	movwf	gpio_pin_initialization@pin_config^0,c
   733   0013F2  EC50  F009         	call	_gpio_pin_initialization	;wreg free
   734   0013F6                     l36:
   735   0013F6  0012               	return		;funcret
   736   0013F8                     __end_of_dc_motor_initialize:
   737                           	callstack 0
   738                           
   739 ;; *************** function _gpio_pin_initialization *****************
   740 ;; Defined at:
   741 ;;		line 140 in file "MCAL_Layer/GPIO/hal_gpio.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  pin_config      1    8[COMRAM] PTR const struct .
   744 ;;		 -> dc_motor_2$dc_motor(2), dc_motor_2(2), dc_motor_1$dc_motor(2), dc_motor_1(2), 
   745 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  ret             1    0        unsigned char 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      unsigned char 
   750 ;; Registers used:
   751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   757 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;Total ram usage:        2 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 1
   764 ;; This function calls:
   765 ;;		_gpio_pin_direction_initialization
   766 ;;		_gpio_pin_write_logic
   767 ;; This function is called by:
   768 ;;		_dc_motor_initialize
   769 ;;		_led_initialize
   770 ;;		_relay_initialize
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text6
   775   0012A0                     __ptext6:
   776                           	callstack 0
   777   0012A0                     _gpio_pin_initialization:
   778                           	callstack 27
   779   0012A0                     
   780                           ;MCAL_Layer/GPIO/hal_gpio.c: 142:     if ((((void*)0) == pin_config) || (pin_config->pin
      +                           > 8 - 1)) {
   781   0012A0  502C               	movf	gpio_pin_initialization@pin_config^0,w,c
   782   0012A2  B4D8               	btfsc	status,2,c
   783   0012A4  EF56  F009         	goto	u631
   784   0012A8  EF58  F009         	goto	u630
   785   0012AC                     u631:
   786   0012AC  EF68  F009         	goto	l1320
   787   0012B0                     u630:
   788   0012B0  502C               	movf	gpio_pin_initialization@pin_config^0,w,c
   789   0012B2  6ED9               	movwf	fsr2l,c
   790   0012B4  6ADA               	clrf	fsr2h,c
   791   0012B6  30DF               	rrcf	223,w,c
   792   0012B8  32E8               	rrcf	wreg,f,c
   793   0012BA  32E8               	rrcf	wreg,f,c
   794   0012BC  0B07               	andlw	7
   795   0012BE  6E2D               	movwf	??_gpio_pin_initialization^0,c
   796   0012C0  0E07               	movlw	7
   797   0012C2  642D               	cpfsgt	??_gpio_pin_initialization^0,c
   798   0012C4  EF66  F009         	goto	u641
   799   0012C8  EF68  F009         	goto	u640
   800   0012CC                     u641:
   801   0012CC  EF6A  F009         	goto	l1322
   802   0012D0                     u640:
   803   0012D0                     l1320:
   804                           
   805                           ;MCAL_Layer/GPIO/hal_gpio.c: 144:     } else {
   806   0012D0  EF79  F009         	goto	l198
   807   0012D4                     l1322:
   808                           
   809                           ;MCAL_Layer/GPIO/hal_gpio.c: 145:         gpio_pin_direction_initialization(pin_config);
   810   0012D4  C02C  F024         	movff	gpio_pin_initialization@pin_config,gpio_pin_direction_initialization@pin_config
   811   0012D8  EC01  F008         	call	_gpio_pin_direction_initialization	;wreg free
   812                           
   813                           ;MCAL_Layer/GPIO/hal_gpio.c: 146:         gpio_pin_write_logic(pin_config, pin_config->l
      +                          ogic);
   814   0012DC  C02C  F024         	movff	gpio_pin_initialization@pin_config,gpio_pin_write_logic@pin_config
   815   0012E0  502C               	movf	gpio_pin_initialization@pin_config^0,w,c
   816   0012E2  6ED9               	movwf	fsr2l,c
   817   0012E4  6ADA               	clrf	fsr2h,c
   818   0012E6  0E00               	movlw	0
   819   0012E8  BEDF               	btfsc	indf2,7,c
   820   0012EA  0E01               	movlw	1
   821   0012EC  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   822   0012EE  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   823   0012F2                     l198:
   824   0012F2  0012               	return		;funcret
   825   0012F4                     __end_of_gpio_pin_initialization:
   826                           	callstack 0
   827                           
   828 ;; *************** function _gpio_pin_write_logic *****************
   829 ;; Defined at:
   830 ;;		line 73 in file "MCAL_Layer/GPIO/hal_gpio.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  pin_config      1    0[COMRAM] PTR const struct .
   833 ;;		 -> dc_motor_2$dc_motor(2), dc_motor_2(2), dc_motor_1$dc_motor(2), dc_motor_1(2), 
   834 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
   835 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
   836 ;;  logic           1    1[COMRAM] enum E3063
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  ret             1    7[COMRAM] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      unsigned char 
   841 ;; Registers used:
   842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;Total ram usage:        8 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_dc_motor_move_right
   858 ;;		_dc_motor_move_left
   859 ;;		_dc_motor_stop
   860 ;;		_gpio_pin_initialization
   861 ;;		_led_turn_on
   862 ;;		_led_turn_off
   863 ;;		_relay_turn_on
   864 ;;		_relay_turn_off
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text7
   869   001114                     __ptext7:
   870                           	callstack 0
   871   001114                     _gpio_pin_write_logic:
   872                           	callstack 29
   873   001114                     
   874                           ;MCAL_Layer/GPIO/hal_gpio.c: 74:     STD_ReturnType ret = (STD_ReturnType)0x01;
   875   001114  0E01               	movlw	1
   876   001116  6E2B               	movwf	gpio_pin_write_logic@ret^0,c
   877                           
   878                           ;MCAL_Layer/GPIO/hal_gpio.c: 75:     if ((((void*)0) == pin_config) || (pin_config->pin 
      +                          > 8 - 1)) {
   879   001118  5024               	movf	gpio_pin_write_logic@pin_config^0,w,c
   880   00111A  B4D8               	btfsc	status,2,c
   881   00111C  EF92  F008         	goto	u591
   882   001120  EF94  F008         	goto	u590
   883   001124                     u591:
   884   001124  EFA4  F008         	goto	l1298
   885   001128                     u590:
   886   001128  5024               	movf	gpio_pin_write_logic@pin_config^0,w,c
   887   00112A  6ED9               	movwf	fsr2l,c
   888   00112C  6ADA               	clrf	fsr2h,c
   889   00112E  30DF               	rrcf	223,w,c
   890   001130  32E8               	rrcf	wreg,f,c
   891   001132  32E8               	rrcf	wreg,f,c
   892   001134  0B07               	andlw	7
   893   001136  6E26               	movwf	??_gpio_pin_write_logic^0,c
   894   001138  0E07               	movlw	7
   895   00113A  6426               	cpfsgt	??_gpio_pin_write_logic^0,c
   896   00113C  EFA2  F008         	goto	u601
   897   001140  EFA4  F008         	goto	u600
   898   001144                     u601:
   899   001144  EFFB  F008         	goto	l1306
   900   001148                     u600:
   901   001148                     l1298:
   902                           
   903                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:         ret = (STD_ReturnType)0x00;
   904   001148  0E00               	movlw	0
   905   00114A  6E2B               	movwf	gpio_pin_write_logic@ret^0,c
   906                           
   907                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     } else {
   908   00114C  EF10  F009         	goto	l1308
   909   001150                     l1300:
   910                           
   911                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 (*lat_registers[pin_config->port] &= ~(
      +                          1 << pin_config->pin));
   912   001150  5024               	movf	gpio_pin_write_logic@pin_config^0,w,c
   913   001152  6ED9               	movwf	fsr2l,c
   914   001154  6ADA               	clrf	fsr2h,c
   915   001156  30DF               	rrcf	223,w,c
   916   001158  32E8               	rrcf	wreg,f,c
   917   00115A  32E8               	rrcf	wreg,f,c
   918   00115C  0B07               	andlw	7
   919   00115E  6E26               	movwf	??_gpio_pin_write_logic^0,c
   920   001160  0E01               	movlw	1
   921   001162  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
   922   001164  2A26               	incf	??_gpio_pin_write_logic^0,f,c
   923   001166  EFB7  F008         	goto	u614
   924   00116A                     u615:
   925   00116A  90D8               	bcf	status,0,c
   926   00116C  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   927   00116E                     u614:
   928   00116E  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
   929   001170  EFB5  F008         	goto	u615
   930   001174  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   931   001176  0AFF               	xorlw	255
   932   001178  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
   933   00117A  5024               	movf	gpio_pin_write_logic@pin_config^0,w,c
   934   00117C  6ED9               	movwf	fsr2l,c
   935   00117E  6ADA               	clrf	fsr2h,c
   936   001180  50DF               	movf	223,w,c
   937   001182  0B07               	andlw	7
   938   001184  0D02               	mullw	2
   939   001186  50F3               	movf	243,w,c
   940   001188  0F0B               	addlw	low _lat_registers
   941   00118A  6ED9               	movwf	fsr2l,c
   942   00118C  6ADA               	clrf	fsr2h,c
   943   00118E  CFDE F029          	movff	postinc2,??_gpio_pin_write_logic+3
   944   001192  CFDD F02A          	movff	postdec2,??_gpio_pin_write_logic+4
   945   001196  C029  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   946   00119A  C02A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   947   00119E  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   948   0011A0  16DF               	andwf	indf2,f,c
   949                           
   950                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:                 break;
   951   0011A2  EF10  F009         	goto	l1308
   952   0011A6                     l1302:
   953                           
   954                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 (*lat_registers[pin_config->port] |= (1
      +                           << pin_config->pin));
   955   0011A6  5024               	movf	gpio_pin_write_logic@pin_config^0,w,c
   956   0011A8  6ED9               	movwf	fsr2l,c
   957   0011AA  6ADA               	clrf	fsr2h,c
   958   0011AC  30DF               	rrcf	223,w,c
   959   0011AE  32E8               	rrcf	wreg,f,c
   960   0011B0  32E8               	rrcf	wreg,f,c
   961   0011B2  0B07               	andlw	7
   962   0011B4  6E26               	movwf	??_gpio_pin_write_logic^0,c
   963   0011B6  0E01               	movlw	1
   964   0011B8  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
   965   0011BA  2A26               	incf	??_gpio_pin_write_logic^0,f,c
   966   0011BC  EFE2  F008         	goto	u624
   967   0011C0                     u625:
   968   0011C0  90D8               	bcf	status,0,c
   969   0011C2  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   970   0011C4                     u624:
   971   0011C4  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
   972   0011C6  EFE0  F008         	goto	u625
   973   0011CA  5024               	movf	gpio_pin_write_logic@pin_config^0,w,c
   974   0011CC  6ED9               	movwf	fsr2l,c
   975   0011CE  6ADA               	clrf	fsr2h,c
   976   0011D0  50DF               	movf	223,w,c
   977   0011D2  0B07               	andlw	7
   978   0011D4  0D02               	mullw	2
   979   0011D6  50F3               	movf	243,w,c
   980   0011D8  0F0B               	addlw	low _lat_registers
   981   0011DA  6ED9               	movwf	fsr2l,c
   982   0011DC  6ADA               	clrf	fsr2h,c
   983   0011DE  CFDE F028          	movff	postinc2,??_gpio_pin_write_logic+2
   984   0011E2  CFDD F029          	movff	postdec2,??_gpio_pin_write_logic+3
   985   0011E6  C028  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
   986   0011EA  C029  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
   987   0011EE  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   988   0011F0  12DF               	iorwf	indf2,f,c
   989                           
   990                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:                 break;
   991   0011F2  EF10  F009         	goto	l1308
   992   0011F6                     l1306:
   993   0011F6  5025               	movf	gpio_pin_write_logic@logic^0,w,c
   994   0011F8  6E26               	movwf	??_gpio_pin_write_logic^0,c
   995   0011FA  6A27               	clrf	(??_gpio_pin_write_logic+1)^0,c
   996                           
   997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   998                           ; Switch size 1, requested type "simple"
   999                           ; Number of cases is 1, Range of values is 0 to 0
  1000                           ; switch strategies available:
  1001                           ; Name         Instructions Cycles
  1002                           ; simple_byte            4     3 (average)
  1003                           ;	Chosen strategy is simple_byte
  1004   0011FC  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1005   0011FE  0A00               	xorlw	0	; case 0
  1006   001200  B4D8               	btfsc	status,2,c
  1007   001202  EF05  F009         	goto	l1486
  1008   001206  EFA4  F008         	goto	l1298
  1009   00120A                     l1486:
  1010                           
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 2, Range of values is 0 to 1
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte            7     4 (average)
  1016                           ;	Chosen strategy is simple_byte
  1017   00120A  5026               	movf	??_gpio_pin_write_logic^0,w,c
  1018   00120C  0A00               	xorlw	0	; case 0
  1019   00120E  B4D8               	btfsc	status,2,c
  1020   001210  EFA8  F008         	goto	l1300
  1021   001214  0A01               	xorlw	1	; case 1
  1022   001216  B4D8               	btfsc	status,2,c
  1023   001218  EFD3  F008         	goto	l1302
  1024   00121C  EFA4  F008         	goto	l1298
  1025   001220                     l1308:
  1026                           
  1027                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:     return ret;
  1028   001220  502B               	movf	gpio_pin_write_logic@ret^0,w,c
  1029   001222  0012               	return		;funcret
  1030   001224                     __end_of_gpio_pin_write_logic:
  1031                           	callstack 0
  1032                           
  1033 ;; *************** function _gpio_pin_direction_initialization *****************
  1034 ;; Defined at:
  1035 ;;		line 25 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  pin_config      1    0[COMRAM] PTR const struct .
  1038 ;;		 -> dc_motor_2$dc_motor(2), dc_motor_2(2), dc_motor_1$dc_motor(2), dc_motor_1(2), 
  1039 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  ret             1    6[COMRAM] unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      unsigned char 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1051 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;Total ram usage:        7 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_gpio_pin_initialization
  1061 ;;		_button_initialize
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text8
  1066   001002                     __ptext8:
  1067                           	callstack 0
  1068   001002                     _gpio_pin_direction_initialization:
  1069                           	callstack 27
  1070   001002                     
  1071                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1072   001002  0E01               	movlw	1
  1073   001004  6E2A               	movwf	gpio_pin_direction_initialization@ret^0,c
  1074                           
  1075                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if ((((void*)0) == pin_config) || (pin_config->pin 
      +                          > 8 - 1)) {
  1076   001006  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1077   001008  B4D8               	btfsc	status,2,c
  1078   00100A  EF09  F008         	goto	u541
  1079   00100E  EF0B  F008         	goto	u540
  1080   001012                     u541:
  1081   001012  EF1B  F008         	goto	l1280
  1082   001016                     u540:
  1083   001016  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1084   001018  6ED9               	movwf	fsr2l,c
  1085   00101A  6ADA               	clrf	fsr2h,c
  1086   00101C  30DF               	rrcf	223,w,c
  1087   00101E  32E8               	rrcf	wreg,f,c
  1088   001020  32E8               	rrcf	wreg,f,c
  1089   001022  0B07               	andlw	7
  1090   001024  6E25               	movwf	??_gpio_pin_direction_initialization^0,c
  1091   001026  0E07               	movlw	7
  1092   001028  6425               	cpfsgt	??_gpio_pin_direction_initialization^0,c
  1093   00102A  EF19  F008         	goto	u551
  1094   00102E  EF1B  F008         	goto	u550
  1095   001032                     u551:
  1096   001032  EF72  F008         	goto	l1288
  1097   001036                     u550:
  1098   001036                     l1280:
  1099                           
  1100                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         ret = (STD_ReturnType)0x00;
  1101   001036  0E00               	movlw	0
  1102   001038  6E2A               	movwf	gpio_pin_direction_initialization@ret^0,c
  1103                           
  1104                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     } else {
  1105   00103A  EF88  F008         	goto	l1290
  1106   00103E                     l1282:
  1107                           
  1108                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 (*tris_registers[pin_config->port] &= ~
      +                          (1 << pin_config->pin));
  1109   00103E  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1110   001040  6ED9               	movwf	fsr2l,c
  1111   001042  6ADA               	clrf	fsr2h,c
  1112   001044  30DF               	rrcf	223,w,c
  1113   001046  32E8               	rrcf	wreg,f,c
  1114   001048  32E8               	rrcf	wreg,f,c
  1115   00104A  0B07               	andlw	7
  1116   00104C  6E25               	movwf	??_gpio_pin_direction_initialization^0,c
  1117   00104E  0E01               	movlw	1
  1118   001050  6E26               	movwf	(??_gpio_pin_direction_initialization+1)^0,c
  1119   001052  2A25               	incf	??_gpio_pin_direction_initialization^0,f,c
  1120   001054  EF2E  F008         	goto	u564
  1121   001058                     u565:
  1122   001058  90D8               	bcf	status,0,c
  1123   00105A  3626               	rlcf	(??_gpio_pin_direction_initialization+1)^0,f,c
  1124   00105C                     u564:
  1125   00105C  2E25               	decfsz	??_gpio_pin_direction_initialization^0,f,c
  1126   00105E  EF2C  F008         	goto	u565
  1127   001062  5026               	movf	(??_gpio_pin_direction_initialization+1)^0,w,c
  1128   001064  0AFF               	xorlw	255
  1129   001066  6E27               	movwf	(??_gpio_pin_direction_initialization+2)^0,c
  1130   001068  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1131   00106A  6ED9               	movwf	fsr2l,c
  1132   00106C  6ADA               	clrf	fsr2h,c
  1133   00106E  50DF               	movf	223,w,c
  1134   001070  0B07               	andlw	7
  1135   001072  0D02               	mullw	2
  1136   001074  50F3               	movf	243,w,c
  1137   001076  0F15               	addlw	low _tris_registers
  1138   001078  6ED9               	movwf	fsr2l,c
  1139   00107A  6ADA               	clrf	fsr2h,c
  1140   00107C  CFDE F028          	movff	postinc2,??_gpio_pin_direction_initialization+3
  1141   001080  CFDD F029          	movff	postdec2,??_gpio_pin_direction_initialization+4
  1142   001084  C028  FFD9         	movff	??_gpio_pin_direction_initialization+3,fsr2l
  1143   001088  C029  FFDA         	movff	??_gpio_pin_direction_initialization+4,fsr2h
  1144   00108C  5027               	movf	(??_gpio_pin_direction_initialization+2)^0,w,c
  1145   00108E  16DF               	andwf	indf2,f,c
  1146                           
  1147                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 break;
  1148   001090  EF88  F008         	goto	l1290
  1149   001094                     l1284:
  1150                           
  1151                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:                 (*tris_registers[pin_config->port] |= (
      +                          1 << pin_config->pin));
  1152   001094  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1153   001096  6ED9               	movwf	fsr2l,c
  1154   001098  6ADA               	clrf	fsr2h,c
  1155   00109A  30DF               	rrcf	223,w,c
  1156   00109C  32E8               	rrcf	wreg,f,c
  1157   00109E  32E8               	rrcf	wreg,f,c
  1158   0010A0  0B07               	andlw	7
  1159   0010A2  6E25               	movwf	??_gpio_pin_direction_initialization^0,c
  1160   0010A4  0E01               	movlw	1
  1161   0010A6  6E26               	movwf	(??_gpio_pin_direction_initialization+1)^0,c
  1162   0010A8  2A25               	incf	??_gpio_pin_direction_initialization^0,f,c
  1163   0010AA  EF59  F008         	goto	u574
  1164   0010AE                     u575:
  1165   0010AE  90D8               	bcf	status,0,c
  1166   0010B0  3626               	rlcf	(??_gpio_pin_direction_initialization+1)^0,f,c
  1167   0010B2                     u574:
  1168   0010B2  2E25               	decfsz	??_gpio_pin_direction_initialization^0,f,c
  1169   0010B4  EF57  F008         	goto	u575
  1170   0010B8  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1171   0010BA  6ED9               	movwf	fsr2l,c
  1172   0010BC  6ADA               	clrf	fsr2h,c
  1173   0010BE  50DF               	movf	223,w,c
  1174   0010C0  0B07               	andlw	7
  1175   0010C2  0D02               	mullw	2
  1176   0010C4  50F3               	movf	243,w,c
  1177   0010C6  0F15               	addlw	low _tris_registers
  1178   0010C8  6ED9               	movwf	fsr2l,c
  1179   0010CA  6ADA               	clrf	fsr2h,c
  1180   0010CC  CFDE F027          	movff	postinc2,??_gpio_pin_direction_initialization+2
  1181   0010D0  CFDD F028          	movff	postdec2,??_gpio_pin_direction_initialization+3
  1182   0010D4  C027  FFD9         	movff	??_gpio_pin_direction_initialization+2,fsr2l
  1183   0010D8  C028  FFDA         	movff	??_gpio_pin_direction_initialization+3,fsr2h
  1184   0010DC  5026               	movf	(??_gpio_pin_direction_initialization+1)^0,w,c
  1185   0010DE  12DF               	iorwf	indf2,f,c
  1186                           
  1187                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 break;
  1188   0010E0  EF88  F008         	goto	l1290
  1189   0010E4                     l1288:
  1190   0010E4  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1191   0010E6  6ED9               	movwf	fsr2l,c
  1192   0010E8  6ADA               	clrf	fsr2h,c
  1193   0010EA  BCDF               	btfsc	indf2,6,c
  1194   0010EC  EF7A  F008         	goto	u581
  1195   0010F0  EF7D  F008         	goto	u580
  1196   0010F4                     u581:
  1197   0010F4  0E01               	movlw	1
  1198   0010F6  EF7E  F008         	goto	u586
  1199   0010FA                     u580:
  1200   0010FA  0E00               	movlw	0
  1201   0010FC                     u586:
  1202                           
  1203                           ; Switch size 1, requested type "simple"
  1204                           ; Number of cases is 2, Range of values is 0 to 1
  1205                           ; switch strategies available:
  1206                           ; Name         Instructions Cycles
  1207                           ; simple_byte            7     4 (average)
  1208                           ;	Chosen strategy is simple_byte
  1209   0010FC  0A00               	xorlw	0	; case 0
  1210   0010FE  B4D8               	btfsc	status,2,c
  1211   001100  EF1F  F008         	goto	l1282
  1212   001104  0A01               	xorlw	1	; case 1
  1213   001106  B4D8               	btfsc	status,2,c
  1214   001108  EF4A  F008         	goto	l1284
  1215   00110C  EF1B  F008         	goto	l1280
  1216   001110                     l1290:
  1217                           
  1218                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:     return ret;
  1219   001110  502A               	movf	gpio_pin_direction_initialization@ret^0,w,c
  1220   001112  0012               	return		;funcret
  1221   001114                     __end_of_gpio_pin_direction_initialization:
  1222                           	callstack 0
  1223                           
  1224                           	psect	smallconst
  1225   001000                     __psmallconst:
  1226                           	callstack 0
  1227   001000  00                 	db	0
  1228   001001  00                 	db	0	; dummy byte at the end
  1229   000000                     
  1230                           	psect	rparam
  1231   000000                     
  1232                           	psect	config
  1233                           
  1234                           ; Padding undefined space
  1235   300000                     	org	3145728
  1236   300000  FF                 	db	255
  1237                           
  1238                           ;Config register CONFIG1H @ 0x300001
  1239                           ;	Oscillator Selection bits
  1240                           ;	FOSC = HS, HS oscillator
  1241                           ;	Fail-Safe Clock Monitor Enable bit
  1242                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1243                           ;	Internal/External Oscillator Switchover bit
  1244                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1245   300001                     	org	3145729
  1246   300001  02                 	db	2
  1247                           
  1248                           ;Config register CONFIG2L @ 0x300002
  1249                           ;	Power-up Timer Enable bit
  1250                           ;	PWRTEN = OFF, PWRT disabled
  1251                           ;	Brown-out Reset Enable bits
  1252                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1253                           ;	Brown Out Reset Voltage bits
  1254                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1255   300002                     	org	3145730
  1256   300002  1F                 	db	31
  1257                           
  1258                           ;Config register CONFIG2H @ 0x300003
  1259                           ;	Watchdog Timer Enable bit
  1260                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1261                           ;	Watchdog Timer Postscale Select bits
  1262                           ;	WDTPS = 32768, 1:32768
  1263   300003                     	org	3145731
  1264   300003  1E                 	db	30
  1265                           
  1266                           ; Padding undefined space
  1267   300004                     	org	3145732
  1268   300004  FF                 	db	255
  1269                           
  1270                           ;Config register CONFIG3H @ 0x300005
  1271                           ;	CCP2 MUX bit
  1272                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1273                           ;	PORTB A/D Enable bit
  1274                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1275                           ;	Low-Power Timer1 Oscillator Enable bit
  1276                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1277                           ;	HFINTOSC Fast Start-up
  1278                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  1279                           ;	MCLR Pin Enable bit
  1280                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1281   300005                     	org	3145733
  1282   300005  81                 	db	129
  1283                           
  1284                           ;Config register CONFIG4L @ 0x300006
  1285                           ;	Stack Full/Underflow Reset Enable bit
  1286                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1287                           ;	Single-Supply ICSP Enable bit
  1288                           ;	LVP = OFF, Single-Supply ICSP disabled
  1289                           ;	Extended Instruction Set Enable bit
  1290                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1291                           ;	Background Debugger Enable bit
  1292                           ;	DEBUG = 0x1, unprogrammed default
  1293   300006                     	org	3145734
  1294   300006  81                 	db	129
  1295                           
  1296                           ; Padding undefined space
  1297   300007                     	org	3145735
  1298   300007  FF                 	db	255
  1299                           
  1300                           ;Config register CONFIG5L @ 0x300008
  1301                           ;	Code Protection Block 0
  1302                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1303                           ;	Code Protection Block 1
  1304                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1305                           ;	Code Protection Block 2
  1306                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1307                           ;	Code Protection Block 3
  1308                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1309   300008                     	org	3145736
  1310   300008  0F                 	db	15
  1311                           
  1312                           ;Config register CONFIG5H @ 0x300009
  1313                           ;	Boot Block Code Protection bit
  1314                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1315                           ;	Data EEPROM Code Protection bit
  1316                           ;	CPD = OFF, Data EEPROM not code-protected
  1317   300009                     	org	3145737
  1318   300009  C0                 	db	192
  1319                           
  1320                           ;Config register CONFIG6L @ 0x30000A
  1321                           ;	Write Protection Block 0
  1322                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1323                           ;	Write Protection Block 1
  1324                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1325                           ;	Write Protection Block 2
  1326                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1327                           ;	Write Protection Block 3
  1328                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1329   30000A                     	org	3145738
  1330   30000A  0F                 	db	15
  1331                           
  1332                           ;Config register CONFIG6H @ 0x30000B
  1333                           ;	Configuration Register Write Protection bit
  1334                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1335                           ;	Boot Block Write Protection bit
  1336                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1337                           ;	Data EEPROM Write Protection bit
  1338                           ;	WRTD = OFF, Data EEPROM not write-protected
  1339   30000B                     	org	3145739
  1340   30000B  E0                 	db	224
  1341                           
  1342                           ;Config register CONFIG7L @ 0x30000C
  1343                           ;	Table Read Protection Block 0
  1344                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1345                           ;	Table Read Protection Block 1
  1346                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1347                           ;	Table Read Protection Block 2
  1348                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1349                           ;	Table Read Protection Block 3
  1350                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1351   30000C                     	org	3145740
  1352   30000C  0F                 	db	15
  1353                           
  1354                           ;Config register CONFIG7H @ 0x30000D
  1355                           ;	Boot Block Table Read Protection bit
  1356                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1357   30000D                     	org	3145741
  1358   30000D  40                 	db	64
  1359                           tosu	equ	0xFFF
  1360                           tosh	equ	0xFFE
  1361                           tosl	equ	0xFFD
  1362                           stkptr	equ	0xFFC
  1363                           pclatu	equ	0xFFB
  1364                           pclath	equ	0xFFA
  1365                           pcl	equ	0xFF9
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           prodh	equ	0xFF4
  1371                           prodl	equ	0xFF3
  1372                           indf0	equ	0xFEF
  1373                           postinc0	equ	0xFEE
  1374                           postdec0	equ	0xFED
  1375                           preinc0	equ	0xFEC
  1376                           plusw0	equ	0xFEB
  1377                           fsr0h	equ	0xFEA
  1378                           fsr0l	equ	0xFE9
  1379                           wreg	equ	0xFE8
  1380                           indf1	equ	0xFE7
  1381                           postinc1	equ	0xFE6
  1382                           postdec1	equ	0xFE5
  1383                           preinc1	equ	0xFE4
  1384                           plusw1	equ	0xFE3
  1385                           fsr1h	equ	0xFE2
  1386                           fsr1l	equ	0xFE1
  1387                           bsr	equ	0xFE0
  1388                           indf2	equ	0xFDF
  1389                           postinc2	equ	0xFDE
  1390                           postdec2	equ	0xFDD
  1391                           preinc2	equ	0xFDC
  1392                           plusw2	equ	0xFDB
  1393                           fsr2h	equ	0xFDA
  1394                           fsr2l	equ	0xFD9
  1395                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        35
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      57
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    dc_motor_initialize@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_left@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_right@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_stop@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    gpio_pin_direction_initialization@pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor(COMRAM[2]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialization@pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor(COMRAM[2]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor(COMRAM[2]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlll[1]), PORTB(BITBIGSFRllh[1]), PORTC(BITBIGSFRllh[1]), PORTD(BITBIGSFRllh[1]), 
		 -> PORTE(BITBIGSFRllh[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _application_initialize->_dc_motor_initialize
    _dc_motor_initialize->_gpio_pin_initialization
    _gpio_pin_initialization->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9109
                                             11 COMRAM     2     2      0
             _application_initialize
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    2093
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  2     1      1    2093
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   2     1      1    2093
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0    2830
                _dc_motor_initialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  2     1      1    2830
                                             10 COMRAM     1     0      1
            _gpio_pin_initialization
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialization                              3     2      1    2604
                                              8 COMRAM     2     1      1
  _gpio_pin_direction_initialization
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    1851
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialization                    7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _dc_motor_initialize
       _gpio_pin_initialization
         _gpio_pin_direction_initialization
         _gpio_pin_write_logic
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      29        0.0%
BANK13             100      0       0      30        0.0%
BITBANK12          100      0       0      27        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      25        0.0%
BANK11             100      0       0      26        0.0%
BITBANK10          100      0       0      23        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      21        0.0%
BANK9              100      0       0      22        0.0%
BITBANK8           100      0       0      19        0.0%
BANK8              100      0       0      20        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK14           EF      0       0      31        0.0%
BANK14              EF      0       0      32        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK15           60      0       0      33        0.0%
BANK15              60      0       0      34        0.0%
BIGRAM_1            60      0       0      45        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      39       1       60.0%
BITBIGSFR_1         37      0       0      39        0.0%
BITBIGSFRlll        20      0       0      43        0.0%
BITBIGSFR_5          C      0       0      35        0.0%
BITBIGSFR_2          6      0       0      38        0.0%
BITBIGSFRh           5      0       0      40        0.0%
BITBIGSFRllh         4      0       0      42        0.0%
BITBIGSFRlh          4      0       0      41        0.0%
BITBIGSFR_4          3      0       0      36        0.0%
BITBIGSFR_3          3      0       0      37        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      44        0.0%
DATA                 0      0      39      47        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 22 19:56:29 2024

                                         l41 1362                                           l51 132A  
                                         l36 13F6                                           l46 139A  
                                        l158 1112                                          l254 142C  
                                        l248 1228                                          l177 1222  
                                        l198 12F2                                          u600 1148  
                                        u601 1144                                          u540 1016  
                                        u541 1012                                          u550 1036  
                                        u614 116E                                          u630 12B0  
                                        u551 1032                                          u615 116A  
                                        u631 12AC                                          u624 11C4  
                                        u640 12D0                                          u625 11C0  
                                        u641 12CC                                          u650 13E2  
                                        u651 13DE                                          u580 10FA  
                                        u564 105C                                          u660 1340  
                                        u581 10F4                                          u565 1058  
                                        u661 133C                                          u574 10B2  
                                        u590 1128                                          u670 1378  
                                        u575 10AE                                          u591 1124  
                                        u671 1374                                          u680 1308  
                                        u681 1304                                          u586 10FC  
                                        u827 1246                                          u837 1274  
                                        _ret 001F                          led_initialize@F3143 0037  
                                        wreg 0FE8                        relay_initialize@F3137 0033  
                                       l1300 1150                                         l1302 11A6  
                                       l1320 12D0                                         l1306 11F6  
                                       l1322 12D4                                         l1330 13E6  
                                       l1308 1220                                         l1316 12A0  
                                       l1340 1360                                         l1318 12B0  
                                       l1326 13D2                                         l1350 1398  
                                       l1334 132C                                         l1280 1036  
                                       l1328 13E2                                         l1344 1364  
                                       l1336 1340                                         l1360 1328  
                                       l1282 103E                                         l1290 1110  
                                       l1346 1378                                         l1338 1348  
                                       l1354 12F4                                         l1284 1094  
                                       l1276 1002                                         l1364 141C  
                                       l1348 1380                                         l1356 1308  
                                       l1278 1016                                         l1294 1114  
                                       l1358 1310                                         l1288 10E4  
                                       l1296 1128                                         l1480 126A  
                                       l1472 1224                                         l1298 1148  
                                       l1474 123C                                         l1476 1256  
                                       l1486 120A                                         l1478 1260  
                                       _LATA 0F89                                         _LATB 0F8A  
                                       _LATC 0F8B                                         _LATD 0F8C  
                                       _LATE 0F8D                                         _main 1224  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                                       prodl 0FF3                                         start 0002  
                               ___param_bank 0000                         _gpio_pin_write_logic 1114  
                                      ?_main 0024                     ??_application_initialize 002F  
                        relay_turn_off@F3147 0031                                        _PORTA 0F80  
                                      _PORTB 0F81                                        _PORTC 0F82  
                                      _PORTD 0F83                                        _PORTE 0F84  
                                      _TRISA 0F92                                        _TRISB 0F93  
                                      _TRISC 0F94                                        _TRISD 0F95  
                                      _TRISE 0F96                                        tablat 0FF5  
                                      status 0FD8                              __initialization 139C  
                               __end_of_main 12A0                        ?_gpio_pin_write_logic 0024  
                              _lat_registers 000B                  __end_of_dc_motor_initialize 13F8  
                                     ??_main 002F                                __activetblptr 0002  
                           led_turn_on@F3148 0036                  __end_of_dc_motor_move_right 1364  
                                     clear_0 13C2                                       isa$std 0001  
                               __pdataCOMRAM 0001                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                                   __accesstop 0060  
                    __end_of__initialization 13C8                                ___rparam_used 0001  
                     ??_gpio_pin_write_logic 0026                               __pcstackCOMRAM 0024  
                                 _dc_motor_1 0022                                   _dc_motor_2 0020  
                     _application_initialize 141C                            led_turn_off@F3153 0035  
                       led_turn_toggle@F3158 0034                               _tris_registers 0015  
                                    __Hparam 0000                                      __Lparam 0000  
                      dc_motor_move_left@ret 002D                                 __psmallconst 1000  
                                    __pcinit 139C                                      __ramtop 1000  
                                    __ptext0 1224                                      __ptext1 12F4  
                                    __ptext2 132C                                      __ptext3 1364  
                                    __ptext4 141C                                      __ptext5 13D2  
                                    __ptext6 12A0                                      __ptext7 1114  
                                    __ptext8 1002                         end_of_initialization 13C8  
                              __Lmediumconst 0000            gpio_pin_initialization@pin_config 002C  
                              _dc_motor_stop 12F4                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc2 0FDE                                   _motor_pin1 0039  
                                 _motor_pin2 0038                  dc_motor_move_right@dc_motor 002C  
                    _gpio_pin_initialization 12A0                               ?_dc_motor_stop 002C  
                         relay_turn_on@F3142 0032                                __pidataCOMRAM 13F8  
                        start_initialization 139C                      ?_application_initialize 0024  
       gpio_pin_direction_initialization@ret 002A                   __end_of_dc_motor_move_left 139C  
                  ??_gpio_pin_initialization 002D                             dc_motor_stop@ret 002D  
                                __pbssCOMRAM 0031               __end_of_application_initialize 142E  
                 dc_motor_move_left@dc_motor 002C               gpio_pin_write_logic@pin_config 0024  
                            ??_dc_motor_stop 002D                    gpio_pin_write_logic@logic 0025  
                                __smallconst 1000              __end_of_gpio_pin_initialization 12F4  
                        _dc_motor_initialize 13D2    __end_of_gpio_pin_direction_initialization 1114  
        ??_gpio_pin_direction_initialization 0025           ?_gpio_pin_direction_initialization 0024  
          _gpio_pin_direction_initialization 1002                         ?_dc_motor_initialize 002E  
                    gpio_pin_write_logic@ret 002B                                    copy_data0 13B0  
                        _dc_motor_move_right 132C                                     __Hrparam 0000  
                                   __Lrparam 0000                        dc_motor_stop@dc_motor 002C  
                       ?_dc_motor_move_right 002C  gpio_pin_direction_initialization@pin_config 0024  
                      ??_dc_motor_initialize 002F                       dc_motor_move_right@ret 002D  
                                   isa$xinst 0000                  dc_motor_initialize@dc_motor 002E  
                      ??_dc_motor_move_right 002D                           _dc_motor_move_left 1364  
               __end_of_gpio_pin_write_logic 1224                          ?_dc_motor_move_left 002C  
                       ??_dc_motor_move_left 002D                               _port_registers 0001  
                      __end_of_dc_motor_stop 132C                     ?_gpio_pin_initialization 002C  
