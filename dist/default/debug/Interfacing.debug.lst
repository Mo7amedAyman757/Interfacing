

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Sep 01 00:57:42 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 12/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F46K20 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     
    63                           	psect	idataCOMRAM
    64   001600                     __pidataCOMRAM:
    65                           	callstack 0
    66                           
    67                           ;initializer for _port_registers
    68   001600  80                 	db	128
    69   001601  0F                 	db	15
    70   001602  81                 	db	129
    71   001603  0F                 	db	15
    72   001604  82                 	db	130
    73   001605  0F                 	db	15
    74   001606  83                 	db	131
    75   001607  0F                 	db	15
    76   001608  84                 	db	132
    77   001609  0F                 	db	15
    78                           
    79                           ;initializer for _lat_registers
    80   00160A  89                 	db	137
    81   00160B  0F                 	db	15
    82   00160C  8A                 	db	138
    83   00160D  0F                 	db	15
    84   00160E  8B                 	db	139
    85   00160F  0F                 	db	15
    86   001610  8C                 	db	140
    87   001611  0F                 	db	15
    88   001612  8D                 	db	141
    89   001613  0F                 	db	15
    90                           
    91                           ;initializer for _tris_registers
    92   001614  92                 	db	146
    93   001615  0F                 	db	15
    94   001616  93                 	db	147
    95   001617  0F                 	db	15
    96   001618  94                 	db	148
    97   001619  0F                 	db	15
    98   00161A  95                 	db	149
    99   00161B  0F                 	db	15
   100   00161C  96                 	db	150
   101   00161D  0F                 	db	15
   102                           
   103                           ;initializer for _lcd_2
   104   00161E  32                 	db	50
   105   00161F  3A                 	db	58
   106   001620  03                 	db	3
   107   001621  0B                 	db	11
   108   001622  13                 	db	19
   109   001623  1B                 	db	27
   110   001624  23                 	db	35
   111   001625  2B                 	db	43
   112   001626  33                 	db	51
   113   001627  3B                 	db	59
   114                           
   115                           ;initializer for _lcd_1
   116   001628  02                 	db	2
   117   001629  0A                 	db	10
   118   00162A  12                 	db	18
   119   00162B  1A                 	db	26
   120   00162C  22                 	db	34
   121   00162D  2A                 	db	42
   122                           
   123                           	psect	smallconst
   124   001000                     __psmallconst:
   125                           	callstack 0
   126   001000  00                 	db	0
   127   001001                     _btn_values:
   128                           	callstack 0
   129   001001  37                 	db	55
   130   001002  38                 	db	56
   131   001003  39                 	db	57
   132   001004  2F                 	db	47
   133   001005  34                 	db	52
   134   001006  35                 	db	53
   135   001007  36                 	db	54
   136   001008  2A                 	db	42
   137   001009  31                 	db	49
   138   00100A  32                 	db	50
   139   00100B  33                 	db	51
   140   00100C  2D                 	db	45
   141   00100D  23                 	db	35
   142   00100E  30                 	db	48
   143   00100F  3D                 	db	61
   144   001010  2B                 	db	43
   145   001011                     __end_of_btn_values:
   146                           	callstack 0
   147   000000                     _PORTA	set	3968
   148   000000                     _LATA	set	3977
   149   000000                     _TRISA	set	3986
   150   000000                     _TRISE	set	3990
   151   000000                     _TRISD	set	3989
   152   000000                     _TRISC	set	3988
   153   000000                     _TRISB	set	3987
   154   000000                     _LATE	set	3981
   155   000000                     _LATD	set	3980
   156   000000                     _LATC	set	3979
   157   000000                     _LATB	set	3978
   158   000000                     _PORTE	set	3972
   159   000000                     _PORTD	set	3971
   160   000000                     _PORTC	set	3970
   161   000000                     _PORTB	set	3969
   162   001011  00                 	db	0	; dummy byte at the end
   163   000000                     
   164                           ; #config settings
   165                           
   166                           	psect	cinit
   167   0015CA                     __pcinit:
   168                           	callstack 0
   169   0015CA                     start_initialization:
   170                           	callstack 0
   171   0015CA                     __initialization:
   172                           	callstack 0
   173                           
   174                           ; Initialize objects allocated to COMRAM (46 bytes)
   175                           ; load TBLPTR registers with __pidataCOMRAM
   176   0015CA  0E00               	movlw	low __pidataCOMRAM
   177   0015CC  6EF6               	movwf	tblptrl,c
   178   0015CE  0E16               	movlw	high __pidataCOMRAM
   179   0015D0  6EF7               	movwf	tblptrh,c
   180   0015D2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   181   0015D4  6EF8               	movwf	tblptru,c
   182   0015D6  EE00  F001         	lfsr	0,__pdataCOMRAM
   183   0015DA  EE10 F02E          	lfsr	1,46
   184   0015DE                     copy_data0:
   185   0015DE  0009               	tblrd		*+
   186   0015E0  CFF5 FFEE          	movff	tablat,postinc0
   187   0015E4  50E5               	movf	postdec1,w,c
   188   0015E6  50E1               	movf	fsr1l,w,c
   189   0015E8  E1FA               	bnz	copy_data0
   190                           
   191                           ; Clear objects allocated to COMRAM (7 bytes)
   192   0015EA  EE00  F047         	lfsr	0,__pbssCOMRAM
   193   0015EE  0E07               	movlw	7
   194   0015F0                     clear_0:
   195   0015F0  6AEE               	clrf	postinc0,c
   196   0015F2  06E8               	decf	wreg,f,c
   197   0015F4  E1FD               	bnz	clear_0
   198   0015F6                     end_of_initialization:
   199                           	callstack 0
   200   0015F6                     __end_of__initialization:
   201                           	callstack 0
   202   0015F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   203   0015F8  6EF8               	movwf	tblptru,c
   204   0015FA  0100               	movlb	0
   205   0015FC  EF6D  F00A         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208   000047                     __pbssCOMRAM:
   209                           	callstack 0
   210   000047                     relay_turn_off@F3147:
   211                           	callstack 0
   212   000047                     	ds	1
   213   000048                     relay_turn_on@F3142:
   214                           	callstack 0
   215   000048                     	ds	1
   216   000049                     relay_initialize@F3137:
   217                           	callstack 0
   218   000049                     	ds	1
   219   00004A                     led_turn_toggle@F3158:
   220                           	callstack 0
   221   00004A                     	ds	1
   222   00004B                     led_turn_off@F3153:
   223                           	callstack 0
   224   00004B                     	ds	1
   225   00004C                     led_turn_on@F3148:
   226                           	callstack 0
   227   00004C                     	ds	1
   228   00004D                     led_initialize@F3143:
   229                           	callstack 0
   230   00004D                     	ds	1
   231                           
   232                           	psect	dataCOMRAM
   233   000001                     __pdataCOMRAM:
   234                           	callstack 0
   235   000001                     _port_registers:
   236                           	callstack 0
   237   000001                     	ds	10
   238   00000B                     _lat_registers:
   239                           	callstack 0
   240   00000B                     	ds	10
   241   000015                     _tris_registers:
   242                           	callstack 0
   243   000015                     	ds	10
   244   00001F                     _lcd_2:
   245                           	callstack 0
   246   00001F                     	ds	10
   247   000029                     _lcd_1:
   248                           	callstack 0
   249   000029                     	ds	6
   250                           
   251                           	psect	cstackCOMRAM
   252   00002F                     __pcstackCOMRAM:
   253                           	callstack 0
   254   00002F                     gpio_pin_direction_initialization@pin_config:
   255                           	callstack 0
   256   00002F                     gpio_pin_write_logic@pin_config:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x0
   260   00002F                     	ds	1
   261   000030                     ??_gpio_pin_direction_initialization:
   262   000030                     gpio_pin_write_logic@logic:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x1
   266   000030                     	ds	1
   267   000031                     ??_gpio_pin_write_logic:
   268                           
   269                           ; 1 bytes @ 0x2
   270   000031                     	ds	4
   271   000035                     gpio_pin_direction_initialization@ret:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x6
   275   000035                     	ds	1
   276   000036                     gpio_pin_write_logic@ret:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x7
   280   000036                     	ds	1
   281   000037                     gpio_pin_initialization@pin_config:
   282                           	callstack 0
   283   000037                     lcd_8bits_send_enable_signal@lcd:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x8
   287   000037                     	ds	1
   288   000038                     ??_gpio_pin_initialization:
   289   000038                     lcd_8bits_send_enable_signal@ret:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x9
   293   000038                     	ds	1
   294   000039                     gpio_pin_initialization@ret:
   295                           	callstack 0
   296   000039                     lcd_8bit_send_command@lcd:
   297                           	callstack 0
   298   000039                     lcd_8bit_send_char_data@lcd:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0xA
   302   000039                     	ds	1
   303   00003A                     lcd_4bit_initialize@lcd:
   304                           	callstack 0
   305   00003A                     lcd_8bit_send_command@command:
   306                           	callstack 0
   307   00003A                     lcd_8bit_send_char_data@data:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0xB
   311   00003A                     	ds	1
   312   00003B                     ??_lcd_8bit_send_command:
   313   00003B                     ??_lcd_8bit_send_char_data:
   314   00003B                     lcd_4bit_initialize@ret:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0xC
   318   00003B                     	ds	1
   319   00003C                     lcd_4bit_initialize@l_data_pins_counter:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0xD
   323   00003C                     	ds	1
   324   00003D                     lcd_8bit_send_command@ret:
   325                           	callstack 0
   326   00003D                     lcd_8bit_send_char_data@ret:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0xE
   330   00003D                     	ds	1
   331   00003E                     lcd_8bit_send_command@l_pin_counter:
   332                           	callstack 0
   333   00003E                     lcd_8bit_send_char_data@l_pin_counter:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0xF
   337   00003E                     	ds	1
   338   00003F                     lcd_8bit_initialize@lcd:
   339                           	callstack 0
   340   00003F                     lcd_8bit_set_cursor@lcd:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x10
   344   00003F                     	ds	1
   345   000040                     ??_lcd_8bit_initialize:
   346   000040                     lcd_8bit_set_cursor@row:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x11
   350   000040                     	ds	1
   351   000041                     lcd_8bit_initialize@l_data_pins_counter:
   352                           	callstack 0
   353   000041                     lcd_8bit_set_cursor@col:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x12
   357   000041                     	ds	1
   358   000042                     lcd_8bit_initialize@ret:
   359                           	callstack 0
   360   000042                     lcd_8bit_send_char_data_pos@lcd:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x13
   364   000042                     	ds	1
   365   000043                     lcd_8bit_send_char_data_pos@row:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x14
   369   000043                     	ds	1
   370   000044                     lcd_8bit_send_char_data_pos@col:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x15
   374   000044                     	ds	1
   375   000045                     lcd_8bit_send_char_data_pos@data:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x16
   379   000045                     	ds	1
   380   000046                     lcd_8bit_send_char_data_pos@ret:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x17
   384   000046                     	ds	1
   385   000047                     
   386                           ; 1 bytes @ 0x18
   387 ;;
   388 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   389 ;;
   390 ;; *************** function _main *****************
   391 ;; Defined at:
   392 ;;		line 10 in file "application.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;  ret             1    0        unsigned char 
   397 ;; Return value:  Size  Location     Type
   398 ;;                  2  291[None  ] int 
   399 ;; Registers used:
   400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels required when called: 6
   412 ;; This function calls:
   413 ;;		_application_initialize
   414 ;;		_lcd_8bit_send_char_data_pos
   415 ;; This function is called by:
   416 ;;		Startup code after reset
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           	psect	text0
   421   0014DA                     __ptext0:
   422                           	callstack 0
   423   0014DA                     _main:
   424                           	callstack 25
   425   0014DA                     
   426                           ;application.c: 12:     application_initialize();
   427   0014DA  EC33  F00B         	call	_application_initialize	;wreg free
   428   0014DE                     l2267:
   429   0014DE  0E1F               	movlw	low _lcd_2
   430   0014E0  6E42               	movwf	lcd_8bit_send_char_data_pos@lcd^0,c
   431   0014E2  0E01               	movlw	1
   432   0014E4  6E43               	movwf	lcd_8bit_send_char_data_pos@row^0,c
   433   0014E6  0E01               	movlw	1
   434   0014E8  6E44               	movwf	lcd_8bit_send_char_data_pos@col^0,c
   435   0014EA  0E41               	movlw	65
   436   0014EC  6E45               	movwf	lcd_8bit_send_char_data_pos@data^0,c
   437   0014EE  ECC7  F00A         	call	_lcd_8bit_send_char_data_pos	;wreg free
   438   0014F2  0E1F               	movlw	low _lcd_2
   439   0014F4  6E42               	movwf	lcd_8bit_send_char_data_pos@lcd^0,c
   440   0014F6  0E02               	movlw	2
   441   0014F8  6E43               	movwf	lcd_8bit_send_char_data_pos@row^0,c
   442   0014FA  0E01               	movlw	1
   443   0014FC  6E44               	movwf	lcd_8bit_send_char_data_pos@col^0,c
   444   0014FE  0E42               	movlw	66
   445   001500  6E45               	movwf	lcd_8bit_send_char_data_pos@data^0,c
   446   001502  ECC7  F00A         	call	_lcd_8bit_send_char_data_pos	;wreg free
   447   001506  0E1F               	movlw	low _lcd_2
   448   001508  6E42               	movwf	lcd_8bit_send_char_data_pos@lcd^0,c
   449   00150A  0E01               	movlw	1
   450   00150C  6E43               	movwf	lcd_8bit_send_char_data_pos@row^0,c
   451   00150E  0E02               	movlw	2
   452   001510  6E44               	movwf	lcd_8bit_send_char_data_pos@col^0,c
   453   001512  0E42               	movlw	66
   454   001514  6E45               	movwf	lcd_8bit_send_char_data_pos@data^0,c
   455   001516  ECC7  F00A         	call	_lcd_8bit_send_char_data_pos	;wreg free
   456   00151A  0E1F               	movlw	low _lcd_2
   457   00151C  6E42               	movwf	lcd_8bit_send_char_data_pos@lcd^0,c
   458   00151E  0E02               	movlw	2
   459   001520  6E43               	movwf	lcd_8bit_send_char_data_pos@row^0,c
   460   001522  0E02               	movlw	2
   461   001524  6E44               	movwf	lcd_8bit_send_char_data_pos@col^0,c
   462   001526  0E41               	movlw	65
   463   001528  6E45               	movwf	lcd_8bit_send_char_data_pos@data^0,c
   464   00152A  ECC7  F00A         	call	_lcd_8bit_send_char_data_pos	;wreg free
   465   00152E  EF6F  F00A         	goto	l2267
   466   001532  EF01  F000         	goto	start
   467   001536                     __end_of_main:
   468                           	callstack 0
   469                           
   470 ;; *************** function _lcd_8bit_send_char_data_pos *****************
   471 ;; Defined at:
   472 ;;		line 223 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  lcd             1   19[COMRAM] PTR const struct .
   475 ;;		 -> lcd_2(10), 
   476 ;;  row             1   20[COMRAM] unsigned char 
   477 ;;  col             1   21[COMRAM] unsigned char 
   478 ;;  data            1   22[COMRAM] unsigned char 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  ret             1   23[COMRAM] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      unsigned char 
   483 ;; Registers used:
   484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;Total ram usage:        5 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; Hardware stack levels required when called: 4
   497 ;; This function calls:
   498 ;;		_lcd_8bit_send_char_data
   499 ;;		_lcd_8bit_set_cursor
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text1
   506   00158E                     __ptext1:
   507                           	callstack 0
   508   00158E                     _lcd_8bit_send_char_data_pos:
   509                           	callstack 26
   510   00158E                     
   511                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 225:     if (((void*)0) == lcd) {
   512   00158E  5042               	movf	lcd_8bit_send_char_data_pos@lcd^0,w,c
   513   001590  A4D8               	btfss	status,2,c
   514   001592  EFCD  F00A         	goto	u1071
   515   001596  EFCF  F00A         	goto	u1070
   516   00159A                     u1071:
   517   00159A  EFD3  F00A         	goto	l2009
   518   00159E                     u1070:
   519   00159E                     
   520                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 226:         ret = (STD_ReturnType)0x00;
   521   00159E  0E00               	movlw	0
   522   0015A0  6E46               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
   523                           
   524                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 227:     } else {
   525   0015A2  EFE3  F00A         	goto	l2011
   526   0015A6                     l2009:
   527                           
   528                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 228:         ret = lcd_8bit_set_cursor(lcd, row, col);
   529   0015A6  C042  F03F         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_set_cursor@lcd
   530   0015AA  C043  F040         	movff	lcd_8bit_send_char_data_pos@row,lcd_8bit_set_cursor@row
   531   0015AE  C044  F041         	movff	lcd_8bit_send_char_data_pos@col,lcd_8bit_set_cursor@col
   532   0015B2  EC8D  F009         	call	_lcd_8bit_set_cursor	;wreg free
   533   0015B6  6E46               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
   534                           
   535                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 229:         ret = lcd_8bit_send_char_data(lcd, data);
   536   0015B8  C042  F039         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_send_char_data@lcd
   537   0015BC  C045  F03A         	movff	lcd_8bit_send_char_data_pos@data,lcd_8bit_send_char_data@data
   538   0015C0  ECC8  F009         	call	_lcd_8bit_send_char_data	;wreg free
   539   0015C4  6E46               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
   540   0015C6                     l2011:
   541                           
   542                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 232:     return ret;
   543   0015C6  5046               	movf	lcd_8bit_send_char_data_pos@ret^0,w,c
   544   0015C8  0012               	return		;funcret
   545   0015CA                     __end_of_lcd_8bit_send_char_data_pos:
   546                           	callstack 0
   547                           
   548 ;; *************** function _lcd_8bit_set_cursor *****************
   549 ;; Defined at:
   550 ;;		line 315 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  lcd             1   16[COMRAM] PTR const struct .
   553 ;;		 -> lcd_2(10), 
   554 ;;  row             1   17[COMRAM] unsigned char 
   555 ;;  col             1   18[COMRAM] unsigned char 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  ret             1    0        unsigned char 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      unsigned char 
   560 ;; Registers used:
   561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   567 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;Total ram usage:        3 bytes
   572 ;; Hardware stack levels used: 1
   573 ;; Hardware stack levels required when called: 3
   574 ;; This function calls:
   575 ;;		_lcd_8bit_send_command
   576 ;; This function is called by:
   577 ;;		_lcd_8bit_send_char_data_pos
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text2
   582   00131A                     __ptext2:
   583                           	callstack 0
   584   00131A                     _lcd_8bit_set_cursor:
   585                           	callstack 26
   586   00131A                     
   587                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 317:     col--;
   588   00131A  0641               	decf	lcd_8bit_set_cursor@col^0,f,c
   589                           
   590                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 318:     switch (row) {
   591   00131C  EFB4  F009         	goto	l2001
   592   001320                     l1991:
   593   001320  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   594   001324  5041               	movf	lcd_8bit_set_cursor@col^0,w,c
   595   001326  0F80               	addlw	128
   596   001328  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   597   00132A  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
   598                           
   599                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 320:             break;
   600   00132E  EFC7  F009         	goto	l419
   601   001332                     l1993:
   602   001332  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   603   001336  5041               	movf	lcd_8bit_set_cursor@col^0,w,c
   604   001338  0FC0               	addlw	192
   605   00133A  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   606   00133C  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
   607                           
   608                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 322:             break;
   609   001340  EFC7  F009         	goto	l419
   610   001344                     l1995:
   611   001344  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   612   001348  5041               	movf	lcd_8bit_set_cursor@col^0,w,c
   613   00134A  0F94               	addlw	148
   614   00134C  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   615   00134E  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
   616                           
   617                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 324:             break;
   618   001352  EFC7  F009         	goto	l419
   619   001356                     l1997:
   620   001356  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   621   00135A  5041               	movf	lcd_8bit_set_cursor@col^0,w,c
   622   00135C  0FD0               	addlw	208
   623   00135E  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   624   001360  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
   625                           
   626                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 326:             break;
   627   001364  EFC7  F009         	goto	l419
   628   001368                     l2001:
   629   001368  5040               	movf	lcd_8bit_set_cursor@row^0,w,c
   630                           
   631                           ; Switch size 1, requested type "simple"
   632                           ; Number of cases is 4, Range of values is 1 to 4
   633                           ; switch strategies available:
   634                           ; Name         Instructions Cycles
   635                           ; simple_byte           13     7 (average)
   636                           ;	Chosen strategy is simple_byte
   637   00136A  0A01               	xorlw	1	; case 1
   638   00136C  B4D8               	btfsc	status,2,c
   639   00136E  EF90  F009         	goto	l1991
   640   001372  0A03               	xorlw	3	; case 2
   641   001374  B4D8               	btfsc	status,2,c
   642   001376  EF99  F009         	goto	l1993
   643   00137A  0A01               	xorlw	1	; case 3
   644   00137C  B4D8               	btfsc	status,2,c
   645   00137E  EFA2  F009         	goto	l1995
   646   001382  0A07               	xorlw	7	; case 4
   647   001384  B4D8               	btfsc	status,2,c
   648   001386  EFAB  F009         	goto	l1997
   649   00138A  EFC7  F009         	goto	l419
   650   00138E                     l419:
   651   00138E  0012               	return		;funcret
   652   001390                     __end_of_lcd_8bit_set_cursor:
   653                           	callstack 0
   654                           
   655 ;; *************** function _lcd_8bit_send_char_data *****************
   656 ;; Defined at:
   657 ;;		line 206 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  lcd             1   10[COMRAM] PTR const struct .
   660 ;;		 -> lcd_2(10), 
   661 ;;  data            1   11[COMRAM] unsigned char 
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
   664 ;;  ret             1   14[COMRAM] unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      unsigned char 
   667 ;; Registers used:
   668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;Total ram usage:        6 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; Hardware stack levels required when called: 2
   681 ;; This function calls:
   682 ;;		_gpio_pin_write_logic
   683 ;;		_lcd_8bits_send_enable_signal
   684 ;; This function is called by:
   685 ;;		_lcd_8bit_send_char_data_pos
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text3
   690   001390                     __ptext3:
   691                           	callstack 0
   692   001390                     _lcd_8bit_send_char_data:
   693                           	callstack 27
   694   001390                     
   695                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 208:     uint8 l_pin_counter = 0;
   696   001390  0E00               	movlw	0
   697   001392  6E3E               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   698                           
   699                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 209:     if (((void*)0) == lcd) {
   700   001394  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   701   001396  A4D8               	btfss	status,2,c
   702   001398  EFD0  F009         	goto	u1041
   703   00139C  EFD2  F009         	goto	u1040
   704   0013A0                     u1041:
   705   0013A0  EFD6  F009         	goto	l1967
   706   0013A4                     u1040:
   707   0013A4                     
   708                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 210:         ret = (STD_ReturnType)0x00;
   709   0013A4  0E00               	movlw	0
   710   0013A6  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   711                           
   712                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 211:     } else {
   713   0013A8  EF01  F00A         	goto	l1983
   714   0013AC                     l1967:
   715   0013AC  C039  F02F         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
   716   0013B0  0E01               	movlw	1
   717   0013B2  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   718   0013B4  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
   719   0013B8                     
   720                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 213:         for (l_pin_counter = 0; l_pin_counter < 8
      +                          ; l_pin_counter++) {
   721   0013B8  0E00               	movlw	0
   722   0013BA  6E3E               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   723   0013BC                     l1975:
   724   0013BC  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   725   0013BE  243E               	addwf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
   726   0013C0  0F02               	addlw	2
   727   0013C2  6E2F               	movwf	gpio_pin_write_logic@pin_config^0,c
   728   0013C4  C03E  F03B         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data
   729   0013C8  C03A  F03C         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
   730   0013CC  2A3B               	incf	??_lcd_8bit_send_char_data^0,f,c
   731   0013CE  EFEB  F009         	goto	u1054
   732   0013D2                     u1055:
   733   0013D2  90D8               	bcf	status,0,c
   734   0013D4  323C               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
   735   0013D6                     u1054:
   736   0013D6  2E3B               	decfsz	??_lcd_8bit_send_char_data^0,f,c
   737   0013D8  EFE9  F009         	goto	u1055
   738   0013DC  503C               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
   739   0013DE  0B01               	andlw	1
   740   0013E0  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   741   0013E2  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
   742   0013E6                     
   743                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 215:         }
   744   0013E6  2A3E               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
   745   0013E8  0E07               	movlw	7
   746   0013EA  643E               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
   747   0013EC  EFFA  F009         	goto	u1061
   748   0013F0  EFFC  F009         	goto	u1060
   749   0013F4                     u1061:
   750   0013F4  EFDE  F009         	goto	l1975
   751   0013F8                     u1060:
   752   0013F8                     
   753                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 216:         ret = lcd_8bits_send_enable_signal(lcd);
   754   0013F8  C039  F037         	movff	lcd_8bit_send_char_data@lcd,lcd_8bits_send_enable_signal@lcd
   755   0013FC  EC17  F00B         	call	_lcd_8bits_send_enable_signal	;wreg free
   756   001400  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   757   001402                     l1983:
   758                           
   759                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 219:     return ret;
   760   001402  503D               	movf	lcd_8bit_send_char_data@ret^0,w,c
   761   001404  0012               	return		;funcret
   762   001406                     __end_of_lcd_8bit_send_char_data:
   763                           	callstack 0
   764                           
   765 ;; *************** function _application_initialize *****************
   766 ;; Defined at:
   767 ;;		line 25 in file "application.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 5
   788 ;; This function calls:
   789 ;;		_ecu_layer_initialize
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text4
   796   001666                     __ptext4:
   797                           	callstack 0
   798   001666                     _application_initialize:
   799                           	callstack 25
   800   001666                     
   801                           ;application.c: 27:     ecu_layer_initialize();
   802   001666  EC2A  F00B         	call	_ecu_layer_initialize	;wreg free
   803   00166A  0012               	return		;funcret
   804   00166C                     __end_of_application_initialize:
   805                           	callstack 0
   806                           
   807 ;; *************** function _ecu_layer_initialize *****************
   808 ;; Defined at:
   809 ;;		line 94 in file "ECU_Layer/ecu_layer_init.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  ret             1    0        unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used: 1
   829 ;; Hardware stack levels required when called: 4
   830 ;; This function calls:
   831 ;;		_lcd_4bit_initialize
   832 ;;		_lcd_8bit_initialize
   833 ;; This function is called by:
   834 ;;		_application_initialize
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text5
   839   001654                     __ptext5:
   840                           	callstack 0
   841   001654                     _ecu_layer_initialize:
   842                           	callstack 25
   843   001654  0E29               	movlw	low _lcd_1
   844   001656  6E3A               	movwf	lcd_4bit_initialize@lcd^0,c
   845   001658  EC9B  F00A         	call	_lcd_4bit_initialize	;wreg free
   846   00165C  0E1F               	movlw	low _lcd_2
   847   00165E  6E3F               	movwf	lcd_8bit_initialize@lcd^0,c
   848   001660  EC1A  F009         	call	_lcd_8bit_initialize	;wreg free
   849   001664  0012               	return		;funcret
   850   001666                     __end_of_ecu_layer_initialize:
   851                           	callstack 0
   852                           
   853 ;; *************** function _lcd_8bit_initialize *****************
   854 ;; Defined at:
   855 ;;		line 161 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  lcd             1   16[COMRAM] PTR const struct .
   858 ;;		 -> lcd_2(10), 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  ret             1   19[COMRAM] unsigned char 
   861 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      unsigned char 
   864 ;; Registers used:
   865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   871 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;Total ram usage:        4 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; Hardware stack levels required when called: 3
   878 ;; This function calls:
   879 ;;		_gpio_pin_initialization
   880 ;;		_lcd_8bit_send_command
   881 ;; This function is called by:
   882 ;;		_ecu_layer_initialize
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text6
   887   001234                     __ptext6:
   888                           	callstack 0
   889   001234                     _lcd_8bit_initialize:
   890                           	callstack 25
   891   001234                     
   892                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 163:     uint8 l_data_pins_counter = 0;
   893   001234  0E00               	movlw	0
   894   001236  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   895                           
   896                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 164:     if (((void*)0) == lcd) {
   897   001238  503F               	movf	lcd_8bit_initialize@lcd^0,w,c
   898   00123A  A4D8               	btfss	status,2,c
   899   00123C  EF22  F009         	goto	u1021
   900   001240  EF24  F009         	goto	u1020
   901   001244                     u1021:
   902   001244  EF28  F009         	goto	l1917
   903   001248                     u1020:
   904   001248                     
   905                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 165:         ret = (STD_ReturnType)0x00;
   906   001248  0E00               	movlw	0
   907   00124A  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   908                           
   909                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 166:     } else {
   910   00124C  EF8B  F009         	goto	l1953
   911   001250                     l1917:
   912                           
   913                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 167:         ret = gpio_pin_initialization(&(lcd->lcd_
      +                          rs));
   914   001250  C03F  F037         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialization@pin_config
   915   001254  EC3E  F00A         	call	_gpio_pin_initialization	;wreg free
   916   001258  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   917                           
   918                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 168:         ret = gpio_pin_initialization(&(lcd->lcd_
      +                          en));
   919   00125A  283F               	incf	lcd_8bit_initialize@lcd^0,w,c
   920   00125C  6E37               	movwf	gpio_pin_initialization@pin_config^0,c
   921   00125E  EC3E  F00A         	call	_gpio_pin_initialization	;wreg free
   922   001262  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   923   001264                     
   924                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 169:         for (l_data_pins_counter = 0; l_data_pins
      +                          _counter < 8; l_data_pins_counter++) {
   925   001264  0E00               	movlw	0
   926   001266  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   927   001268                     l1925:
   928   001268  503F               	movf	lcd_8bit_initialize@lcd^0,w,c
   929   00126A  2441               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
   930   00126C  0F02               	addlw	2
   931   00126E  6E37               	movwf	gpio_pin_initialization@pin_config^0,c
   932   001270  EC3E  F00A         	call	_gpio_pin_initialization	;wreg free
   933   001274                     
   934                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 171:         }
   935   001274  2A41               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
   936   001276  0E07               	movlw	7
   937   001278  6441               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
   938   00127A  EF41  F009         	goto	u1031
   939   00127E  EF43  F009         	goto	u1030
   940   001282                     u1031:
   941   001282  EF34  F009         	goto	l1925
   942   001286                     u1030:
   943   001286                     
   944                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 172:         _delay((unsigned long)((20)*(8000000UL/40
      +                          00.0)));
   945   001286  0E34               	movlw	52
   946   001288  6E40               	movwf	??_lcd_8bit_initialize^0,c
   947   00128A  0EF2               	movlw	242
   948   00128C                     u1397:
   949   00128C  2EE8               	decfsz	wreg,f,c
   950   00128E  D7FE               	bra	u1397
   951   001290  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   952   001292  D7FC               	bra	u1397
   953   001294  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   954   001298  0E38               	movlw	56
   955   00129A  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   956   00129C  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
   957   0012A0                     
   958                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 174:         _delay((unsigned long)((5)*(8000000UL/400
      +                          0.0)));
   959   0012A0  0E0D               	movlw	13
   960   0012A2  6E40               	movwf	??_lcd_8bit_initialize^0,c
   961   0012A4  0EFC               	movlw	252
   962   0012A6                     u1407:
   963   0012A6  2EE8               	decfsz	wreg,f,c
   964   0012A8  D7FE               	bra	u1407
   965   0012AA  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   966   0012AC  D7FC               	bra	u1407
   967   0012AE  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   968   0012B2  0E38               	movlw	56
   969   0012B4  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   970   0012B6  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
   971   0012BA                     
   972                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 176:         _delay((unsigned long)((150)*(8000000UL/4
      +                          000000.0)));
   973   0012BA  0E64               	movlw	100
   974   0012BC                     u1417:
   975   0012BC  2EE8               	decfsz	wreg,f,c
   976   0012BE  D7FE               	bra	u1417
   977   0012C0  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   978   0012C4  0E38               	movlw	56
   979   0012C6  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   980   0012C8  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
   981   0012CC  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   982   0012D0  0E01               	movlw	1
   983   0012D2  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   984   0012D4  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
   985   0012D8  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   986   0012DC  0E02               	movlw	2
   987   0012DE  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   988   0012E0  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
   989   0012E4  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   990   0012E8  0E06               	movlw	6
   991   0012EA  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   992   0012EC  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
   993   0012F0  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   994   0012F4  0E0C               	movlw	12
   995   0012F6  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   996   0012F8  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
   997   0012FC  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   998   001300  0E38               	movlw	56
   999   001302  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1000   001304  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
  1001   001308                     
  1002                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 183:         ret = lcd_8bit_send_command(lcd, 0x80);
  1003   001308  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1004   00130C  0E80               	movlw	128
  1005   00130E  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1006   001310  EC03  F00A         	call	_lcd_8bit_send_command	;wreg free
  1007   001314  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1008   001316                     l1953:
  1009                           
  1010                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 186:     return ret;
  1011   001316  5042               	movf	lcd_8bit_initialize@ret^0,w,c
  1012   001318  0012               	return		;funcret
  1013   00131A                     __end_of_lcd_8bit_initialize:
  1014                           	callstack 0
  1015                           
  1016 ;; *************** function _lcd_8bit_send_command *****************
  1017 ;; Defined at:
  1018 ;;		line 189 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  lcd             1   10[COMRAM] PTR const struct .
  1021 ;;		 -> lcd_2(10), 
  1022 ;;  command         1   11[COMRAM] unsigned char 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
  1025 ;;  ret             1   14[COMRAM] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      unsigned char 
  1028 ;; Registers used:
  1029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;Total ram usage:        6 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 2
  1042 ;; This function calls:
  1043 ;;		_gpio_pin_write_logic
  1044 ;;		_lcd_8bits_send_enable_signal
  1045 ;; This function is called by:
  1046 ;;		_lcd_8bit_initialize
  1047 ;;		_lcd_8bit_set_cursor
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text7
  1052   001406                     __ptext7:
  1053                           	callstack 0
  1054   001406                     _lcd_8bit_send_command:
  1055                           	callstack 26
  1056   001406                     
  1057                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 191:     uint8 l_pin_counter = 0;
  1058   001406  0E00               	movlw	0
  1059   001408  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1060                           
  1061                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 192:     if (((void*)0) == lcd) {
  1062   00140A  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1063   00140C  A4D8               	btfss	status,2,c
  1064   00140E  EF0B  F00A         	goto	u971
  1065   001412  EF0D  F00A         	goto	u970
  1066   001416                     u971:
  1067   001416  EF11  F00A         	goto	l1871
  1068   00141A                     u970:
  1069   00141A                     
  1070                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 193:         ret = (STD_ReturnType)0x00;
  1071   00141A  0E00               	movlw	0
  1072   00141C  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1073                           
  1074                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 194:     } else {
  1075   00141E  EF3C  F00A         	goto	l1887
  1076   001422                     l1871:
  1077   001422  C039  F02F         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@pin_config
  1078   001426  0E00               	movlw	0
  1079   001428  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1080   00142A  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
  1081   00142E                     
  1082                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 196:         for (l_pin_counter = 0; l_pin_counter < 8
      +                          ; l_pin_counter++) {
  1083   00142E  0E00               	movlw	0
  1084   001430  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1085   001432                     l1879:
  1086   001432  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1087   001434  243E               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1088   001436  0F02               	addlw	2
  1089   001438  6E2F               	movwf	gpio_pin_write_logic@pin_config^0,c
  1090   00143A  C03E  F03B         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  1091   00143E  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1092   001442  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
  1093   001444  EF26  F00A         	goto	u984
  1094   001448                     u985:
  1095   001448  90D8               	bcf	status,0,c
  1096   00144A  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1097   00144C                     u984:
  1098   00144C  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
  1099   00144E  EF24  F00A         	goto	u985
  1100   001452  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1101   001454  0B01               	andlw	1
  1102   001456  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1103   001458  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
  1104   00145C                     
  1105                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 198:         }
  1106   00145C  2A3E               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1107   00145E  0E07               	movlw	7
  1108   001460  643E               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1109   001462  EF35  F00A         	goto	u991
  1110   001466  EF37  F00A         	goto	u990
  1111   00146A                     u991:
  1112   00146A  EF19  F00A         	goto	l1879
  1113   00146E                     u990:
  1114   00146E                     
  1115                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 199:         ret = lcd_8bits_send_enable_signal(lcd);
  1116   00146E  C039  F037         	movff	lcd_8bit_send_command@lcd,lcd_8bits_send_enable_signal@lcd
  1117   001472  EC17  F00B         	call	_lcd_8bits_send_enable_signal	;wreg free
  1118   001476  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1119   001478                     l1887:
  1120                           
  1121                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 202:     return ret;
  1122   001478  503D               	movf	lcd_8bit_send_command@ret^0,w,c
  1123   00147A  0012               	return		;funcret
  1124   00147C                     __end_of_lcd_8bit_send_command:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _lcd_8bits_send_enable_signal *****************
  1128 ;; Defined at:
  1129 ;;		line 307 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  lcd             1    8[COMRAM] PTR const struct .
  1132 ;;		 -> lcd_2(10), 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  ret             1    9[COMRAM] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      unsigned char 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1144 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;Total ram usage:        2 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 1
  1151 ;; This function calls:
  1152 ;;		_gpio_pin_write_logic
  1153 ;; This function is called by:
  1154 ;;		_lcd_8bit_send_command
  1155 ;;		_lcd_8bit_send_char_data
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text8
  1160   00162E                     __ptext8:
  1161                           	callstack 0
  1162   00162E                     _lcd_8bits_send_enable_signal:
  1163                           	callstack 26
  1164   00162E  2837               	incf	lcd_8bits_send_enable_signal@lcd^0,w,c
  1165   001630  6E2F               	movwf	gpio_pin_write_logic@pin_config^0,c
  1166   001632  0E01               	movlw	1
  1167   001634  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1168   001636  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
  1169   00163A                     
  1170                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 310:     _delay((unsigned long)((5)*(8000000UL/4000000
      +                          .0)));
  1171   00163A  0E03               	movlw	3
  1172   00163C                     u1427:
  1173   00163C  2EE8               	decfsz	wreg,f,c
  1174   00163E  D7FE               	bra	u1427
  1175   001640  0000               	nop	
  1176   001642                     
  1177                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 311:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  1178   001642  2837               	incf	lcd_8bits_send_enable_signal@lcd^0,w,c
  1179   001644  6E2F               	movwf	gpio_pin_write_logic@pin_config^0,c
  1180   001646  0E00               	movlw	0
  1181   001648  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1182   00164A  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
  1183   00164E  6E38               	movwf	lcd_8bits_send_enable_signal@ret^0,c
  1184   001650                     
  1185                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 312:     return ret;
  1186   001650  5038               	movf	lcd_8bits_send_enable_signal@ret^0,w,c
  1187   001652  0012               	return		;funcret
  1188   001654                     __end_of_lcd_8bits_send_enable_signal:
  1189                           	callstack 0
  1190                           
  1191 ;; *************** function _lcd_4bit_initialize *****************
  1192 ;; Defined at:
  1193 ;;		line 20 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  lcd             1   11[COMRAM] PTR const struct .
  1196 ;;		 -> lcd_1(6), 
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;  l_data_pins_    1   13[COMRAM] unsigned char 
  1199 ;;  ret             1   12[COMRAM] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      unsigned char 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1209 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;Total ram usage:        3 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 2
  1216 ;; This function calls:
  1217 ;;		_gpio_pin_initialization
  1218 ;; This function is called by:
  1219 ;;		_ecu_layer_initialize
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text9
  1224   001536                     __ptext9:
  1225                           	callstack 0
  1226   001536                     _lcd_4bit_initialize:
  1227                           	callstack 26
  1228   001536                     
  1229                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 22:     uint8 l_data_pins_counter = 0;
  1230   001536  0E00               	movlw	0
  1231   001538  6E3C               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1232                           
  1233                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 23:     if (((void*)0) == lcd) {
  1234   00153A  503A               	movf	lcd_4bit_initialize@lcd^0,w,c
  1235   00153C  A4D8               	btfss	status,2,c
  1236   00153E  EFA3  F00A         	goto	u1001
  1237   001542  EFA5  F00A         	goto	u1000
  1238   001546                     u1001:
  1239   001546  EFA9  F00A         	goto	l1895
  1240   00154A                     u1000:
  1241   00154A                     
  1242                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 24:         ret = (STD_ReturnType)0x00;
  1243   00154A  0E00               	movlw	0
  1244   00154C  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
  1245                           
  1246                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 25:     } else {
  1247   00154E  EFC5  F00A         	goto	l1909
  1248   001552                     l1895:
  1249                           
  1250                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 26:         ret = gpio_pin_initialization(&(lcd->lcd_r
      +                          s));
  1251   001552  C03A  F037         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialization@pin_config
  1252   001556  EC3E  F00A         	call	_gpio_pin_initialization	;wreg free
  1253   00155A  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
  1254                           
  1255                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         ret = gpio_pin_initialization(&(lcd->lcd_e
      +                          n));
  1256   00155C  283A               	incf	lcd_4bit_initialize@lcd^0,w,c
  1257   00155E  6E37               	movwf	gpio_pin_initialization@pin_config^0,c
  1258   001560  EC3E  F00A         	call	_gpio_pin_initialization	;wreg free
  1259   001564  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
  1260   001566                     
  1261                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 28:         for (l_data_pins_counter = 0; l_data_pins_
      +                          counter < 4; l_data_pins_counter++) {
  1262   001566  0E00               	movlw	0
  1263   001568  6E3C               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1264   00156A                     l1903:
  1265                           
  1266                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 29:             ret = gpio_pin_initialization(&(lcd->l
      +                          cd_data[l_data_pins_counter]));
  1267   00156A  503A               	movf	lcd_4bit_initialize@lcd^0,w,c
  1268   00156C  243C               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  1269   00156E  0F02               	addlw	2
  1270   001570  6E37               	movwf	gpio_pin_initialization@pin_config^0,c
  1271   001572  EC3E  F00A         	call	_gpio_pin_initialization	;wreg free
  1272   001576  6E3B               	movwf	lcd_4bit_initialize@ret^0,c
  1273   001578                     
  1274                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 30:         }
  1275   001578  2A3C               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  1276   00157A  0E03               	movlw	3
  1277   00157C  643C               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  1278   00157E  EFC3  F00A         	goto	u1011
  1279   001582  EFC5  F00A         	goto	u1010
  1280   001586                     u1011:
  1281   001586  EFB5  F00A         	goto	l1903
  1282   00158A                     u1010:
  1283   00158A                     l1909:
  1284                           
  1285                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 34:     return ret;
  1286   00158A  503B               	movf	lcd_4bit_initialize@ret^0,w,c
  1287   00158C  0012               	return		;funcret
  1288   00158E                     __end_of_lcd_4bit_initialize:
  1289                           	callstack 0
  1290                           
  1291 ;; *************** function _gpio_pin_initialization *****************
  1292 ;; Defined at:
  1293 ;;		line 140 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  pin_config      1    8[COMRAM] PTR const struct .
  1296 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1297 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  ret             1   10[COMRAM] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      unsigned char 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1309 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;Total ram usage:        3 bytes
  1314 ;; Hardware stack levels used: 1
  1315 ;; Hardware stack levels required when called: 1
  1316 ;; This function calls:
  1317 ;;		_gpio_pin_direction_initialization
  1318 ;;		_gpio_pin_write_logic
  1319 ;; This function is called by:
  1320 ;;		_lcd_4bit_initialize
  1321 ;;		_lcd_8bit_initialize
  1322 ;;		_seven_segment_initialize
  1323 ;;		_dc_motor_initialize
  1324 ;;		_keypad_initialize
  1325 ;;		_led_initialize
  1326 ;;		_relay_initialize
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text10
  1331   00147C                     __ptext10:
  1332                           	callstack 0
  1333   00147C                     _gpio_pin_initialization:
  1334                           	callstack 26
  1335   00147C                     
  1336                           ;MCAL_Layer/GPIO/hal_gpio.c: 141:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1337   00147C  0E01               	movlw	1
  1338   00147E  6E39               	movwf	gpio_pin_initialization@ret^0,c
  1339                           
  1340                           ;MCAL_Layer/GPIO/hal_gpio.c: 142:     if ((((void*)0) == pin_config) || (pin_config->pin
      +                           > 8 - 1)) {
  1341   001480  5037               	movf	gpio_pin_initialization@pin_config^0,w,c
  1342   001482  B4D8               	btfsc	status,2,c
  1343   001484  EF46  F00A         	goto	u951
  1344   001488  EF48  F00A         	goto	u950
  1345   00148C                     u951:
  1346   00148C  EF58  F00A         	goto	l1859
  1347   001490                     u950:
  1348   001490  5037               	movf	gpio_pin_initialization@pin_config^0,w,c
  1349   001492  6ED9               	movwf	fsr2l,c
  1350   001494  6ADA               	clrf	fsr2h,c
  1351   001496  30DF               	rrcf	223,w,c
  1352   001498  32E8               	rrcf	wreg,f,c
  1353   00149A  32E8               	rrcf	wreg,f,c
  1354   00149C  0B07               	andlw	7
  1355   00149E  6E38               	movwf	??_gpio_pin_initialization^0,c
  1356   0014A0  0E07               	movlw	7
  1357   0014A2  6438               	cpfsgt	??_gpio_pin_initialization^0,c
  1358   0014A4  EF56  F00A         	goto	u961
  1359   0014A8  EF58  F00A         	goto	u960
  1360   0014AC                     u961:
  1361   0014AC  EF5C  F00A         	goto	l1861
  1362   0014B0                     u960:
  1363   0014B0                     l1859:
  1364                           
  1365                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:         ret = (STD_ReturnType)0x00;
  1366   0014B0  0E00               	movlw	0
  1367   0014B2  6E39               	movwf	gpio_pin_initialization@ret^0,c
  1368                           
  1369                           ;MCAL_Layer/GPIO/hal_gpio.c: 144:     } else {
  1370   0014B4  EF6B  F00A         	goto	l1863
  1371   0014B8                     l1861:
  1372                           
  1373                           ;MCAL_Layer/GPIO/hal_gpio.c: 145:         gpio_pin_direction_initialization(pin_config);
  1374   0014B8  C037  F02F         	movff	gpio_pin_initialization@pin_config,gpio_pin_direction_initialization@pin_config
  1375   0014BC  EC09  F008         	call	_gpio_pin_direction_initialization	;wreg free
  1376                           
  1377                           ;MCAL_Layer/GPIO/hal_gpio.c: 146:         gpio_pin_write_logic(pin_config, pin_config->l
      +                          ogic);
  1378   0014C0  C037  F02F         	movff	gpio_pin_initialization@pin_config,gpio_pin_write_logic@pin_config
  1379   0014C4  5037               	movf	gpio_pin_initialization@pin_config^0,w,c
  1380   0014C6  6ED9               	movwf	fsr2l,c
  1381   0014C8  6ADA               	clrf	fsr2h,c
  1382   0014CA  0E00               	movlw	0
  1383   0014CC  BEDF               	btfsc	indf2,7,c
  1384   0014CE  0E01               	movlw	1
  1385   0014D0  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1386   0014D2  EC92  F008         	call	_gpio_pin_write_logic	;wreg free
  1387   0014D6                     l1863:
  1388                           
  1389                           ;MCAL_Layer/GPIO/hal_gpio.c: 148:     return ret;
  1390   0014D6  5039               	movf	gpio_pin_initialization@ret^0,w,c
  1391   0014D8  0012               	return		;funcret
  1392   0014DA                     __end_of_gpio_pin_initialization:
  1393                           	callstack 0
  1394                           
  1395 ;; *************** function _gpio_pin_write_logic *****************
  1396 ;; Defined at:
  1397 ;;		line 73 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  pin_config      1    0[COMRAM] PTR const struct .
  1400 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1401 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  1402 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1403 ;;  logic           1    1[COMRAM] enum E3063
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  ret             1    7[COMRAM] unsigned char 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      unsigned char 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;Total ram usage:        8 bytes
  1420 ;; Hardware stack levels used: 1
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_gpio_pin_initialization
  1425 ;;		_lcd_8bit_send_command
  1426 ;;		_lcd_8bit_send_char_data
  1427 ;;		_lcd_8bits_send_enable_signal
  1428 ;;		_seven_segment_write_number
  1429 ;;		_dc_motor_move_right
  1430 ;;		_dc_motor_move_left
  1431 ;;		_dc_motor_stop
  1432 ;;		_keypad_get_value
  1433 ;;		_led_turn_on
  1434 ;;		_led_turn_off
  1435 ;;		_relay_turn_on
  1436 ;;		_relay_turn_off
  1437 ;;		_lcd_4bit_send_command
  1438 ;;		_lcd_4bit_send_char_data
  1439 ;;		_lcd_send_4bits
  1440 ;;		_lcd_4bits_send_enable_signal
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text11
  1445   001124                     __ptext11:
  1446                           	callstack 0
  1447   001124                     _gpio_pin_write_logic:
  1448                           	callstack 26
  1449   001124                     
  1450                           ;MCAL_Layer/GPIO/hal_gpio.c: 74:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1451   001124  0E01               	movlw	1
  1452   001126  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1453                           
  1454                           ;MCAL_Layer/GPIO/hal_gpio.c: 75:     if ((((void*)0) == pin_config) || (pin_config->pin 
      +                          > 8 - 1)) {
  1455   001128  502F               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1456   00112A  B4D8               	btfsc	status,2,c
  1457   00112C  EF9A  F008         	goto	u861
  1458   001130  EF9C  F008         	goto	u860
  1459   001134                     u861:
  1460   001134  EFAC  F008         	goto	l1807
  1461   001138                     u860:
  1462   001138  502F               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1463   00113A  6ED9               	movwf	fsr2l,c
  1464   00113C  6ADA               	clrf	fsr2h,c
  1465   00113E  30DF               	rrcf	223,w,c
  1466   001140  32E8               	rrcf	wreg,f,c
  1467   001142  32E8               	rrcf	wreg,f,c
  1468   001144  0B07               	andlw	7
  1469   001146  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1470   001148  0E07               	movlw	7
  1471   00114A  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  1472   00114C  EFAA  F008         	goto	u871
  1473   001150  EFAC  F008         	goto	u870
  1474   001154                     u871:
  1475   001154  EF03  F009         	goto	l1815
  1476   001158                     u870:
  1477   001158                     l1807:
  1478                           
  1479                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:         ret = (STD_ReturnType)0x00;
  1480   001158  0E00               	movlw	0
  1481   00115A  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1482                           
  1483                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     } else {
  1484   00115C  EF18  F009         	goto	l1817
  1485   001160                     l1809:
  1486                           
  1487                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 (*lat_registers[pin_config->port] &= ~(
      +                          1 << pin_config->pin));
  1488   001160  502F               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1489   001162  6ED9               	movwf	fsr2l,c
  1490   001164  6ADA               	clrf	fsr2h,c
  1491   001166  30DF               	rrcf	223,w,c
  1492   001168  32E8               	rrcf	wreg,f,c
  1493   00116A  32E8               	rrcf	wreg,f,c
  1494   00116C  0B07               	andlw	7
  1495   00116E  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1496   001170  0E01               	movlw	1
  1497   001172  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1498   001174  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1499   001176  EFBF  F008         	goto	u884
  1500   00117A                     u885:
  1501   00117A  90D8               	bcf	status,0,c
  1502   00117C  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1503   00117E                     u884:
  1504   00117E  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1505   001180  EFBD  F008         	goto	u885
  1506   001184  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1507   001186  0AFF               	xorlw	255
  1508   001188  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1509   00118A  502F               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1510   00118C  6ED9               	movwf	fsr2l,c
  1511   00118E  6ADA               	clrf	fsr2h,c
  1512   001190  50DF               	movf	223,w,c
  1513   001192  0B07               	andlw	7
  1514   001194  0D02               	mullw	2
  1515   001196  50F3               	movf	243,w,c
  1516   001198  0F0B               	addlw	low _lat_registers
  1517   00119A  6ED9               	movwf	fsr2l,c
  1518   00119C  6ADA               	clrf	fsr2h,c
  1519   00119E  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  1520   0011A2  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  1521   0011A6  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1522   0011AA  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1523   0011AE  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1524   0011B0  16DF               	andwf	indf2,f,c
  1525                           
  1526                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:                 break;
  1527   0011B2  EF18  F009         	goto	l1817
  1528   0011B6                     l1811:
  1529                           
  1530                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 (*lat_registers[pin_config->port] |= (1
      +                           << pin_config->pin));
  1531   0011B6  502F               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1532   0011B8  6ED9               	movwf	fsr2l,c
  1533   0011BA  6ADA               	clrf	fsr2h,c
  1534   0011BC  30DF               	rrcf	223,w,c
  1535   0011BE  32E8               	rrcf	wreg,f,c
  1536   0011C0  32E8               	rrcf	wreg,f,c
  1537   0011C2  0B07               	andlw	7
  1538   0011C4  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1539   0011C6  0E01               	movlw	1
  1540   0011C8  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1541   0011CA  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1542   0011CC  EFEA  F008         	goto	u894
  1543   0011D0                     u895:
  1544   0011D0  90D8               	bcf	status,0,c
  1545   0011D2  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1546   0011D4                     u894:
  1547   0011D4  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1548   0011D6  EFE8  F008         	goto	u895
  1549   0011DA  502F               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1550   0011DC  6ED9               	movwf	fsr2l,c
  1551   0011DE  6ADA               	clrf	fsr2h,c
  1552   0011E0  50DF               	movf	223,w,c
  1553   0011E2  0B07               	andlw	7
  1554   0011E4  0D02               	mullw	2
  1555   0011E6  50F3               	movf	243,w,c
  1556   0011E8  0F0B               	addlw	low _lat_registers
  1557   0011EA  6ED9               	movwf	fsr2l,c
  1558   0011EC  6ADA               	clrf	fsr2h,c
  1559   0011EE  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  1560   0011F2  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  1561   0011F6  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1562   0011FA  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1563   0011FE  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1564   001200  12DF               	iorwf	indf2,f,c
  1565                           
  1566                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:                 break;
  1567   001202  EF18  F009         	goto	l1817
  1568   001206                     l1815:
  1569   001206  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  1570   001208  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1571   00120A  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1572                           
  1573                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1574                           ; Switch size 1, requested type "simple"
  1575                           ; Number of cases is 1, Range of values is 0 to 0
  1576                           ; switch strategies available:
  1577                           ; Name         Instructions Cycles
  1578                           ; simple_byte            4     3 (average)
  1579                           ;	Chosen strategy is simple_byte
  1580   00120C  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1581   00120E  0A00               	xorlw	0	; case 0
  1582   001210  B4D8               	btfsc	status,2,c
  1583   001212  EF0D  F009         	goto	l2323
  1584   001216  EFAC  F008         	goto	l1807
  1585   00121A                     l2323:
  1586                           
  1587                           ; Switch size 1, requested type "simple"
  1588                           ; Number of cases is 2, Range of values is 0 to 1
  1589                           ; switch strategies available:
  1590                           ; Name         Instructions Cycles
  1591                           ; simple_byte            7     4 (average)
  1592                           ;	Chosen strategy is simple_byte
  1593   00121A  5031               	movf	??_gpio_pin_write_logic^0,w,c
  1594   00121C  0A00               	xorlw	0	; case 0
  1595   00121E  B4D8               	btfsc	status,2,c
  1596   001220  EFB0  F008         	goto	l1809
  1597   001224  0A01               	xorlw	1	; case 1
  1598   001226  B4D8               	btfsc	status,2,c
  1599   001228  EFDB  F008         	goto	l1811
  1600   00122C  EFAC  F008         	goto	l1807
  1601   001230                     l1817:
  1602                           
  1603                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:     return ret;
  1604   001230  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  1605   001232  0012               	return		;funcret
  1606   001234                     __end_of_gpio_pin_write_logic:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _gpio_pin_direction_initialization *****************
  1610 ;; Defined at:
  1611 ;;		line 25 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  pin_config      1    0[COMRAM] PTR const struct .
  1614 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  1615 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  ret             1    6[COMRAM] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      unsigned char 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1627 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;Total ram usage:        7 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_gpio_pin_initialization
  1637 ;;		_button_initialize
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text12
  1642   001012                     __ptext12:
  1643                           	callstack 0
  1644   001012                     _gpio_pin_direction_initialization:
  1645                           	callstack 26
  1646   001012                     
  1647                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1648   001012  0E01               	movlw	1
  1649   001014  6E35               	movwf	gpio_pin_direction_initialization@ret^0,c
  1650                           
  1651                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if ((((void*)0) == pin_config) || (pin_config->pin 
      +                          > 8 - 1)) {
  1652   001016  502F               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1653   001018  B4D8               	btfsc	status,2,c
  1654   00101A  EF11  F008         	goto	u901
  1655   00101E  EF13  F008         	goto	u900
  1656   001022                     u901:
  1657   001022  EF23  F008         	goto	l1829
  1658   001026                     u900:
  1659   001026  502F               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1660   001028  6ED9               	movwf	fsr2l,c
  1661   00102A  6ADA               	clrf	fsr2h,c
  1662   00102C  30DF               	rrcf	223,w,c
  1663   00102E  32E8               	rrcf	wreg,f,c
  1664   001030  32E8               	rrcf	wreg,f,c
  1665   001032  0B07               	andlw	7
  1666   001034  6E30               	movwf	??_gpio_pin_direction_initialization^0,c
  1667   001036  0E07               	movlw	7
  1668   001038  6430               	cpfsgt	??_gpio_pin_direction_initialization^0,c
  1669   00103A  EF21  F008         	goto	u911
  1670   00103E  EF23  F008         	goto	u910
  1671   001042                     u911:
  1672   001042  EF7A  F008         	goto	l1837
  1673   001046                     u910:
  1674   001046                     l1829:
  1675                           
  1676                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         ret = (STD_ReturnType)0x00;
  1677   001046  0E00               	movlw	0
  1678   001048  6E35               	movwf	gpio_pin_direction_initialization@ret^0,c
  1679                           
  1680                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     } else {
  1681   00104A  EF90  F008         	goto	l1839
  1682   00104E                     l1831:
  1683                           
  1684                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 (*tris_registers[pin_config->port] &= ~
      +                          (1 << pin_config->pin));
  1685   00104E  502F               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1686   001050  6ED9               	movwf	fsr2l,c
  1687   001052  6ADA               	clrf	fsr2h,c
  1688   001054  30DF               	rrcf	223,w,c
  1689   001056  32E8               	rrcf	wreg,f,c
  1690   001058  32E8               	rrcf	wreg,f,c
  1691   00105A  0B07               	andlw	7
  1692   00105C  6E30               	movwf	??_gpio_pin_direction_initialization^0,c
  1693   00105E  0E01               	movlw	1
  1694   001060  6E31               	movwf	(??_gpio_pin_direction_initialization+1)^0,c
  1695   001062  2A30               	incf	??_gpio_pin_direction_initialization^0,f,c
  1696   001064  EF36  F008         	goto	u924
  1697   001068                     u925:
  1698   001068  90D8               	bcf	status,0,c
  1699   00106A  3631               	rlcf	(??_gpio_pin_direction_initialization+1)^0,f,c
  1700   00106C                     u924:
  1701   00106C  2E30               	decfsz	??_gpio_pin_direction_initialization^0,f,c
  1702   00106E  EF34  F008         	goto	u925
  1703   001072  5031               	movf	(??_gpio_pin_direction_initialization+1)^0,w,c
  1704   001074  0AFF               	xorlw	255
  1705   001076  6E32               	movwf	(??_gpio_pin_direction_initialization+2)^0,c
  1706   001078  502F               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1707   00107A  6ED9               	movwf	fsr2l,c
  1708   00107C  6ADA               	clrf	fsr2h,c
  1709   00107E  50DF               	movf	223,w,c
  1710   001080  0B07               	andlw	7
  1711   001082  0D02               	mullw	2
  1712   001084  50F3               	movf	243,w,c
  1713   001086  0F15               	addlw	low _tris_registers
  1714   001088  6ED9               	movwf	fsr2l,c
  1715   00108A  6ADA               	clrf	fsr2h,c
  1716   00108C  CFDE F033          	movff	postinc2,??_gpio_pin_direction_initialization+3
  1717   001090  CFDD F034          	movff	postdec2,??_gpio_pin_direction_initialization+4
  1718   001094  C033  FFD9         	movff	??_gpio_pin_direction_initialization+3,fsr2l
  1719   001098  C034  FFDA         	movff	??_gpio_pin_direction_initialization+4,fsr2h
  1720   00109C  5032               	movf	(??_gpio_pin_direction_initialization+2)^0,w,c
  1721   00109E  16DF               	andwf	indf2,f,c
  1722                           
  1723                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 break;
  1724   0010A0  EF90  F008         	goto	l1839
  1725   0010A4                     l1833:
  1726                           
  1727                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:                 (*tris_registers[pin_config->port] |= (
      +                          1 << pin_config->pin));
  1728   0010A4  502F               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1729   0010A6  6ED9               	movwf	fsr2l,c
  1730   0010A8  6ADA               	clrf	fsr2h,c
  1731   0010AA  30DF               	rrcf	223,w,c
  1732   0010AC  32E8               	rrcf	wreg,f,c
  1733   0010AE  32E8               	rrcf	wreg,f,c
  1734   0010B0  0B07               	andlw	7
  1735   0010B2  6E30               	movwf	??_gpio_pin_direction_initialization^0,c
  1736   0010B4  0E01               	movlw	1
  1737   0010B6  6E31               	movwf	(??_gpio_pin_direction_initialization+1)^0,c
  1738   0010B8  2A30               	incf	??_gpio_pin_direction_initialization^0,f,c
  1739   0010BA  EF61  F008         	goto	u934
  1740   0010BE                     u935:
  1741   0010BE  90D8               	bcf	status,0,c
  1742   0010C0  3631               	rlcf	(??_gpio_pin_direction_initialization+1)^0,f,c
  1743   0010C2                     u934:
  1744   0010C2  2E30               	decfsz	??_gpio_pin_direction_initialization^0,f,c
  1745   0010C4  EF5F  F008         	goto	u935
  1746   0010C8  502F               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1747   0010CA  6ED9               	movwf	fsr2l,c
  1748   0010CC  6ADA               	clrf	fsr2h,c
  1749   0010CE  50DF               	movf	223,w,c
  1750   0010D0  0B07               	andlw	7
  1751   0010D2  0D02               	mullw	2
  1752   0010D4  50F3               	movf	243,w,c
  1753   0010D6  0F15               	addlw	low _tris_registers
  1754   0010D8  6ED9               	movwf	fsr2l,c
  1755   0010DA  6ADA               	clrf	fsr2h,c
  1756   0010DC  CFDE F032          	movff	postinc2,??_gpio_pin_direction_initialization+2
  1757   0010E0  CFDD F033          	movff	postdec2,??_gpio_pin_direction_initialization+3
  1758   0010E4  C032  FFD9         	movff	??_gpio_pin_direction_initialization+2,fsr2l
  1759   0010E8  C033  FFDA         	movff	??_gpio_pin_direction_initialization+3,fsr2h
  1760   0010EC  5031               	movf	(??_gpio_pin_direction_initialization+1)^0,w,c
  1761   0010EE  12DF               	iorwf	indf2,f,c
  1762                           
  1763                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 break;
  1764   0010F0  EF90  F008         	goto	l1839
  1765   0010F4                     l1837:
  1766   0010F4  502F               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1767   0010F6  6ED9               	movwf	fsr2l,c
  1768   0010F8  6ADA               	clrf	fsr2h,c
  1769   0010FA  BCDF               	btfsc	indf2,6,c
  1770   0010FC  EF82  F008         	goto	u941
  1771   001100  EF85  F008         	goto	u940
  1772   001104                     u941:
  1773   001104  0E01               	movlw	1
  1774   001106  EF86  F008         	goto	u946
  1775   00110A                     u940:
  1776   00110A  0E00               	movlw	0
  1777   00110C                     u946:
  1778                           
  1779                           ; Switch size 1, requested type "simple"
  1780                           ; Number of cases is 2, Range of values is 0 to 1
  1781                           ; switch strategies available:
  1782                           ; Name         Instructions Cycles
  1783                           ; simple_byte            7     4 (average)
  1784                           ;	Chosen strategy is simple_byte
  1785   00110C  0A00               	xorlw	0	; case 0
  1786   00110E  B4D8               	btfsc	status,2,c
  1787   001110  EF27  F008         	goto	l1831
  1788   001114  0A01               	xorlw	1	; case 1
  1789   001116  B4D8               	btfsc	status,2,c
  1790   001118  EF52  F008         	goto	l1833
  1791   00111C  EF23  F008         	goto	l1829
  1792   001120                     l1839:
  1793                           
  1794                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:     return ret;
  1795   001120  5035               	movf	gpio_pin_direction_initialization@ret^0,w,c
  1796   001122  0012               	return		;funcret
  1797   001124                     __end_of_gpio_pin_direction_initialization:
  1798                           	callstack 0
  1799                           
  1800                           	psect	rparam
  1801   000000                     
  1802                           	psect	config
  1803                           
  1804                           ; Padding undefined space
  1805   300000                     	org	3145728
  1806   300000  FF                 	db	255
  1807                           
  1808                           ;Config register CONFIG1H @ 0x300001
  1809                           ;	Oscillator Selection bits
  1810                           ;	FOSC = HS, HS oscillator
  1811                           ;	Fail-Safe Clock Monitor Enable bit
  1812                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1813                           ;	Internal/External Oscillator Switchover bit
  1814                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1815   300001                     	org	3145729
  1816   300001  02                 	db	2
  1817                           
  1818                           ;Config register CONFIG2L @ 0x300002
  1819                           ;	Power-up Timer Enable bit
  1820                           ;	PWRTEN = OFF, PWRT disabled
  1821                           ;	Brown-out Reset Enable bits
  1822                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1823                           ;	Brown Out Reset Voltage bits
  1824                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1825   300002                     	org	3145730
  1826   300002  1F                 	db	31
  1827                           
  1828                           ;Config register CONFIG2H @ 0x300003
  1829                           ;	Watchdog Timer Enable bit
  1830                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1831                           ;	Watchdog Timer Postscale Select bits
  1832                           ;	WDTPS = 32768, 1:32768
  1833   300003                     	org	3145731
  1834   300003  1E                 	db	30
  1835                           
  1836                           ; Padding undefined space
  1837   300004                     	org	3145732
  1838   300004  FF                 	db	255
  1839                           
  1840                           ;Config register CONFIG3H @ 0x300005
  1841                           ;	CCP2 MUX bit
  1842                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1843                           ;	PORTB A/D Enable bit
  1844                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1845                           ;	Low-Power Timer1 Oscillator Enable bit
  1846                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1847                           ;	HFINTOSC Fast Start-up
  1848                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  1849                           ;	MCLR Pin Enable bit
  1850                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1851   300005                     	org	3145733
  1852   300005  81                 	db	129
  1853                           
  1854                           ;Config register CONFIG4L @ 0x300006
  1855                           ;	Stack Full/Underflow Reset Enable bit
  1856                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1857                           ;	Single-Supply ICSP Enable bit
  1858                           ;	LVP = OFF, Single-Supply ICSP disabled
  1859                           ;	Extended Instruction Set Enable bit
  1860                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1861                           ;	Background Debugger Enable bit
  1862                           ;	DEBUG = 0x1, unprogrammed default
  1863   300006                     	org	3145734
  1864   300006  81                 	db	129
  1865                           
  1866                           ; Padding undefined space
  1867   300007                     	org	3145735
  1868   300007  FF                 	db	255
  1869                           
  1870                           ;Config register CONFIG5L @ 0x300008
  1871                           ;	Code Protection Block 0
  1872                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1873                           ;	Code Protection Block 1
  1874                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1875                           ;	Code Protection Block 2
  1876                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1877                           ;	Code Protection Block 3
  1878                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1879   300008                     	org	3145736
  1880   300008  0F                 	db	15
  1881                           
  1882                           ;Config register CONFIG5H @ 0x300009
  1883                           ;	Boot Block Code Protection bit
  1884                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1885                           ;	Data EEPROM Code Protection bit
  1886                           ;	CPD = OFF, Data EEPROM not code-protected
  1887   300009                     	org	3145737
  1888   300009  C0                 	db	192
  1889                           
  1890                           ;Config register CONFIG6L @ 0x30000A
  1891                           ;	Write Protection Block 0
  1892                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1893                           ;	Write Protection Block 1
  1894                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1895                           ;	Write Protection Block 2
  1896                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1897                           ;	Write Protection Block 3
  1898                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1899   30000A                     	org	3145738
  1900   30000A  0F                 	db	15
  1901                           
  1902                           ;Config register CONFIG6H @ 0x30000B
  1903                           ;	Configuration Register Write Protection bit
  1904                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1905                           ;	Boot Block Write Protection bit
  1906                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1907                           ;	Data EEPROM Write Protection bit
  1908                           ;	WRTD = OFF, Data EEPROM not write-protected
  1909   30000B                     	org	3145739
  1910   30000B  E0                 	db	224
  1911                           
  1912                           ;Config register CONFIG7L @ 0x30000C
  1913                           ;	Table Read Protection Block 0
  1914                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1915                           ;	Table Read Protection Block 1
  1916                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1917                           ;	Table Read Protection Block 2
  1918                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1919                           ;	Table Read Protection Block 3
  1920                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1921   30000C                     	org	3145740
  1922   30000C  0F                 	db	15
  1923                           
  1924                           ;Config register CONFIG7H @ 0x30000D
  1925                           ;	Boot Block Table Read Protection bit
  1926                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1927   30000D                     	org	3145741
  1928   30000D  40                 	db	64
  1929                           tosu	equ	0xFFF
  1930                           tosh	equ	0xFFE
  1931                           tosl	equ	0xFFD
  1932                           stkptr	equ	0xFFC
  1933                           pclatu	equ	0xFFB
  1934                           pclath	equ	0xFFA
  1935                           pcl	equ	0xFF9
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           prodh	equ	0xFF4
  1941                           prodl	equ	0xFF3
  1942                           indf0	equ	0xFEF
  1943                           postinc0	equ	0xFEE
  1944                           postdec0	equ	0xFED
  1945                           preinc0	equ	0xFEC
  1946                           plusw0	equ	0xFEB
  1947                           fsr0h	equ	0xFEA
  1948                           fsr0l	equ	0xFE9
  1949                           wreg	equ	0xFE8
  1950                           indf1	equ	0xFE7
  1951                           postinc1	equ	0xFE6
  1952                           postdec1	equ	0xFE5
  1953                           preinc1	equ	0xFE4
  1954                           plusw1	equ	0xFE3
  1955                           fsr1h	equ	0xFE2
  1956                           fsr1l	equ	0xFE1
  1957                           bsr	equ	0xFE0
  1958                           indf2	equ	0xFDF
  1959                           postinc2	equ	0xFDE
  1960                           postdec2	equ	0xFDD
  1961                           preinc2	equ	0xFDC
  1962                           plusw2	equ	0xFDB
  1963                           fsr2h	equ	0xFDA
  1964                           fsr2l	equ	0xFD9
  1965                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        46
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      77
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    gpio_pin_direction_initialization@pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialization@pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bits_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlll[1]), PORTB(BITBIGSFRllh[1]), PORTC(BITBIGSFRllh[1]), PORTD(BITBIGSFRllh[1]), 
		 -> PORTE(BITBIGSFRllh[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_char_data_pos
    _lcd_8bit_send_char_data_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bits_send_enable_signal
    _ecu_layer_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bits_send_enable_signal
    _lcd_8bits_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_gpio_pin_initialization
    _gpio_pin_initialization->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   50482
             _application_initialize
        _lcd_8bit_send_char_data_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_char_data_pos                          5     1      4   24396
                                             19 COMRAM     5     1      4
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  4     1      3   12639
                                             16 COMRAM     3     0      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              6     4      2   10383
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   26081
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   26081
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   19246
                                             16 COMRAM     4     3      1
            _gpio_pin_initialization
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12207
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bits_send_enable_signal                         2     1      1    5112
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  3     2      1    6832
                                             11 COMRAM     3     2      1
            _gpio_pin_initialization
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialization                              3     2      1    6572
                                              8 COMRAM     3     2      1
  _gpio_pin_direction_initialization
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialization                    7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialization
           _gpio_pin_direction_initialization
           _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialization
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bits_send_enable_signal
             _gpio_pin_write_logic
   _lcd_8bit_send_char_data_pos
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      29        0.0%
BANK13             100      0       0      30        0.0%
BITBANK12          100      0       0      27        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      25        0.0%
BANK11             100      0       0      26        0.0%
BITBANK10          100      0       0      23        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      21        0.0%
BANK9              100      0       0      22        0.0%
BITBANK8           100      0       0      19        0.0%
BANK8              100      0       0      20        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK14           EF      0       0      31        0.0%
BANK14              EF      0       0      32        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK15           60      0       0      33        0.0%
BANK15              60      0       0      34        0.0%
BIGRAM_1            60      0       0      45        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      4D       1       81.1%
BITBIGSFR_1         37      0       0      39        0.0%
BITBIGSFRlll        20      0       0      43        0.0%
BITBIGSFR_5          C      0       0      35        0.0%
BITBIGSFR_2          6      0       0      38        0.0%
BITBIGSFRh           5      0       0      40        0.0%
BITBIGSFRllh         4      0       0      42        0.0%
BITBIGSFRlh          4      0       0      41        0.0%
BITBIGSFR_4          3      0       0      36        0.0%
BITBIGSFR_3          3      0       0      37        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      44        0.0%
DATA                 0      0      4D      47        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Sep 01 00:57:42 2024

                                        l212 1122                                          l231 1232  
                                        l321 158C                                          l410 1652  
                                        l252 14D8                                          l164 1664  
                                        l419 138E                                          l372 1404  
                                        l365 147A                                          l358 1318  
                                        l377 15C8                                          l298 166A  
                                        u900 1026                                          u901 1022  
                                        u910 1046                                          u911 1042  
                                        u940 110A                                          u924 106C  
                                        u860 1138                                          u941 1104  
                                        u925 1068                                          u861 1134  
                                        u934 10C2                                          u870 1158  
                                        u950 1490                                          u935 10BE  
                                        u871 1154                                          u951 148C  
                                        u960 14B0                                          u961 14AC  
                                        u946 110C                                          u970 141A  
                                        u971 1416                                          u884 117E  
                                        u885 117A                                          u894 11D4  
                                        u990 146E                                          u895 11D0  
                                        u991 146A                                          u984 144C  
                                        u985 1448                          led_initialize@F3143 004D  
                                        wreg 0FE8                        relay_initialize@F3137 0049  
                __end_of_lcd_8bit_set_cursor 1390                                         l2001 1368  
                                       l2003 1666                                         l2011 15C6  
                                       l2005 158E                                         l2007 159E  
                                       l2009 15A6                                         l2323 121A  
                                       l2271 1506                                         l2263 14DA  
                                       l2273 151A                                         l2265 14DA  
                                       l1811 11B6                                         l1803 1124  
                                       l2267 14DE                                         l1805 1138  
                                       l2269 14F2                                         l1831 104E  
                                       l1815 1206                                         l1807 1158  
                                       l1903 156A                                         l1833 10A4  
                                       l1825 1012                                         l1809 1160  
                                       l1817 1230                                         l1905 1578  
                                       l1913 1234                                         l1827 1026  
                                       l1907 157A                                         l1851 1650  
                                       l1843 162E                                         l1931 1286  
                                       l1915 1248                                         l1837 10F4  
                                       l1829 1046                                         l1861 14B8  
                                       l1909 158A                                         l1845 162E  
                                       l1941 12CC                                         l1933 1294  
                                       l1925 1268                                         l1917 1250  
                                       l1839 1120                                         l1863 14D6  
                                       l1855 147C                                         l1847 163A  
                                       l1871 1422                                         l1951 1308  
                                       l1943 12D8                                         l1935 12A0  
                                       l1927 1274                                         l1919 1264  
                                       l1857 1490                                         l1849 1642  
                                       l1881 145C                                         l1873 142E  
                                       l1945 12E4                                         l1937 12BA  
                                       l1929 1276                                         l1953 1316  
                                       l1961 165C                                         l1859 14B0  
                                       l1891 1536                                         l1883 145E  
                                       l1867 1406                                         l1947 12F0  
                                       l1939 12C0                                         l1963 1390  
                                       l1893 154A                                         l1885 146E  
                                       l1869 141A                                         l1949 12FC  
                                       l1957 1654                                         l1981 13F8  
                                       l1965 13A4                                         l1895 1552  
                                       l1879 1432                                         l1887 1478  
                                       l1959 1654                                         l1975 13BC  
                                       l1983 1402                                         l1967 13AC  
                                       l1991 1320                                         l1897 1566  
                                       l1977 13E6                                         l1969 13B8  
                                       l1993 1332                                         l1979 13E8  
                                       l1995 1344                                         l1987 131A  
                                       l1997 1356                                         l1989 131A  
                                       u1000 154A                                         u1001 1546  
                                       u1010 158A                                         u1011 1586  
                                       u1020 1248                                         u1021 1244  
                                       u1030 1286                                         u1031 1282  
                                       u1040 13A4                                         u1041 13A0  
                                       u1060 13F8                                         u1061 13F4  
                                       u1054 13D6                                         u1070 159E  
                                       u1055 13D2                                         u1071 159A  
         lcd_8bit_send_command@l_pin_counter 003E                                         _LATA 0F89  
                                       _LATB 0F8A                                         u1407 12A6  
                                       _LATC 0F8B                                         _LATD 0F8C  
                                       u1417 12BC                                         _LATE 0F8D  
                                       u1427 163C                                         u1397 128C  
                                       _main 14DA                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         prodl 0FF3  
                                       start 0002                __end_of_lcd_8bit_send_command 147C  
                 gpio_pin_initialization@ret 0039                                 ___param_bank 0000  
                       _gpio_pin_write_logic 1124                                        ?_main 002F  
                   ??_application_initialize 0043                          relay_turn_off@F3147 0047  
                                      _PORTA 0F80                                        _PORTB 0F81  
                                      _PORTC 0F82                                        _PORTD 0F83  
                                      _PORTE 0F84                                        _TRISA 0F92  
                                      _TRISB 0F93                                        _TRISC 0F94  
                                      _TRISD 0F95                                        _TRISE 0F96  
                                      _lcd_1 0029                                        _lcd_2 001F  
                   ?_lcd_8bit_send_char_data 0039          __end_of_lcd_8bit_send_char_data_pos 15CA  
                _lcd_8bit_send_char_data_pos 158E                                        tablat 0FF5  
                                      status 0FD8                ??_lcd_8bit_send_char_data_pos 0046  
                            __initialization 15CA                                 __end_of_main 1536  
                      ?_gpio_pin_write_logic 002F                       lcd_8bit_set_cursor@col 0041  
                     lcd_8bit_set_cursor@lcd 003F                       lcd_8bit_set_cursor@row 0040  
                              _lat_registers 000B                                       ??_main 0047  
                              __activetblptr 0002                             led_turn_on@F3148 004C  
                                     clear_0 15F0                                       isa$std 0001  
             lcd_8bit_send_char_data_pos@col 0044               lcd_8bit_send_char_data_pos@lcd 0042  
             lcd_8bit_send_char_data_pos@ret 0046               lcd_8bit_send_char_data_pos@row 0043  
                               __pdataCOMRAM 0001                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8              lcd_8bits_send_enable_signal@lcd 0037  
            lcd_8bits_send_enable_signal@ret 0038                                   __accesstop 0060  
                    __end_of__initialization 15F6                                ___rparam_used 0001  
                     ??_gpio_pin_write_logic 0031                               __pcstackCOMRAM 002F  
                     _application_initialize 1666                       lcd_8bit_initialize@lcd 003F  
                     lcd_8bit_initialize@ret 0042               ??_lcd_8bits_send_enable_signal 0038  
                          led_turn_off@F3153 004B                         led_turn_toggle@F3158 004A  
                                 _btn_values 1001                               _tris_registers 0015  
     lcd_8bit_initialize@l_data_pins_counter 0041       lcd_4bit_initialize@l_data_pins_counter 003C  
                                    __Hparam 0000                                      __Lparam 0000  
                      _lcd_8bit_send_command 1406                                 __psmallconst 1000  
                                    __pcinit 15CA                                      __ramtop 1000  
                                    __ptext0 14DA                                      __ptext1 158E  
                                    __ptext2 131A                                      __ptext3 1390  
                                    __ptext4 1666                                      __ptext5 1654  
                                    __ptext6 1234                                      __ptext7 1406  
                                    __ptext8 162E                                      __ptext9 1536  
            lcd_8bit_send_char_data_pos@data 0045                         end_of_initialization 15F6  
                              __Lmediumconst 0000            gpio_pin_initialization@pin_config 0037  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc2 0FDE  
                        _lcd_4bit_initialize 1536                      _gpio_pin_initialization 147C  
                       ?_lcd_4bit_initialize 003A                           relay_turn_on@F3142 0048  
                     ?_lcd_8bit_send_command 0039                                __pidataCOMRAM 1600  
                        start_initialization 15CA                          _lcd_8bit_initialize 1234  
                    ?_application_initialize 002F                        ??_lcd_4bit_initialize 003B  
       gpio_pin_direction_initialization@ret 0035                         ?_lcd_8bit_initialize 003F  
                    _lcd_8bit_send_char_data 1390                    ??_gpio_pin_initialization 0038  
               __end_of_ecu_layer_initialize 1666                          _lcd_8bit_set_cursor 131A  
                   lcd_8bit_send_command@lcd 0039                     lcd_8bit_send_command@ret 003D  
                                __pbssCOMRAM 0047               __end_of_application_initialize 166C  
               ?_lcd_8bit_send_char_data_pos 0042                         ?_lcd_8bit_set_cursor 003F  
             gpio_pin_write_logic@pin_config 002F                        ??_lcd_8bit_initialize 0040  
                lcd_8bit_send_char_data@data 003A                    gpio_pin_write_logic@logic 0030  
                                __smallconst 1000         __end_of_lcd_8bits_send_enable_signal 1654  
               _lcd_8bits_send_enable_signal 162E              __end_of_gpio_pin_initialization 14DA  
                      ??_lcd_8bit_set_cursor 0042                    ??_lcd_8bit_send_char_data 003B  
  __end_of_gpio_pin_direction_initialization 1124          ??_gpio_pin_direction_initialization 0030  
         ?_gpio_pin_direction_initialization 002F            _gpio_pin_direction_initialization 1012  
       lcd_8bit_send_char_data@l_pin_counter 003E                      gpio_pin_write_logic@ret 0036  
                                  copy_data0 15DE                ?_lcd_8bits_send_enable_signal 0037  
                       _ecu_layer_initialize 1654                      ??_lcd_8bit_send_command 003B  
                                   __Hrparam 0000                                     __Lrparam 0000  
            __end_of_lcd_8bit_send_char_data 1406                           __end_of_btn_values 1011  
gpio_pin_direction_initialization@pin_config 002F                   lcd_8bit_send_char_data@lcd 0039  
                 lcd_8bit_send_char_data@ret 003D                                     __ptext10 147C  
                                   __ptext11 1124                                     __ptext12 1012  
                      ?_ecu_layer_initialize 002F                                     isa$xinst 0000  
                __end_of_lcd_4bit_initialize 158E                 __end_of_gpio_pin_write_logic 1234  
                             _port_registers 0001                       ??_ecu_layer_initialize 0043  
                __end_of_lcd_8bit_initialize 131A                 lcd_8bit_send_command@command 003A  
                     lcd_4bit_initialize@lcd 003A                       lcd_4bit_initialize@ret 003B  
                   ?_gpio_pin_initialization 0037  
