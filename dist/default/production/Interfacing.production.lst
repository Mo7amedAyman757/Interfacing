

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 23 00:21:45 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F46K20 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   001440                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_registers
    64   001440  80                 	db	128
    65   001441  0F                 	db	15
    66   001442  81                 	db	129
    67   001443  0F                 	db	15
    68   001444  82                 	db	130
    69   001445  0F                 	db	15
    70   001446  83                 	db	131
    71   001447  0F                 	db	15
    72   001448  84                 	db	132
    73   001449  0F                 	db	15
    74                           
    75                           ;initializer for _lat_registers
    76   00144A  89                 	db	137
    77   00144B  0F                 	db	15
    78   00144C  8A                 	db	138
    79   00144D  0F                 	db	15
    80   00144E  8B                 	db	139
    81   00144F  0F                 	db	15
    82   001450  8C                 	db	140
    83   001451  0F                 	db	15
    84   001452  8D                 	db	141
    85   001453  0F                 	db	15
    86                           
    87                           ;initializer for _tris_registers
    88   001454  92                 	db	146
    89   001455  0F                 	db	15
    90   001456  93                 	db	147
    91   001457  0F                 	db	15
    92   001458  94                 	db	148
    93   001459  0F                 	db	15
    94   00145A  95                 	db	149
    95   00145B  0F                 	db	15
    96   00145C  96                 	db	150
    97   00145D  0F                 	db	15
    98                           
    99                           ;initializer for _ret
   100   00145E  01                 	db	1
   101                           
   102                           ;initializer for _dc_motor_2
   103   00145F  12                 	db	18
   104   001460  1A                 	db	26
   105                           
   106                           ;initializer for _dc_motor_1
   107   001461  02                 	db	2
   108   001462  0A                 	db	10
   109   000000                     _PORTA	set	3968
   110   000000                     _LATA	set	3977
   111   000000                     _TRISA	set	3986
   112   000000                     _TRISE	set	3990
   113   000000                     _TRISD	set	3989
   114   000000                     _TRISC	set	3988
   115   000000                     _TRISB	set	3987
   116   000000                     _LATE	set	3981
   117   000000                     _LATD	set	3980
   118   000000                     _LATC	set	3979
   119   000000                     _LATB	set	3978
   120   000000                     _PORTE	set	3972
   121   000000                     _PORTD	set	3971
   122   000000                     _PORTC	set	3970
   123   000000                     _PORTB	set	3969
   124                           
   125                           ; #config settings
   126                           
   127                           	psect	cinit
   128   0013E4                     __pcinit:
   129                           	callstack 0
   130   0013E4                     start_initialization:
   131                           	callstack 0
   132   0013E4                     __initialization:
   133                           	callstack 0
   134                           
   135                           ; Initialize objects allocated to COMRAM (35 bytes)
   136                           ; load TBLPTR registers with __pidataCOMRAM
   137   0013E4  0E40               	movlw	low __pidataCOMRAM
   138   0013E6  6EF6               	movwf	tblptrl,c
   139   0013E8  0E14               	movlw	high __pidataCOMRAM
   140   0013EA  6EF7               	movwf	tblptrh,c
   141   0013EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   142   0013EE  6EF8               	movwf	tblptru,c
   143   0013F0  EE00  F001         	lfsr	0,__pdataCOMRAM
   144   0013F4  EE10 F023          	lfsr	1,35
   145   0013F8                     copy_data0:
   146   0013F8  0009               	tblrd		*+
   147   0013FA  CFF5 FFEE          	movff	tablat,postinc0
   148   0013FE  50E5               	movf	postdec1,w,c
   149   001400  50E1               	movf	fsr1l,w,c
   150   001402  E1FA               	bnz	copy_data0
   151                           
   152                           ; Clear objects allocated to COMRAM (7 bytes)
   153   001404  EE00  F031         	lfsr	0,__pbssCOMRAM
   154   001408  0E07               	movlw	7
   155   00140A                     clear_0:
   156   00140A  6AEE               	clrf	postinc0,c
   157   00140C  06E8               	decf	wreg,f,c
   158   00140E  E1FD               	bnz	clear_0
   159   001410                     end_of_initialization:
   160                           	callstack 0
   161   001410                     __end_of__initialization:
   162                           	callstack 0
   163   001410  0E00               	movlw	low (__Lmediumconst shr (0+16))
   164   001412  6EF8               	movwf	tblptru,c
   165   001414  0100               	movlb	0
   166   001416  EF12  F009         	goto	_main	;jump to C main() function
   167                           
   168                           	psect	bssCOMRAM
   169   000031                     __pbssCOMRAM:
   170                           	callstack 0
   171   000031                     relay_turn_off@F3147:
   172                           	callstack 0
   173   000031                     	ds	1
   174   000032                     relay_turn_on@F3142:
   175                           	callstack 0
   176   000032                     	ds	1
   177   000033                     relay_initialize@F3137:
   178                           	callstack 0
   179   000033                     	ds	1
   180   000034                     led_turn_toggle@F3158:
   181                           	callstack 0
   182   000034                     	ds	1
   183   000035                     led_turn_off@F3153:
   184                           	callstack 0
   185   000035                     	ds	1
   186   000036                     led_turn_on@F3148:
   187                           	callstack 0
   188   000036                     	ds	1
   189   000037                     led_initialize@F3143:
   190                           	callstack 0
   191   000037                     	ds	1
   192                           
   193                           	psect	dataCOMRAM
   194   000001                     __pdataCOMRAM:
   195                           	callstack 0
   196   000001                     _port_registers:
   197                           	callstack 0
   198   000001                     	ds	10
   199   00000B                     _lat_registers:
   200                           	callstack 0
   201   00000B                     	ds	10
   202   000015                     _tris_registers:
   203                           	callstack 0
   204   000015                     	ds	10
   205   00001F                     _ret:
   206                           	callstack 0
   207   00001F                     	ds	1
   208   000020                     _dc_motor_2:
   209                           	callstack 0
   210   000020                     	ds	2
   211   000022                     _dc_motor_1:
   212                           	callstack 0
   213   000022                     	ds	2
   214                           
   215                           	psect	cstackCOMRAM
   216   000024                     __pcstackCOMRAM:
   217                           	callstack 0
   218   000024                     gpio_pin_direction_initialization@pin_config:
   219                           	callstack 0
   220   000024                     gpio_pin_write_logic@pin_config:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x0
   224   000024                     	ds	1
   225   000025                     ??_gpio_pin_direction_initialization:
   226   000025                     gpio_pin_write_logic@logic:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x1
   230   000025                     	ds	1
   231   000026                     ??_gpio_pin_write_logic:
   232                           
   233                           ; 1 bytes @ 0x2
   234   000026                     	ds	4
   235   00002A                     gpio_pin_direction_initialization@ret:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x6
   239   00002A                     	ds	1
   240   00002B                     gpio_pin_write_logic@ret:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0x7
   244   00002B                     	ds	1
   245   00002C                     dc_motor_move_right@dc_motor:
   246                           	callstack 0
   247   00002C                     dc_motor_move_left@dc_motor:
   248                           	callstack 0
   249   00002C                     dc_motor_stop@dc_motor:
   250                           	callstack 0
   251   00002C                     gpio_pin_initialization@pin_config:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0x8
   255   00002C                     	ds	1
   256   00002D                     ??_gpio_pin_initialization:
   257   00002D                     dc_motor_move_right@ret:
   258                           	callstack 0
   259   00002D                     dc_motor_move_left@ret:
   260                           	callstack 0
   261   00002D                     dc_motor_stop@ret:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x9
   265   00002D                     	ds	1
   266   00002E                     dc_motor_initialize@dc_motor:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0xA
   270   00002E                     	ds	1
   271   00002F                     ??_main:
   272                           
   273                           ; 1 bytes @ 0xB
   274   00002F                     	ds	2
   275                           
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 35 in file "application.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  2  243[None  ] int 
   288 ;; Registers used:
   289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;Total ram usage:        2 bytes
   300 ;; Hardware stack levels required when called: 4
   301 ;; This function calls:
   302 ;;		_application_initialize
   303 ;;		_dc_motor_move_left
   304 ;;		_dc_motor_move_right
   305 ;;		_dc_motor_stop
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text0
   312   001224                     __ptext0:
   313                           	callstack 0
   314   001224                     _main:
   315                           	callstack 27
   316   001224                     
   317                           ;application.c: 37:     application_initialize();
   318   001224  EC32  F00A         	call	_application_initialize	;wreg free
   319   001228                     l244:
   320                           
   321                           ;application.c: 41:         ret = dc_motor_move_right(&dc_motor_1);
   322   001228  0E22               	movlw	low _dc_motor_1
   323   00122A  6E2C               	movwf	dc_motor_move_right@dc_motor^0,c
   324   00122C  ECBA  F009         	call	_dc_motor_move_right	;wreg free
   325   001230  6E1F               	movwf	_ret^0,c
   326                           
   327                           ;application.c: 42:         ret = dc_motor_move_right(&dc_motor_2);
   328   001232  0E20               	movlw	low _dc_motor_2
   329   001234  6E2C               	movwf	dc_motor_move_right@dc_motor^0,c
   330   001236  ECBA  F009         	call	_dc_motor_move_right	;wreg free
   331   00123A  6E1F               	movwf	_ret^0,c
   332   00123C                     
   333                           ;application.c: 44:         _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   334   00123C  0E15               	movlw	21
   335   00123E  6E30               	movwf	(??_main+1)^0,c
   336   001240  0E4B               	movlw	75
   337   001242  6E2F               	movwf	??_main^0,c
   338   001244  0EBE               	movlw	190
   339   001246                     u827:
   340   001246  2EE8               	decfsz	wreg,f,c
   341   001248  D7FE               	bra	u827
   342   00124A  2E2F               	decfsz	??_main^0,f,c
   343   00124C  D7FC               	bra	u827
   344   00124E  2E30               	decfsz	(??_main+1)^0,f,c
   345   001250  D7FA               	bra	u827
   346   001252  F000 F000          	nop2	
   347   001256                     
   348                           ;application.c: 46:         ret = dc_motor_stop(&dc_motor_1);
   349   001256  0E22               	movlw	low _dc_motor_1
   350   001258  6E2C               	movwf	dc_motor_stop@dc_motor^0,c
   351   00125A  EC9E  F009         	call	_dc_motor_stop	;wreg free
   352   00125E  6E1F               	movwf	_ret^0,c
   353   001260                     
   354                           ;application.c: 47:         ret = dc_motor_stop(&dc_motor_2);
   355   001260  0E20               	movlw	low _dc_motor_2
   356   001262  6E2C               	movwf	dc_motor_stop@dc_motor^0,c
   357   001264  EC9E  F009         	call	_dc_motor_stop	;wreg free
   358   001268  6E1F               	movwf	_ret^0,c
   359   00126A                     
   360                           ;application.c: 49:         _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   361   00126A  0E15               	movlw	21
   362   00126C  6E30               	movwf	(??_main+1)^0,c
   363   00126E  0E4B               	movlw	75
   364   001270  6E2F               	movwf	??_main^0,c
   365   001272  0EBE               	movlw	190
   366   001274                     u837:
   367   001274  2EE8               	decfsz	wreg,f,c
   368   001276  D7FE               	bra	u837
   369   001278  2E2F               	decfsz	??_main^0,f,c
   370   00127A  D7FC               	bra	u837
   371   00127C  2E30               	decfsz	(??_main+1)^0,f,c
   372   00127E  D7FA               	bra	u837
   373   001280  F000 F000          	nop2	
   374                           
   375                           ;application.c: 51:         ret = dc_motor_move_left(&dc_motor_1);
   376   001284  0E22               	movlw	low _dc_motor_1
   377   001286  6E2C               	movwf	dc_motor_move_left@dc_motor^0,c
   378   001288  ECD6  F009         	call	_dc_motor_move_left	;wreg free
   379   00128C  6E1F               	movwf	_ret^0,c
   380                           
   381                           ;application.c: 52:         ret = dc_motor_move_left(&dc_motor_2);
   382   00128E  0E20               	movlw	low _dc_motor_2
   383   001290  6E2C               	movwf	dc_motor_move_left@dc_motor^0,c
   384   001292  ECD6  F009         	call	_dc_motor_move_left	;wreg free
   385   001296  6E1F               	movwf	_ret^0,c
   386   001298                     
   387                           ;application.c: 54:         _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   388   001298  0E15               	movlw	21
   389   00129A  6E30               	movwf	(??_main+1)^0,c
   390   00129C  0E4B               	movlw	75
   391   00129E  6E2F               	movwf	??_main^0,c
   392   0012A0  0EBE               	movlw	190
   393   0012A2                     u847:
   394   0012A2  2EE8               	decfsz	wreg,f,c
   395   0012A4  D7FE               	bra	u847
   396   0012A6  2E2F               	decfsz	??_main^0,f,c
   397   0012A8  D7FC               	bra	u847
   398   0012AA  2E30               	decfsz	(??_main+1)^0,f,c
   399   0012AC  D7FA               	bra	u847
   400   0012AE  F000 F000          	nop2	
   401   0012B2                     
   402                           ;application.c: 56:         ret = dc_motor_stop(&dc_motor_1);
   403   0012B2  0E22               	movlw	low _dc_motor_1
   404   0012B4  6E2C               	movwf	dc_motor_stop@dc_motor^0,c
   405   0012B6  EC9E  F009         	call	_dc_motor_stop	;wreg free
   406   0012BA  6E1F               	movwf	_ret^0,c
   407   0012BC                     
   408                           ;application.c: 57:         ret = dc_motor_stop(&dc_motor_2);
   409   0012BC  0E20               	movlw	low _dc_motor_2
   410   0012BE  6E2C               	movwf	dc_motor_stop@dc_motor^0,c
   411   0012C0  EC9E  F009         	call	_dc_motor_stop	;wreg free
   412   0012C4  6E1F               	movwf	_ret^0,c
   413   0012C6                     
   414                           ;application.c: 59:         _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   415   0012C6  0E15               	movlw	21
   416   0012C8  6E30               	movwf	(??_main+1)^0,c
   417   0012CA  0E4B               	movlw	75
   418   0012CC  6E2F               	movwf	??_main^0,c
   419   0012CE  0EBE               	movlw	190
   420   0012D0                     u857:
   421   0012D0  2EE8               	decfsz	wreg,f,c
   422   0012D2  D7FE               	bra	u857
   423   0012D4  2E2F               	decfsz	??_main^0,f,c
   424   0012D6  D7FC               	bra	u857
   425   0012D8  2E30               	decfsz	(??_main+1)^0,f,c
   426   0012DA  D7FA               	bra	u857
   427   0012DC  F000 F000          	nop2	
   428   0012E0  EF14  F009         	goto	l244
   429   0012E4  EF00  F000         	goto	start
   430   0012E8                     __end_of_main:
   431                           	callstack 0
   432                           
   433 ;; *************** function _dc_motor_stop *****************
   434 ;; Defined at:
   435 ;;		line 53 in file "ECU_Layer/DC_Motor/ecu_motor.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;  dc_motor        1    8[COMRAM] PTR const struct .
   438 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  ret             1    9[COMRAM] unsigned char 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      unsigned char 
   443 ;; Registers used:
   444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   450 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;Total ram usage:        2 bytes
   455 ;; Hardware stack levels used: 1
   456 ;; Hardware stack levels required when called: 1
   457 ;; This function calls:
   458 ;;		_gpio_pin_write_logic
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text1
   465   00133C                     __ptext1:
   466                           	callstack 0
   467   00133C                     _dc_motor_stop:
   468                           	callstack 29
   469   00133C                     
   470                           ;ECU_Layer/DC_Motor/ecu_motor.c: 55:     STD_ReturnType ret = (STD_ReturnType)0x01;
   471   00133C  0E01               	movlw	1
   472   00133E  6E2D               	movwf	dc_motor_stop@ret^0,c
   473                           
   474                           ;ECU_Layer/DC_Motor/ecu_motor.c: 56:     if (((void*)0) == dc_motor) {
   475   001340  502C               	movf	dc_motor_stop@dc_motor^0,w,c
   476   001342  A4D8               	btfss	status,2,c
   477   001344  EFA6  F009         	goto	u681
   478   001348  EFA8  F009         	goto	u680
   479   00134C                     u681:
   480   00134C  EFAC  F009         	goto	l1362
   481   001350                     u680:
   482   001350                     
   483                           ;ECU_Layer/DC_Motor/ecu_motor.c: 57:         ret = (STD_ReturnType)0x00;
   484   001350  0E00               	movlw	0
   485   001352  6E2D               	movwf	dc_motor_stop@ret^0,c
   486                           
   487                           ;ECU_Layer/DC_Motor/ecu_motor.c: 58:     } else {
   488   001354  EFB8  F009         	goto	l1364
   489   001358                     l1362:
   490                           
   491                           ;ECU_Layer/DC_Motor/ecu_motor.c: 59:         gpio_pin_write_logic(&(dc_motor->dc_motor[0
      +                          ]), GPIO_LOW);
   492   001358  C02C  F024         	movff	dc_motor_stop@dc_motor,gpio_pin_write_logic@pin_config
   493   00135C  0E00               	movlw	0
   494   00135E  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   495   001360  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   496                           
   497                           ;ECU_Layer/DC_Motor/ecu_motor.c: 60:         gpio_pin_write_logic(&(dc_motor->dc_motor[1
      +                          ]), GPIO_LOW);
   498   001364  282C               	incf	dc_motor_stop@dc_motor^0,w,c
   499   001366  6E24               	movwf	gpio_pin_write_logic@pin_config^0,c
   500   001368  0E00               	movlw	0
   501   00136A  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   502   00136C  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   503   001370                     l1364:
   504                           
   505                           ;ECU_Layer/DC_Motor/ecu_motor.c: 62:     return ret;
   506   001370  502D               	movf	dc_motor_stop@ret^0,w,c
   507   001372  0012               	return		;funcret
   508   001374                     __end_of_dc_motor_stop:
   509                           	callstack 0
   510                           
   511 ;; *************** function _dc_motor_move_right *****************
   512 ;; Defined at:
   513 ;;		line 27 in file "ECU_Layer/DC_Motor/ecu_motor.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  dc_motor        1    8[COMRAM] PTR const struct .
   516 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  ret             1    9[COMRAM] unsigned char 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      unsigned char 
   521 ;; Registers used:
   522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   528 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;Total ram usage:        2 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 1
   535 ;; This function calls:
   536 ;;		_gpio_pin_write_logic
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text2
   543   001374                     __ptext2:
   544                           	callstack 0
   545   001374                     _dc_motor_move_right:
   546                           	callstack 29
   547   001374                     
   548                           ;ECU_Layer/DC_Motor/ecu_motor.c: 29:     STD_ReturnType ret = (STD_ReturnType)0x01;
   549   001374  0E01               	movlw	1
   550   001376  6E2D               	movwf	dc_motor_move_right@ret^0,c
   551                           
   552                           ;ECU_Layer/DC_Motor/ecu_motor.c: 30:     if (((void*)0) == dc_motor) {
   553   001378  502C               	movf	dc_motor_move_right@dc_motor^0,w,c
   554   00137A  A4D8               	btfss	status,2,c
   555   00137C  EFC2  F009         	goto	u661
   556   001380  EFC4  F009         	goto	u660
   557   001384                     u661:
   558   001384  EFC8  F009         	goto	l1342
   559   001388                     u660:
   560   001388                     
   561                           ;ECU_Layer/DC_Motor/ecu_motor.c: 31:         ret = (STD_ReturnType)0x00;
   562   001388  0E00               	movlw	0
   563   00138A  6E2D               	movwf	dc_motor_move_right@ret^0,c
   564                           
   565                           ;ECU_Layer/DC_Motor/ecu_motor.c: 32:     } else {
   566   00138C  EFD4  F009         	goto	l1344
   567   001390                     l1342:
   568                           
   569                           ;ECU_Layer/DC_Motor/ecu_motor.c: 33:         gpio_pin_write_logic(&(dc_motor->dc_motor[0
      +                          ]), GPIO_HIGH);
   570   001390  C02C  F024         	movff	dc_motor_move_right@dc_motor,gpio_pin_write_logic@pin_config
   571   001394  0E01               	movlw	1
   572   001396  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   573   001398  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   574                           
   575                           ;ECU_Layer/DC_Motor/ecu_motor.c: 34:         gpio_pin_write_logic(&(dc_motor->dc_motor[1
      +                          ]), GPIO_LOW);
   576   00139C  282C               	incf	dc_motor_move_right@dc_motor^0,w,c
   577   00139E  6E24               	movwf	gpio_pin_write_logic@pin_config^0,c
   578   0013A0  0E00               	movlw	0
   579   0013A2  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   580   0013A4  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   581   0013A8                     l1344:
   582                           
   583                           ;ECU_Layer/DC_Motor/ecu_motor.c: 36:     return ret;
   584   0013A8  502D               	movf	dc_motor_move_right@ret^0,w,c
   585   0013AA  0012               	return		;funcret
   586   0013AC                     __end_of_dc_motor_move_right:
   587                           	callstack 0
   588                           
   589 ;; *************** function _dc_motor_move_left *****************
   590 ;; Defined at:
   591 ;;		line 40 in file "ECU_Layer/DC_Motor/ecu_motor.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  dc_motor        1    8[COMRAM] PTR const struct .
   594 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  ret             1    9[COMRAM] unsigned char 
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      unsigned char 
   599 ;; Registers used:
   600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   606 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;Total ram usage:        2 bytes
   611 ;; Hardware stack levels used: 1
   612 ;; Hardware stack levels required when called: 1
   613 ;; This function calls:
   614 ;;		_gpio_pin_write_logic
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text3
   621   0013AC                     __ptext3:
   622                           	callstack 0
   623   0013AC                     _dc_motor_move_left:
   624                           	callstack 29
   625   0013AC                     
   626                           ;ECU_Layer/DC_Motor/ecu_motor.c: 42:     STD_ReturnType ret = (STD_ReturnType)0x01;
   627   0013AC  0E01               	movlw	1
   628   0013AE  6E2D               	movwf	dc_motor_move_left@ret^0,c
   629                           
   630                           ;ECU_Layer/DC_Motor/ecu_motor.c: 43:     if (((void*)0) == dc_motor) {
   631   0013B0  502C               	movf	dc_motor_move_left@dc_motor^0,w,c
   632   0013B2  A4D8               	btfss	status,2,c
   633   0013B4  EFDE  F009         	goto	u671
   634   0013B8  EFE0  F009         	goto	u670
   635   0013BC                     u671:
   636   0013BC  EFE4  F009         	goto	l1352
   637   0013C0                     u670:
   638   0013C0                     
   639                           ;ECU_Layer/DC_Motor/ecu_motor.c: 44:         ret = (STD_ReturnType)0x00;
   640   0013C0  0E00               	movlw	0
   641   0013C2  6E2D               	movwf	dc_motor_move_left@ret^0,c
   642                           
   643                           ;ECU_Layer/DC_Motor/ecu_motor.c: 45:     } else {
   644   0013C4  EFF0  F009         	goto	l1354
   645   0013C8                     l1352:
   646                           
   647                           ;ECU_Layer/DC_Motor/ecu_motor.c: 46:         gpio_pin_write_logic(&(dc_motor->dc_motor[0
      +                          ]), GPIO_LOW);
   648   0013C8  C02C  F024         	movff	dc_motor_move_left@dc_motor,gpio_pin_write_logic@pin_config
   649   0013CC  0E00               	movlw	0
   650   0013CE  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   651   0013D0  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   652                           
   653                           ;ECU_Layer/DC_Motor/ecu_motor.c: 47:         gpio_pin_write_logic(&(dc_motor->dc_motor[1
      +                          ]), GPIO_HIGH);
   654   0013D4  282C               	incf	dc_motor_move_left@dc_motor^0,w,c
   655   0013D6  6E24               	movwf	gpio_pin_write_logic@pin_config^0,c
   656   0013D8  0E01               	movlw	1
   657   0013DA  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   658   0013DC  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   659   0013E0                     l1354:
   660                           
   661                           ;ECU_Layer/DC_Motor/ecu_motor.c: 49:     return ret;
   662   0013E0  502D               	movf	dc_motor_move_left@ret^0,w,c
   663   0013E2  0012               	return		;funcret
   664   0013E4                     __end_of_dc_motor_move_left:
   665                           	callstack 0
   666                           
   667 ;; *************** function _application_initialize *****************
   668 ;; Defined at:
   669 ;;		line 64 in file "application.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;Total ram usage:        0 bytes
   688 ;; Hardware stack levels used: 1
   689 ;; Hardware stack levels required when called: 3
   690 ;; This function calls:
   691 ;;		_dc_motor_initialize
   692 ;; This function is called by:
   693 ;;		_main
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           	psect	text4
   698   001464                     __ptext4:
   699                           	callstack 0
   700   001464                     _application_initialize:
   701                           	callstack 27
   702   001464                     
   703                           ;application.c: 66:     dc_motor_initialize(&dc_motor_1);
   704   001464  0E22               	movlw	low _dc_motor_1
   705   001466  6E2E               	movwf	dc_motor_initialize@dc_motor^0,c
   706   001468  EC0D  F00A         	call	_dc_motor_initialize	;wreg free
   707                           
   708                           ;application.c: 67:     dc_motor_initialize(&dc_motor_2);
   709   00146C  0E20               	movlw	low _dc_motor_2
   710   00146E  6E2E               	movwf	dc_motor_initialize@dc_motor^0,c
   711   001470  EC0D  F00A         	call	_dc_motor_initialize	;wreg free
   712   001474  0012               	return		;funcret
   713   001476                     __end_of_application_initialize:
   714                           	callstack 0
   715                           
   716 ;; *************** function _dc_motor_initialize *****************
   717 ;; Defined at:
   718 ;;		line 13 in file "ECU_Layer/DC_Motor/ecu_motor.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  dc_motor        1   10[COMRAM] PTR const struct .
   721 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  ret             1    0        unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      unsigned char 
   726 ;; Registers used:
   727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   733 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;Total ram usage:        1 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; Hardware stack levels required when called: 2
   740 ;; This function calls:
   741 ;;		_gpio_pin_initialization
   742 ;; This function is called by:
   743 ;;		_application_initialize
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text5
   748   00141A                     __ptext5:
   749                           	callstack 0
   750   00141A                     _dc_motor_initialize:
   751                           	callstack 27
   752   00141A                     
   753                           ;ECU_Layer/DC_Motor/ecu_motor.c: 16:     if (((void*)0) == dc_motor) {
   754   00141A  502E               	movf	dc_motor_initialize@dc_motor^0,w,c
   755   00141C  A4D8               	btfss	status,2,c
   756   00141E  EF13  F00A         	goto	u651
   757   001422  EF15  F00A         	goto	u650
   758   001426                     u651:
   759   001426  EF17  F00A         	goto	l1334
   760   00142A                     u650:
   761   00142A                     
   762                           ;ECU_Layer/DC_Motor/ecu_motor.c: 18:     } else {
   763   00142A  EF1F  F00A         	goto	l32
   764   00142E                     l1334:
   765                           
   766                           ;ECU_Layer/DC_Motor/ecu_motor.c: 20:         gpio_pin_initialization(&(dc_motor->dc_moto
      +                          r[0]));
   767   00142E  C02E  F02C         	movff	dc_motor_initialize@dc_motor,gpio_pin_initialization@pin_config
   768   001432  EC74  F009         	call	_gpio_pin_initialization	;wreg free
   769                           
   770                           ;ECU_Layer/DC_Motor/ecu_motor.c: 21:         gpio_pin_initialization(&(dc_motor->dc_moto
      +                          r[1]));
   771   001436  282E               	incf	dc_motor_initialize@dc_motor^0,w,c
   772   001438  6E2C               	movwf	gpio_pin_initialization@pin_config^0,c
   773   00143A  EC74  F009         	call	_gpio_pin_initialization	;wreg free
   774   00143E                     l32:
   775   00143E  0012               	return		;funcret
   776   001440                     __end_of_dc_motor_initialize:
   777                           	callstack 0
   778                           
   779 ;; *************** function _gpio_pin_initialization *****************
   780 ;; Defined at:
   781 ;;		line 140 in file "MCAL_Layer/GPIO/hal_gpio.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;  pin_config      1    8[COMRAM] PTR const struct .
   784 ;;		 -> dc_motor_2$dc_motor(2), dc_motor_2(2), dc_motor_1$dc_motor(2), dc_motor_1(2), 
   785 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  ret             1    0        unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      unsigned char 
   790 ;; Registers used:
   791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   797 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;Total ram usage:        2 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; Hardware stack levels required when called: 1
   804 ;; This function calls:
   805 ;;		_gpio_pin_direction_initialization
   806 ;;		_gpio_pin_write_logic
   807 ;; This function is called by:
   808 ;;		_dc_motor_initialize
   809 ;;		_led_initialize
   810 ;;		_relay_initialize
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text6
   815   0012E8                     __ptext6:
   816                           	callstack 0
   817   0012E8                     _gpio_pin_initialization:
   818                           	callstack 27
   819   0012E8                     
   820                           ;MCAL_Layer/GPIO/hal_gpio.c: 142:     if ((((void*)0) == pin_config) || (pin_config->pin
      +                           > 8 - 1)) {
   821   0012E8  502C               	movf	gpio_pin_initialization@pin_config^0,w,c
   822   0012EA  B4D8               	btfsc	status,2,c
   823   0012EC  EF7A  F009         	goto	u631
   824   0012F0  EF7C  F009         	goto	u630
   825   0012F4                     u631:
   826   0012F4  EF8C  F009         	goto	l1324
   827   0012F8                     u630:
   828   0012F8  502C               	movf	gpio_pin_initialization@pin_config^0,w,c
   829   0012FA  6ED9               	movwf	fsr2l,c
   830   0012FC  6ADA               	clrf	fsr2h,c
   831   0012FE  30DF               	rrcf	223,w,c
   832   001300  32E8               	rrcf	wreg,f,c
   833   001302  32E8               	rrcf	wreg,f,c
   834   001304  0B07               	andlw	7
   835   001306  6E2D               	movwf	??_gpio_pin_initialization^0,c
   836   001308  0E07               	movlw	7
   837   00130A  642D               	cpfsgt	??_gpio_pin_initialization^0,c
   838   00130C  EF8A  F009         	goto	u641
   839   001310  EF8C  F009         	goto	u640
   840   001314                     u641:
   841   001314  EF8E  F009         	goto	l1326
   842   001318                     u640:
   843   001318                     l1324:
   844                           
   845                           ;MCAL_Layer/GPIO/hal_gpio.c: 144:     } else {
   846   001318  EF9D  F009         	goto	l194
   847   00131C                     l1326:
   848                           
   849                           ;MCAL_Layer/GPIO/hal_gpio.c: 145:         gpio_pin_direction_initialization(pin_config);
   850   00131C  C02C  F024         	movff	gpio_pin_initialization@pin_config,gpio_pin_direction_initialization@pin_config
   851   001320  EC01  F008         	call	_gpio_pin_direction_initialization	;wreg free
   852                           
   853                           ;MCAL_Layer/GPIO/hal_gpio.c: 146:         gpio_pin_write_logic(pin_config, pin_config->l
      +                          ogic);
   854   001324  C02C  F024         	movff	gpio_pin_initialization@pin_config,gpio_pin_write_logic@pin_config
   855   001328  502C               	movf	gpio_pin_initialization@pin_config^0,w,c
   856   00132A  6ED9               	movwf	fsr2l,c
   857   00132C  6ADA               	clrf	fsr2h,c
   858   00132E  0E00               	movlw	0
   859   001330  BEDF               	btfsc	indf2,7,c
   860   001332  0E01               	movlw	1
   861   001334  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   862   001336  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   863   00133A                     l194:
   864   00133A  0012               	return		;funcret
   865   00133C                     __end_of_gpio_pin_initialization:
   866                           	callstack 0
   867                           
   868 ;; *************** function _gpio_pin_write_logic *****************
   869 ;; Defined at:
   870 ;;		line 73 in file "MCAL_Layer/GPIO/hal_gpio.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  pin_config      1    0[COMRAM] PTR const struct .
   873 ;;		 -> dc_motor_2$dc_motor(2), dc_motor_2(2), dc_motor_1$dc_motor(2), dc_motor_1(2), 
   874 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
   875 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
   876 ;;  logic           1    1[COMRAM] enum E3063
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  ret             1    7[COMRAM] unsigned char 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      unsigned char 
   881 ;; Registers used:
   882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;Total ram usage:        8 bytes
   893 ;; Hardware stack levels used: 1
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_dc_motor_move_right
   898 ;;		_dc_motor_move_left
   899 ;;		_dc_motor_stop
   900 ;;		_gpio_pin_initialization
   901 ;;		_led_turn_on
   902 ;;		_led_turn_off
   903 ;;		_relay_turn_on
   904 ;;		_relay_turn_off
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text7
   909   001114                     __ptext7:
   910                           	callstack 0
   911   001114                     _gpio_pin_write_logic:
   912                           	callstack 29
   913   001114                     
   914                           ;MCAL_Layer/GPIO/hal_gpio.c: 74:     STD_ReturnType ret = (STD_ReturnType)0x01;
   915   001114  0E01               	movlw	1
   916   001116  6E2B               	movwf	gpio_pin_write_logic@ret^0,c
   917                           
   918                           ;MCAL_Layer/GPIO/hal_gpio.c: 75:     if ((((void*)0) == pin_config) || (pin_config->pin 
      +                          > 8 - 1)) {
   919   001118  5024               	movf	gpio_pin_write_logic@pin_config^0,w,c
   920   00111A  B4D8               	btfsc	status,2,c
   921   00111C  EF92  F008         	goto	u591
   922   001120  EF94  F008         	goto	u590
   923   001124                     u591:
   924   001124  EFA4  F008         	goto	l1302
   925   001128                     u590:
   926   001128  5024               	movf	gpio_pin_write_logic@pin_config^0,w,c
   927   00112A  6ED9               	movwf	fsr2l,c
   928   00112C  6ADA               	clrf	fsr2h,c
   929   00112E  30DF               	rrcf	223,w,c
   930   001130  32E8               	rrcf	wreg,f,c
   931   001132  32E8               	rrcf	wreg,f,c
   932   001134  0B07               	andlw	7
   933   001136  6E26               	movwf	??_gpio_pin_write_logic^0,c
   934   001138  0E07               	movlw	7
   935   00113A  6426               	cpfsgt	??_gpio_pin_write_logic^0,c
   936   00113C  EFA2  F008         	goto	u601
   937   001140  EFA4  F008         	goto	u600
   938   001144                     u601:
   939   001144  EFFB  F008         	goto	l1310
   940   001148                     u600:
   941   001148                     l1302:
   942                           
   943                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:         ret = (STD_ReturnType)0x00;
   944   001148  0E00               	movlw	0
   945   00114A  6E2B               	movwf	gpio_pin_write_logic@ret^0,c
   946                           
   947                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     } else {
   948   00114C  EF10  F009         	goto	l1312
   949   001150                     l1304:
   950                           
   951                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 (*lat_registers[pin_config->port] &= ~(
      +                          1 << pin_config->pin));
   952   001150  5024               	movf	gpio_pin_write_logic@pin_config^0,w,c
   953   001152  6ED9               	movwf	fsr2l,c
   954   001154  6ADA               	clrf	fsr2h,c
   955   001156  30DF               	rrcf	223,w,c
   956   001158  32E8               	rrcf	wreg,f,c
   957   00115A  32E8               	rrcf	wreg,f,c
   958   00115C  0B07               	andlw	7
   959   00115E  6E26               	movwf	??_gpio_pin_write_logic^0,c
   960   001160  0E01               	movlw	1
   961   001162  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
   962   001164  2A26               	incf	??_gpio_pin_write_logic^0,f,c
   963   001166  EFB7  F008         	goto	u614
   964   00116A                     u615:
   965   00116A  90D8               	bcf	status,0,c
   966   00116C  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   967   00116E                     u614:
   968   00116E  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
   969   001170  EFB5  F008         	goto	u615
   970   001174  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   971   001176  0AFF               	xorlw	255
   972   001178  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
   973   00117A  5024               	movf	gpio_pin_write_logic@pin_config^0,w,c
   974   00117C  6ED9               	movwf	fsr2l,c
   975   00117E  6ADA               	clrf	fsr2h,c
   976   001180  50DF               	movf	223,w,c
   977   001182  0B07               	andlw	7
   978   001184  0D02               	mullw	2
   979   001186  50F3               	movf	243,w,c
   980   001188  0F0B               	addlw	low _lat_registers
   981   00118A  6ED9               	movwf	fsr2l,c
   982   00118C  6ADA               	clrf	fsr2h,c
   983   00118E  CFDE F029          	movff	postinc2,??_gpio_pin_write_logic+3
   984   001192  CFDD F02A          	movff	postdec2,??_gpio_pin_write_logic+4
   985   001196  C029  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   986   00119A  C02A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   987   00119E  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   988   0011A0  16DF               	andwf	indf2,f,c
   989                           
   990                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:                 break;
   991   0011A2  EF10  F009         	goto	l1312
   992   0011A6                     l1306:
   993                           
   994                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 (*lat_registers[pin_config->port] |= (1
      +                           << pin_config->pin));
   995   0011A6  5024               	movf	gpio_pin_write_logic@pin_config^0,w,c
   996   0011A8  6ED9               	movwf	fsr2l,c
   997   0011AA  6ADA               	clrf	fsr2h,c
   998   0011AC  30DF               	rrcf	223,w,c
   999   0011AE  32E8               	rrcf	wreg,f,c
  1000   0011B0  32E8               	rrcf	wreg,f,c
  1001   0011B2  0B07               	andlw	7
  1002   0011B4  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1003   0011B6  0E01               	movlw	1
  1004   0011B8  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1005   0011BA  2A26               	incf	??_gpio_pin_write_logic^0,f,c
  1006   0011BC  EFE2  F008         	goto	u624
  1007   0011C0                     u625:
  1008   0011C0  90D8               	bcf	status,0,c
  1009   0011C2  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1010   0011C4                     u624:
  1011   0011C4  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
  1012   0011C6  EFE0  F008         	goto	u625
  1013   0011CA  5024               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1014   0011CC  6ED9               	movwf	fsr2l,c
  1015   0011CE  6ADA               	clrf	fsr2h,c
  1016   0011D0  50DF               	movf	223,w,c
  1017   0011D2  0B07               	andlw	7
  1018   0011D4  0D02               	mullw	2
  1019   0011D6  50F3               	movf	243,w,c
  1020   0011D8  0F0B               	addlw	low _lat_registers
  1021   0011DA  6ED9               	movwf	fsr2l,c
  1022   0011DC  6ADA               	clrf	fsr2h,c
  1023   0011DE  CFDE F028          	movff	postinc2,??_gpio_pin_write_logic+2
  1024   0011E2  CFDD F029          	movff	postdec2,??_gpio_pin_write_logic+3
  1025   0011E6  C028  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1026   0011EA  C029  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1027   0011EE  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1028   0011F0  12DF               	iorwf	indf2,f,c
  1029                           
  1030                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:                 break;
  1031   0011F2  EF10  F009         	goto	l1312
  1032   0011F6                     l1310:
  1033   0011F6  5025               	movf	gpio_pin_write_logic@logic^0,w,c
  1034   0011F8  6E26               	movwf	??_gpio_pin_write_logic^0,c
  1035   0011FA  6A27               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1036                           
  1037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1038                           ; Switch size 1, requested type "simple"
  1039                           ; Number of cases is 1, Range of values is 0 to 0
  1040                           ; switch strategies available:
  1041                           ; Name         Instructions Cycles
  1042                           ; simple_byte            4     3 (average)
  1043                           ;	Chosen strategy is simple_byte
  1044   0011FC  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1045   0011FE  0A00               	xorlw	0	; case 0
  1046   001200  B4D8               	btfsc	status,2,c
  1047   001202  EF05  F009         	goto	l1498
  1048   001206  EFA4  F008         	goto	l1302
  1049   00120A                     l1498:
  1050                           
  1051                           ; Switch size 1, requested type "simple"
  1052                           ; Number of cases is 2, Range of values is 0 to 1
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte            7     4 (average)
  1056                           ;	Chosen strategy is simple_byte
  1057   00120A  5026               	movf	??_gpio_pin_write_logic^0,w,c
  1058   00120C  0A00               	xorlw	0	; case 0
  1059   00120E  B4D8               	btfsc	status,2,c
  1060   001210  EFA8  F008         	goto	l1304
  1061   001214  0A01               	xorlw	1	; case 1
  1062   001216  B4D8               	btfsc	status,2,c
  1063   001218  EFD3  F008         	goto	l1306
  1064   00121C  EFA4  F008         	goto	l1302
  1065   001220                     l1312:
  1066                           
  1067                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:     return ret;
  1068   001220  502B               	movf	gpio_pin_write_logic@ret^0,w,c
  1069   001222  0012               	return		;funcret
  1070   001224                     __end_of_gpio_pin_write_logic:
  1071                           	callstack 0
  1072                           
  1073 ;; *************** function _gpio_pin_direction_initialization *****************
  1074 ;; Defined at:
  1075 ;;		line 25 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  pin_config      1    0[COMRAM] PTR const struct .
  1078 ;;		 -> dc_motor_2$dc_motor(2), dc_motor_2(2), dc_motor_1$dc_motor(2), dc_motor_1(2), 
  1079 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  ret             1    6[COMRAM] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      unsigned char 
  1084 ;; Registers used:
  1085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1091 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;Total ram usage:        7 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_gpio_pin_initialization
  1101 ;;		_button_initialize
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text8
  1106   001002                     __ptext8:
  1107                           	callstack 0
  1108   001002                     _gpio_pin_direction_initialization:
  1109                           	callstack 27
  1110   001002                     
  1111                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1112   001002  0E01               	movlw	1
  1113   001004  6E2A               	movwf	gpio_pin_direction_initialization@ret^0,c
  1114                           
  1115                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if ((((void*)0) == pin_config) || (pin_config->pin 
      +                          > 8 - 1)) {
  1116   001006  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1117   001008  B4D8               	btfsc	status,2,c
  1118   00100A  EF09  F008         	goto	u541
  1119   00100E  EF0B  F008         	goto	u540
  1120   001012                     u541:
  1121   001012  EF1B  F008         	goto	l1284
  1122   001016                     u540:
  1123   001016  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1124   001018  6ED9               	movwf	fsr2l,c
  1125   00101A  6ADA               	clrf	fsr2h,c
  1126   00101C  30DF               	rrcf	223,w,c
  1127   00101E  32E8               	rrcf	wreg,f,c
  1128   001020  32E8               	rrcf	wreg,f,c
  1129   001022  0B07               	andlw	7
  1130   001024  6E25               	movwf	??_gpio_pin_direction_initialization^0,c
  1131   001026  0E07               	movlw	7
  1132   001028  6425               	cpfsgt	??_gpio_pin_direction_initialization^0,c
  1133   00102A  EF19  F008         	goto	u551
  1134   00102E  EF1B  F008         	goto	u550
  1135   001032                     u551:
  1136   001032  EF72  F008         	goto	l1292
  1137   001036                     u550:
  1138   001036                     l1284:
  1139                           
  1140                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         ret = (STD_ReturnType)0x00;
  1141   001036  0E00               	movlw	0
  1142   001038  6E2A               	movwf	gpio_pin_direction_initialization@ret^0,c
  1143                           
  1144                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     } else {
  1145   00103A  EF88  F008         	goto	l1294
  1146   00103E                     l1286:
  1147                           
  1148                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 (*tris_registers[pin_config->port] &= ~
      +                          (1 << pin_config->pin));
  1149   00103E  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1150   001040  6ED9               	movwf	fsr2l,c
  1151   001042  6ADA               	clrf	fsr2h,c
  1152   001044  30DF               	rrcf	223,w,c
  1153   001046  32E8               	rrcf	wreg,f,c
  1154   001048  32E8               	rrcf	wreg,f,c
  1155   00104A  0B07               	andlw	7
  1156   00104C  6E25               	movwf	??_gpio_pin_direction_initialization^0,c
  1157   00104E  0E01               	movlw	1
  1158   001050  6E26               	movwf	(??_gpio_pin_direction_initialization+1)^0,c
  1159   001052  2A25               	incf	??_gpio_pin_direction_initialization^0,f,c
  1160   001054  EF2E  F008         	goto	u564
  1161   001058                     u565:
  1162   001058  90D8               	bcf	status,0,c
  1163   00105A  3626               	rlcf	(??_gpio_pin_direction_initialization+1)^0,f,c
  1164   00105C                     u564:
  1165   00105C  2E25               	decfsz	??_gpio_pin_direction_initialization^0,f,c
  1166   00105E  EF2C  F008         	goto	u565
  1167   001062  5026               	movf	(??_gpio_pin_direction_initialization+1)^0,w,c
  1168   001064  0AFF               	xorlw	255
  1169   001066  6E27               	movwf	(??_gpio_pin_direction_initialization+2)^0,c
  1170   001068  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1171   00106A  6ED9               	movwf	fsr2l,c
  1172   00106C  6ADA               	clrf	fsr2h,c
  1173   00106E  50DF               	movf	223,w,c
  1174   001070  0B07               	andlw	7
  1175   001072  0D02               	mullw	2
  1176   001074  50F3               	movf	243,w,c
  1177   001076  0F15               	addlw	low _tris_registers
  1178   001078  6ED9               	movwf	fsr2l,c
  1179   00107A  6ADA               	clrf	fsr2h,c
  1180   00107C  CFDE F028          	movff	postinc2,??_gpio_pin_direction_initialization+3
  1181   001080  CFDD F029          	movff	postdec2,??_gpio_pin_direction_initialization+4
  1182   001084  C028  FFD9         	movff	??_gpio_pin_direction_initialization+3,fsr2l
  1183   001088  C029  FFDA         	movff	??_gpio_pin_direction_initialization+4,fsr2h
  1184   00108C  5027               	movf	(??_gpio_pin_direction_initialization+2)^0,w,c
  1185   00108E  16DF               	andwf	indf2,f,c
  1186                           
  1187                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 break;
  1188   001090  EF88  F008         	goto	l1294
  1189   001094                     l1288:
  1190                           
  1191                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:                 (*tris_registers[pin_config->port] |= (
      +                          1 << pin_config->pin));
  1192   001094  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1193   001096  6ED9               	movwf	fsr2l,c
  1194   001098  6ADA               	clrf	fsr2h,c
  1195   00109A  30DF               	rrcf	223,w,c
  1196   00109C  32E8               	rrcf	wreg,f,c
  1197   00109E  32E8               	rrcf	wreg,f,c
  1198   0010A0  0B07               	andlw	7
  1199   0010A2  6E25               	movwf	??_gpio_pin_direction_initialization^0,c
  1200   0010A4  0E01               	movlw	1
  1201   0010A6  6E26               	movwf	(??_gpio_pin_direction_initialization+1)^0,c
  1202   0010A8  2A25               	incf	??_gpio_pin_direction_initialization^0,f,c
  1203   0010AA  EF59  F008         	goto	u574
  1204   0010AE                     u575:
  1205   0010AE  90D8               	bcf	status,0,c
  1206   0010B0  3626               	rlcf	(??_gpio_pin_direction_initialization+1)^0,f,c
  1207   0010B2                     u574:
  1208   0010B2  2E25               	decfsz	??_gpio_pin_direction_initialization^0,f,c
  1209   0010B4  EF57  F008         	goto	u575
  1210   0010B8  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1211   0010BA  6ED9               	movwf	fsr2l,c
  1212   0010BC  6ADA               	clrf	fsr2h,c
  1213   0010BE  50DF               	movf	223,w,c
  1214   0010C0  0B07               	andlw	7
  1215   0010C2  0D02               	mullw	2
  1216   0010C4  50F3               	movf	243,w,c
  1217   0010C6  0F15               	addlw	low _tris_registers
  1218   0010C8  6ED9               	movwf	fsr2l,c
  1219   0010CA  6ADA               	clrf	fsr2h,c
  1220   0010CC  CFDE F027          	movff	postinc2,??_gpio_pin_direction_initialization+2
  1221   0010D0  CFDD F028          	movff	postdec2,??_gpio_pin_direction_initialization+3
  1222   0010D4  C027  FFD9         	movff	??_gpio_pin_direction_initialization+2,fsr2l
  1223   0010D8  C028  FFDA         	movff	??_gpio_pin_direction_initialization+3,fsr2h
  1224   0010DC  5026               	movf	(??_gpio_pin_direction_initialization+1)^0,w,c
  1225   0010DE  12DF               	iorwf	indf2,f,c
  1226                           
  1227                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 break;
  1228   0010E0  EF88  F008         	goto	l1294
  1229   0010E4                     l1292:
  1230   0010E4  5024               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  1231   0010E6  6ED9               	movwf	fsr2l,c
  1232   0010E8  6ADA               	clrf	fsr2h,c
  1233   0010EA  BCDF               	btfsc	indf2,6,c
  1234   0010EC  EF7A  F008         	goto	u581
  1235   0010F0  EF7D  F008         	goto	u580
  1236   0010F4                     u581:
  1237   0010F4  0E01               	movlw	1
  1238   0010F6  EF7E  F008         	goto	u586
  1239   0010FA                     u580:
  1240   0010FA  0E00               	movlw	0
  1241   0010FC                     u586:
  1242                           
  1243                           ; Switch size 1, requested type "simple"
  1244                           ; Number of cases is 2, Range of values is 0 to 1
  1245                           ; switch strategies available:
  1246                           ; Name         Instructions Cycles
  1247                           ; simple_byte            7     4 (average)
  1248                           ;	Chosen strategy is simple_byte
  1249   0010FC  0A00               	xorlw	0	; case 0
  1250   0010FE  B4D8               	btfsc	status,2,c
  1251   001100  EF1F  F008         	goto	l1286
  1252   001104  0A01               	xorlw	1	; case 1
  1253   001106  B4D8               	btfsc	status,2,c
  1254   001108  EF4A  F008         	goto	l1288
  1255   00110C  EF1B  F008         	goto	l1284
  1256   001110                     l1294:
  1257                           
  1258                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:     return ret;
  1259   001110  502A               	movf	gpio_pin_direction_initialization@ret^0,w,c
  1260   001112  0012               	return		;funcret
  1261   001114                     __end_of_gpio_pin_direction_initialization:
  1262                           	callstack 0
  1263                           
  1264                           	psect	smallconst
  1265   001000                     __psmallconst:
  1266                           	callstack 0
  1267   001000  00                 	db	0
  1268   001001  00                 	db	0	; dummy byte at the end
  1269   000000                     
  1270                           	psect	rparam
  1271   000000                     
  1272                           	psect	config
  1273                           
  1274                           ; Padding undefined space
  1275   300000                     	org	3145728
  1276   300000  FF                 	db	255
  1277                           
  1278                           ;Config register CONFIG1H @ 0x300001
  1279                           ;	Oscillator Selection bits
  1280                           ;	FOSC = HS, HS oscillator
  1281                           ;	Fail-Safe Clock Monitor Enable bit
  1282                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1283                           ;	Internal/External Oscillator Switchover bit
  1284                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1285   300001                     	org	3145729
  1286   300001  02                 	db	2
  1287                           
  1288                           ;Config register CONFIG2L @ 0x300002
  1289                           ;	Power-up Timer Enable bit
  1290                           ;	PWRTEN = OFF, PWRT disabled
  1291                           ;	Brown-out Reset Enable bits
  1292                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1293                           ;	Brown Out Reset Voltage bits
  1294                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1295   300002                     	org	3145730
  1296   300002  1F                 	db	31
  1297                           
  1298                           ;Config register CONFIG2H @ 0x300003
  1299                           ;	Watchdog Timer Enable bit
  1300                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1301                           ;	Watchdog Timer Postscale Select bits
  1302                           ;	WDTPS = 32768, 1:32768
  1303   300003                     	org	3145731
  1304   300003  1E                 	db	30
  1305                           
  1306                           ; Padding undefined space
  1307   300004                     	org	3145732
  1308   300004  FF                 	db	255
  1309                           
  1310                           ;Config register CONFIG3H @ 0x300005
  1311                           ;	CCP2 MUX bit
  1312                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1313                           ;	PORTB A/D Enable bit
  1314                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1315                           ;	Low-Power Timer1 Oscillator Enable bit
  1316                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1317                           ;	HFINTOSC Fast Start-up
  1318                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  1319                           ;	MCLR Pin Enable bit
  1320                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1321   300005                     	org	3145733
  1322   300005  81                 	db	129
  1323                           
  1324                           ;Config register CONFIG4L @ 0x300006
  1325                           ;	Stack Full/Underflow Reset Enable bit
  1326                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1327                           ;	Single-Supply ICSP Enable bit
  1328                           ;	LVP = OFF, Single-Supply ICSP disabled
  1329                           ;	Extended Instruction Set Enable bit
  1330                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1331                           ;	Background Debugger Enable bit
  1332                           ;	DEBUG = 0x1, unprogrammed default
  1333   300006                     	org	3145734
  1334   300006  81                 	db	129
  1335                           
  1336                           ; Padding undefined space
  1337   300007                     	org	3145735
  1338   300007  FF                 	db	255
  1339                           
  1340                           ;Config register CONFIG5L @ 0x300008
  1341                           ;	Code Protection Block 0
  1342                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1343                           ;	Code Protection Block 1
  1344                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1345                           ;	Code Protection Block 2
  1346                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1347                           ;	Code Protection Block 3
  1348                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1349   300008                     	org	3145736
  1350   300008  0F                 	db	15
  1351                           
  1352                           ;Config register CONFIG5H @ 0x300009
  1353                           ;	Boot Block Code Protection bit
  1354                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1355                           ;	Data EEPROM Code Protection bit
  1356                           ;	CPD = OFF, Data EEPROM not code-protected
  1357   300009                     	org	3145737
  1358   300009  C0                 	db	192
  1359                           
  1360                           ;Config register CONFIG6L @ 0x30000A
  1361                           ;	Write Protection Block 0
  1362                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1363                           ;	Write Protection Block 1
  1364                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1365                           ;	Write Protection Block 2
  1366                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1367                           ;	Write Protection Block 3
  1368                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1369   30000A                     	org	3145738
  1370   30000A  0F                 	db	15
  1371                           
  1372                           ;Config register CONFIG6H @ 0x30000B
  1373                           ;	Configuration Register Write Protection bit
  1374                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1375                           ;	Boot Block Write Protection bit
  1376                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1377                           ;	Data EEPROM Write Protection bit
  1378                           ;	WRTD = OFF, Data EEPROM not write-protected
  1379   30000B                     	org	3145739
  1380   30000B  E0                 	db	224
  1381                           
  1382                           ;Config register CONFIG7L @ 0x30000C
  1383                           ;	Table Read Protection Block 0
  1384                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1385                           ;	Table Read Protection Block 1
  1386                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1387                           ;	Table Read Protection Block 2
  1388                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1389                           ;	Table Read Protection Block 3
  1390                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1391   30000C                     	org	3145740
  1392   30000C  0F                 	db	15
  1393                           
  1394                           ;Config register CONFIG7H @ 0x30000D
  1395                           ;	Boot Block Table Read Protection bit
  1396                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1397   30000D                     	org	3145741
  1398   30000D  40                 	db	64
  1399                           tosu	equ	0xFFF
  1400                           tosh	equ	0xFFE
  1401                           tosl	equ	0xFFD
  1402                           stkptr	equ	0xFFC
  1403                           pclatu	equ	0xFFB
  1404                           pclath	equ	0xFFA
  1405                           pcl	equ	0xFF9
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           tblptrl	equ	0xFF6
  1409                           tablat	equ	0xFF5
  1410                           prodh	equ	0xFF4
  1411                           prodl	equ	0xFF3
  1412                           indf0	equ	0xFEF
  1413                           postinc0	equ	0xFEE
  1414                           postdec0	equ	0xFED
  1415                           preinc0	equ	0xFEC
  1416                           plusw0	equ	0xFEB
  1417                           fsr0h	equ	0xFEA
  1418                           fsr0l	equ	0xFE9
  1419                           wreg	equ	0xFE8
  1420                           indf1	equ	0xFE7
  1421                           postinc1	equ	0xFE6
  1422                           postdec1	equ	0xFE5
  1423                           preinc1	equ	0xFE4
  1424                           plusw1	equ	0xFE3
  1425                           fsr1h	equ	0xFE2
  1426                           fsr1l	equ	0xFE1
  1427                           bsr	equ	0xFE0
  1428                           indf2	equ	0xFDF
  1429                           postinc2	equ	0xFDE
  1430                           postdec2	equ	0xFDD
  1431                           preinc2	equ	0xFDC
  1432                           plusw2	equ	0xFDB
  1433                           fsr2h	equ	0xFDA
  1434                           fsr2l	equ	0xFD9
  1435                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        35
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    dc_motor_initialize@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_left@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_right@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_stop@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    gpio_pin_direction_initialization@pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor(COMRAM[2]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialization@pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor(COMRAM[2]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor(COMRAM[2]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlll[1]), PORTB(BITBIGSFRllh[1]), PORTC(BITBIGSFRllh[1]), PORTD(BITBIGSFRllh[1]), 
		 -> PORTE(BITBIGSFRllh[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _application_initialize->_dc_motor_initialize
    _dc_motor_initialize->_gpio_pin_initialization
    _gpio_pin_initialization->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9261
                                             11 COMRAM     2     2      0
             _application_initialize
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    2245
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  2     1      1    2093
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   2     1      1    2093
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0    2830
                _dc_motor_initialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  2     1      1    2830
                                             10 COMRAM     1     0      1
            _gpio_pin_initialization
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialization                              3     2      1    2604
                                              8 COMRAM     2     1      1
  _gpio_pin_direction_initialization
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    1851
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialization                    7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _dc_motor_initialize
       _gpio_pin_initialization
         _gpio_pin_direction_initialization
         _gpio_pin_write_logic
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      37       1       57.9%
BITBIGSFRlll        20      0       0      39        0.0%
BITBIGSFRllh         4      0       0      38        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      40        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 23 00:21:45 2024

                                         l32 143E                                           l42 13E2  
                                         l37 13AA                                           l47 1372  
                                        l154 1112                                          l250 1474  
                                        l244 1228                                          l173 1222  
                                        l194 133A                                          u600 1148  
                                        u601 1144                                          u540 1016  
                                        u541 1012                                          u550 1036  
                                        u614 116E                                          u630 12F8  
                                        u551 1032                                          u615 116A  
                                        u631 12F4                                          u624 11C4  
                                        u640 1318                                          u625 11C0  
                                        u641 1314                                          u650 142A  
                                        u651 1426                                          u580 10FA  
                                        u564 105C                                          u660 1388  
                                        u581 10F4                                          u565 1058  
                                        u661 1384                                          u574 10B2  
                                        u590 1128                                          u670 13C0  
                                        u575 10AE                                          u591 1124  
                                        u671 13BC                                          u680 1350  
                                        u681 134C                                          u586 10FC  
                                        u827 1246                                          u837 1274  
                                        u847 12A2                                          u857 12D0  
                                        _ret 001F                          led_initialize@F3143 0037  
                                        wreg 0FE8                        relay_initialize@F3137 0033  
                                       l1300 1128                                         l1310 11F6  
                                       l1302 1148                                         l1304 1150  
                                       l1312 1220                                         l1320 12E8  
                                       l1306 11A6                                         l1322 12F8  
                                       l1330 141A                                         l1324 1318  
                                       l1332 142A                                         l1340 1388  
                                       l1326 131C                                         l1334 142E  
                                       l1350 13C0                                         l1342 1390  
                                       l1280 1002                                         l1352 13C8  
                                       l1344 13A8                                         l1360 1350  
                                       l1282 1016                                         l1354 13E0  
                                       l1338 1374                                         l1362 1358  
                                       l1292 10E4                                         l1284 1036  
                                       l1348 13AC                                         l1364 1370  
                                       l1286 103E                                         l1294 1110  
                                       l1358 133C                                         l1288 1094  
                                       l1368 1464                                         l1480 1256  
                                       l1298 1114                                         l1490 12BC  
                                       l1482 1260                                         l1492 12C6  
                                       l1484 126A                                         l1476 1224  
                                       l1486 1298                                         l1478 123C  
                                       l1488 12B2                                         l1498 120A  
                                       _LATA 0F89                                         _LATB 0F8A  
                                       _LATC 0F8B                                         _LATD 0F8C  
                                       _LATE 0F8D                                         _main 1224  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                                       prodl 0FF3                                         start 0000  
                               ___param_bank 0000                         _gpio_pin_write_logic 1114  
                                      ?_main 0024                     ??_application_initialize 002F  
                        relay_turn_off@F3147 0031                                        _PORTA 0F80  
                                      _PORTB 0F81                                        _PORTC 0F82  
                                      _PORTD 0F83                                        _PORTE 0F84  
                                      _TRISA 0F92                                        _TRISB 0F93  
                                      _TRISC 0F94                                        _TRISD 0F95  
                                      _TRISE 0F96                                        tablat 0FF5  
                                      status 0FD8                              __initialization 13E4  
                               __end_of_main 12E8                        ?_gpio_pin_write_logic 0024  
                              _lat_registers 000B                  __end_of_dc_motor_initialize 1440  
                                     ??_main 002F                                __activetblptr 0002  
                           led_turn_on@F3148 0036                  __end_of_dc_motor_move_right 13AC  
                                     clear_0 140A                                       isa$std 0001  
                               __pdataCOMRAM 0001                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                                   __accesstop 0060  
                    __end_of__initialization 1410                                ___rparam_used 0001  
                     ??_gpio_pin_write_logic 0026                               __pcstackCOMRAM 0024  
                                 _dc_motor_1 0022                                   _dc_motor_2 0020  
                     _application_initialize 1464                            led_turn_off@F3153 0035  
                       led_turn_toggle@F3158 0034                               _tris_registers 0015  
                                    __Hparam 0000                                      __Lparam 0000  
                      dc_motor_move_left@ret 002D                                 __psmallconst 1000  
                                    __pcinit 13E4                                      __ramtop 1000  
                                    __ptext0 1224                                      __ptext1 133C  
                                    __ptext2 1374                                      __ptext3 13AC  
                                    __ptext4 1464                                      __ptext5 141A  
                                    __ptext6 12E8                                      __ptext7 1114  
                                    __ptext8 1002                         end_of_initialization 1410  
                              __Lmediumconst 0000            gpio_pin_initialization@pin_config 002C  
                              _dc_motor_stop 133C                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc2 0FDE                  dc_motor_move_right@dc_motor 002C  
                    _gpio_pin_initialization 12E8                               ?_dc_motor_stop 002C  
                         relay_turn_on@F3142 0032                                __pidataCOMRAM 1440  
                        start_initialization 13E4                      ?_application_initialize 0024  
       gpio_pin_direction_initialization@ret 002A                   __end_of_dc_motor_move_left 13E4  
                  ??_gpio_pin_initialization 002D                             dc_motor_stop@ret 002D  
                                __pbssCOMRAM 0031               __end_of_application_initialize 1476  
                 dc_motor_move_left@dc_motor 002C               gpio_pin_write_logic@pin_config 0024  
                            ??_dc_motor_stop 002D                    gpio_pin_write_logic@logic 0025  
                                __smallconst 1000              __end_of_gpio_pin_initialization 133C  
                        _dc_motor_initialize 141A    __end_of_gpio_pin_direction_initialization 1114  
        ??_gpio_pin_direction_initialization 0025           ?_gpio_pin_direction_initialization 0024  
          _gpio_pin_direction_initialization 1002                         ?_dc_motor_initialize 002E  
                    gpio_pin_write_logic@ret 002B                                    copy_data0 13F8  
                        _dc_motor_move_right 1374                                     __Hrparam 0000  
                                   __Lrparam 0000                        dc_motor_stop@dc_motor 002C  
                       ?_dc_motor_move_right 002C  gpio_pin_direction_initialization@pin_config 0024  
                      ??_dc_motor_initialize 002F                       dc_motor_move_right@ret 002D  
                                   isa$xinst 0000                  dc_motor_initialize@dc_motor 002E  
                      ??_dc_motor_move_right 002D                           _dc_motor_move_left 13AC  
               __end_of_gpio_pin_write_logic 1224                          ?_dc_motor_move_left 002C  
                       ??_dc_motor_move_left 002D                               _port_registers 0001  
                      __end_of_dc_motor_stop 1374                     ?_gpio_pin_initialization 002C  
