

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Sep 01 17:44:11 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 12/10/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F46K20 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     
    71                           	psect	idataCOMRAM
    72   0019E2                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _port_registers
    76   0019E2  80                 	db	128
    77   0019E3  0F                 	db	15
    78   0019E4  81                 	db	129
    79   0019E5  0F                 	db	15
    80   0019E6  82                 	db	130
    81   0019E7  0F                 	db	15
    82   0019E8  83                 	db	131
    83   0019E9  0F                 	db	15
    84   0019EA  84                 	db	132
    85   0019EB  0F                 	db	15
    86                           
    87                           ;initializer for _lat_registers
    88   0019EC  89                 	db	137
    89   0019ED  0F                 	db	15
    90   0019EE  8A                 	db	138
    91   0019EF  0F                 	db	15
    92   0019F0  8B                 	db	139
    93   0019F1  0F                 	db	15
    94   0019F2  8C                 	db	140
    95   0019F3  0F                 	db	15
    96   0019F4  8D                 	db	141
    97   0019F5  0F                 	db	15
    98                           
    99                           ;initializer for _tris_registers
   100   0019F6  92                 	db	146
   101   0019F7  0F                 	db	15
   102   0019F8  93                 	db	147
   103   0019F9  0F                 	db	15
   104   0019FA  94                 	db	148
   105   0019FB  0F                 	db	15
   106   0019FC  95                 	db	149
   107   0019FD  0F                 	db	15
   108   0019FE  96                 	db	150
   109   0019FF  0F                 	db	15
   110                           
   111                           ;initializer for _lcd_counter
   112   001A00  F4                 	db	244
   113                           
   114                           ;initializer for _lcd_2
   115   001A01  32                 	db	50
   116   001A02  3A                 	db	58
   117   001A03  03                 	db	3
   118   001A04  0B                 	db	11
   119   001A05  13                 	db	19
   120   001A06  1B                 	db	27
   121   001A07  23                 	db	35
   122   001A08  2B                 	db	43
   123   001A09  33                 	db	51
   124   001A0A  3B                 	db	59
   125                           
   126                           ;initializer for _lcd_1
   127   001A0B  02                 	db	2
   128   001A0C  0A                 	db	10
   129   001A0D  12                 	db	18
   130   001A0E  1A                 	db	26
   131   001A0F  22                 	db	34
   132   001A10  2A                 	db	42
   133                           
   134                           	psect	smallconst
   135   001000                     __psmallconst:
   136                           	callstack 0
   137   001000  00                 	db	0
   138   001001                     _btn_values:
   139                           	callstack 0
   140   001001  37                 	db	55
   141   001002  38                 	db	56
   142   001003  39                 	db	57
   143   001004  2F                 	db	47
   144   001005  34                 	db	52
   145   001006  35                 	db	53
   146   001007  36                 	db	54
   147   001008  2A                 	db	42
   148   001009  31                 	db	49
   149   00100A  32                 	db	50
   150   00100B  33                 	db	51
   151   00100C  2D                 	db	45
   152   00100D  23                 	db	35
   153   00100E  30                 	db	48
   154   00100F  3D                 	db	61
   155   001010  2B                 	db	43
   156   001011                     __end_of_btn_values:
   157                           	callstack 0
   158   001011                     STR_1:
   159   001011  45                 	db	69	;'E'
   160   001012  6D                 	db	109	;'m'
   161   001013  62                 	db	98	;'b'
   162   001014  65                 	db	101	;'e'
   163   001015  64                 	db	100	;'d'
   164   001016  64                 	db	100	;'d'
   165   001017  65                 	db	101	;'e'
   166   001018  64                 	db	100	;'d'
   167   001019  20                 	db	32
   168   00101A  44                 	db	68	;'D'
   169   00101B  69                 	db	105	;'i'
   170   00101C  70                 	db	112	;'p'
   171   00101D  6C                 	db	108	;'l'
   172   00101E  6F                 	db	111	;'o'
   173   00101F  6D                 	db	109	;'m'
   174   001020  61                 	db	97	;'a'
   175   001021  00                 	db	0
   176   001022                     STR_4:
   177   001022  20                 	db	32
   178   001023  20                 	db	32
   179   001024  20                 	db	32
   180   001025  20                 	db	32
   181   001026  20                 	db	32
   182   001027  20                 	db	32
   183   001028  20                 	db	32
   184   001029  20                 	db	32
   185   00102A  20                 	db	32
   186   00102B  20                 	db	32
   187   00102C  20                 	db	32
   188   00102D  20                 	db	32
   189   00102E  00                 	db	0
   190   00102F                     STR_3:
   191   00102F  48                 	db	72	;'H'
   192   001030  65                 	db	101	;'e'
   193   001031  6C                 	db	108	;'l'
   194   001032  6C                 	db	108	;'l'
   195   001033  6F                 	db	111	;'o'
   196   001034  20                 	db	32
   197   001035  41                 	db	65	;'A'
   198   001036  6C                 	db	108	;'l'
   199   001037  6C                 	db	108	;'l'
   200   001038  00                 	db	0
   201   001039                     STR_2:
   202   001039  4C                 	db	76	;'L'
   203   00103A  6F                 	db	111	;'o'
   204   00103B  61                 	db	97	;'a'
   205   00103C  64                 	db	100	;'d'
   206   00103D  69                 	db	105	;'i'
   207   00103E  6E                 	db	110	;'n'
   208   00103F  67                 	db	103	;'g'
   209   001040  00                 	db	0
   210   001041                     STR_5:
   211   001041  25                 	db	37
   212   001042  69                 	db	105	;'i'
   213   001043  00                 	db	0
   214   001044  00                 	db	0	; dummy byte at the end
   215   000000                     
   216                           	psect	nvCOMRAM
   217   000056                     __pnvCOMRAM:
   218                           	callstack 0
   219   000056                     _lcd1_counter:
   220                           	callstack 0
   221   000056                     	ds	1
   222   000000                     _PORTA	set	3968
   223   000000                     _LATA	set	3977
   224   000000                     _TRISA	set	3986
   225   000000                     _TRISE	set	3990
   226   000000                     _TRISD	set	3989
   227   000000                     _TRISC	set	3988
   228   000000                     _TRISB	set	3987
   229   000000                     _LATE	set	3981
   230   000000                     _LATD	set	3980
   231   000000                     _LATC	set	3979
   232   000000                     _LATB	set	3978
   233   000000                     _PORTE	set	3972
   234   000000                     _PORTD	set	3971
   235   000000                     _PORTC	set	3970
   236   000000                     _PORTB	set	3969
   237                           
   238                           ; #config settings
   239                           
   240                           	psect	cinit
   241   0019AC                     __pcinit:
   242                           	callstack 0
   243   0019AC                     start_initialization:
   244                           	callstack 0
   245   0019AC                     __initialization:
   246                           	callstack 0
   247                           
   248                           ; Initialize objects allocated to COMRAM (47 bytes)
   249                           ; load TBLPTR registers with __pidataCOMRAM
   250   0019AC  0EE2               	movlw	low __pidataCOMRAM
   251   0019AE  6EF6               	movwf	tblptrl,c
   252   0019B0  0E19               	movlw	high __pidataCOMRAM
   253   0019B2  6EF7               	movwf	tblptrh,c
   254   0019B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   255   0019B6  6EF8               	movwf	tblptru,c
   256   0019B8  EE00  F001         	lfsr	0,__pdataCOMRAM
   257   0019BC  EE10 F02F          	lfsr	1,47
   258   0019C0                     copy_data0:
   259   0019C0  0009               	tblrd		*+
   260   0019C2  CFF5 FFEE          	movff	tablat,postinc0
   261   0019C6  50E5               	movf	postdec1,w,c
   262   0019C8  50E1               	movf	fsr1l,w,c
   263   0019CA  E1FA               	bnz	copy_data0
   264                           
   265                           ; Clear objects allocated to COMRAM (11 bytes)
   266   0019CC  EE00  F04B         	lfsr	0,__pbssCOMRAM
   267   0019D0  0E0B               	movlw	11
   268   0019D2                     clear_0:
   269   0019D2  6AEE               	clrf	postinc0,c
   270   0019D4  06E8               	decf	wreg,f,c
   271   0019D6  E1FD               	bnz	clear_0
   272   0019D8                     end_of_initialization:
   273                           	callstack 0
   274   0019D8                     __end_of__initialization:
   275                           	callstack 0
   276   0019D8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   277   0019DA  6EF8               	movwf	tblptru,c
   278   0019DC  0100               	movlb	0
   279   0019DE  EF2C  F00A         	goto	_main	;jump to C main() function
   280                           
   281                           	psect	bssCOMRAM
   282   00004B                     __pbssCOMRAM:
   283                           	callstack 0
   284   00004B                     _lcd_counter_txt:
   285                           	callstack 0
   286   00004B                     	ds	4
   287   00004F                     relay_turn_off@F3314:
   288                           	callstack 0
   289   00004F                     	ds	1
   290   000050                     relay_turn_on@F3309:
   291                           	callstack 0
   292   000050                     	ds	1
   293   000051                     relay_initialize@F3304:
   294                           	callstack 0
   295   000051                     	ds	1
   296   000052                     led_turn_toggle@F3325:
   297                           	callstack 0
   298   000052                     	ds	1
   299   000053                     led_turn_off@F3320:
   300                           	callstack 0
   301   000053                     	ds	1
   302   000054                     led_turn_on@F3315:
   303                           	callstack 0
   304   000054                     	ds	1
   305   000055                     led_initialize@F3310:
   306                           	callstack 0
   307   000055                     	ds	1
   308                           
   309                           	psect	dataCOMRAM
   310   000001                     __pdataCOMRAM:
   311                           	callstack 0
   312   000001                     _port_registers:
   313                           	callstack 0
   314   000001                     	ds	10
   315   00000B                     _lat_registers:
   316                           	callstack 0
   317   00000B                     	ds	10
   318   000015                     _tris_registers:
   319                           	callstack 0
   320   000015                     	ds	10
   321   00001F                     _lcd_counter:
   322                           	callstack 0
   323   00001F                     	ds	1
   324   000020                     _lcd_2:
   325                           	callstack 0
   326   000020                     	ds	10
   327   00002A                     _lcd_1:
   328                           	callstack 0
   329   00002A                     	ds	6
   330                           
   331                           	psect	cstackCOMRAM
   332   000030                     __pcstackCOMRAM:
   333                           	callstack 0
   334   000030                     gpio_pin_direction_initialization@pin_config:
   335                           	callstack 0
   336   000030                     gpio_pin_write_logic@pin_config:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x0
   340   000030                     	ds	1
   341   000031                     ??_gpio_pin_direction_initialization:
   342   000031                     gpio_pin_write_logic@logic:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x1
   346   000031                     	ds	1
   347   000032                     ??_gpio_pin_write_logic:
   348                           
   349                           ; 1 bytes @ 0x2
   350   000032                     	ds	4
   351   000036                     gpio_pin_direction_initialization@ret:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x6
   355   000036                     	ds	1
   356   000037                     gpio_pin_write_logic@ret:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x7
   360   000037                     	ds	1
   361   000038                     gpio_pin_initialization@pin_config:
   362                           	callstack 0
   363   000038                     lcd_send_4bits@lcd:
   364                           	callstack 0
   365   000038                     lcd_4bits_send_enable_signal@lcd:
   366                           	callstack 0
   367   000038                     lcd_8bits_send_enable_signal@lcd:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x8
   371   000038                     	ds	1
   372   000039                     ??_gpio_pin_initialization:
   373   000039                     lcd_send_4bits@_command:
   374                           	callstack 0
   375   000039                     lcd_4bits_send_enable_signal@ret:
   376                           	callstack 0
   377   000039                     lcd_8bits_send_enable_signal@ret:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x9
   381   000039                     	ds	1
   382   00003A                     gpio_pin_initialization@ret:
   383                           	callstack 0
   384   00003A                     lcd_8bit_send_command@lcd:
   385                           	callstack 0
   386   00003A                     lcd_8bit_send_char_data@lcd:
   387                           	callstack 0
   388   00003A                     lcd_send_4bits@ret:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0xA
   392   00003A                     	ds	1
   393   00003B                     lcd_4bit_send_command@lcd:
   394                           	callstack 0
   395   00003B                     lcd_4bit_send_char_data@lcd:
   396                           	callstack 0
   397   00003B                     lcd_8bit_send_command@command:
   398                           	callstack 0
   399   00003B                     lcd_8bit_send_char_data@data:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0xB
   403   00003B                     	ds	1
   404   00003C                     ??_lcd_8bit_send_command:
   405   00003C                     ??_lcd_8bit_send_char_data:
   406   00003C                     lcd_4bit_send_command@command:
   407                           	callstack 0
   408   00003C                     lcd_4bit_send_char_data@data:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0xC
   412   00003C                     	ds	1
   413   00003D                     lcd_4bit_send_command@ret:
   414                           	callstack 0
   415   00003D                     lcd_4bit_send_char_data@ret:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0xD
   419   00003D                     	ds	1
   420   00003E                     lcd_4bit_initialize@lcd:
   421                           	callstack 0
   422   00003E                     lcd_8bit_send_command@ret:
   423                           	callstack 0
   424   00003E                     lcd_8bit_send_char_data@ret:
   425                           	callstack 0
   426   00003E                     lcd_4bit_set_cursor@lcd:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0xE
   430   00003E                     	ds	1
   431   00003F                     ??_lcd_4bit_initialize:
   432   00003F                     lcd_8bit_send_command@l_pin_counter:
   433                           	callstack 0
   434   00003F                     lcd_8bit_send_char_data@l_pin_counter:
   435                           	callstack 0
   436   00003F                     lcd_4bit_set_cursor@row:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0xF
   440   00003F                     	ds	1
   441   000040                     lcd_8bit_initialize@lcd:
   442                           	callstack 0
   443   000040                     lcd_8bit_set_cursor@lcd:
   444                           	callstack 0
   445   000040                     lcd_4bit_set_cursor@col:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x10
   449   000040                     	ds	1
   450   000041                     ??_lcd_8bit_initialize:
   451   000041                     lcd_4bit_initialize@l_data_pins_counter:
   452                           	callstack 0
   453   000041                     lcd_8bit_set_cursor@row:
   454                           	callstack 0
   455   000041                     lcd_4bit_set_cursor@ret:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x11
   459   000041                     	ds	1
   460   000042                     lcd_4bit_initialize@ret:
   461                           	callstack 0
   462   000042                     lcd_4bit_send_char_data_pos@lcd:
   463                           	callstack 0
   464   000042                     lcd_4bit_send_string_pos@lcd:
   465                           	callstack 0
   466   000042                     lcd_8bit_set_cursor@col:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x12
   470   000042                     	ds	1
   471   000043                     lcd_4bit_send_char_data_pos@row:
   472                           	callstack 0
   473   000043                     lcd_4bit_send_string_pos@row:
   474                           	callstack 0
   475   000043                     lcd_8bit_initialize@l_data_pins_counter:
   476                           	callstack 0
   477   000043                     lcd_8bit_set_cursor@ret:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x13
   481   000043                     	ds	1
   482   000044                     lcd_4bit_send_char_data_pos@col:
   483                           	callstack 0
   484   000044                     lcd_4bit_send_string_pos@col:
   485                           	callstack 0
   486   000044                     lcd_8bit_initialize@ret:
   487                           	callstack 0
   488   000044                     lcd_8bit_send_string_pos@lcd:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x14
   492   000044                     	ds	1
   493   000045                     lcd_4bit_send_char_data_pos@data:
   494                           	callstack 0
   495   000045                     lcd_4bit_send_string_pos@str:
   496                           	callstack 0
   497   000045                     lcd_8bit_send_string_pos@row:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x15
   501   000045                     	ds	1
   502   000046                     lcd_4bit_send_char_data_pos@ret:
   503                           	callstack 0
   504   000046                     lcd_4bit_send_string_pos@ret:
   505                           	callstack 0
   506   000046                     lcd_8bit_send_string_pos@col:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x16
   510   000046                     	ds	1
   511   000047                     lcd_8bit_send_string_pos@str:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x17
   515   000047                     	ds	1
   516   000048                     lcd_8bit_send_string_pos@ret:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x18
   520   000048                     	ds	1
   521   000049                     ??_main:
   522                           
   523                           ; 1 bytes @ 0x19
   524   000049                     	ds	2
   525                           
   526 ;;
   527 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   528 ;;
   529 ;; *************** function _main *****************
   530 ;; Defined at:
   531 ;;		line 14 in file "application.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;  ret             1    0        unsigned char 
   536 ;; Return value:  Size  Location     Type
   537 ;;                  2  305[None  ] int 
   538 ;; Registers used:
   539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;Total ram usage:        2 bytes
   550 ;; Hardware stack levels required when called: 6
   551 ;; This function calls:
   552 ;;		_application_initialize
   553 ;;		_lcd_4bit_send_char_data_pos
   554 ;;		_lcd_4bit_send_string_pos
   555 ;;		_lcd_8bit_send_string_pos
   556 ;; This function is called by:
   557 ;;		Startup code after reset
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text0
   562   001458                     __ptext0:
   563                           	callstack 0
   564   001458                     _main:
   565                           	callstack 25
   566   001458                     
   567                           ;application.c: 17:     application_initialize();
   568   001458  EC12  F00D         	call	_application_initialize	;wreg free
   569   00145C  0E2A               	movlw	low _lcd_1
   570   00145E  6E42               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   571   001460  0E02               	movlw	2
   572   001462  6E43               	movwf	lcd_4bit_send_string_pos@row^0,c
   573   001464  0E01               	movlw	1
   574   001466  6E44               	movwf	lcd_4bit_send_string_pos@col^0,c
   575   001468  0E11               	movlw	low STR_1
   576   00146A  6E45               	movwf	lcd_4bit_send_string_pos@str^0,c
   577   00146C  EC5B  F00B         	call	_lcd_4bit_send_string_pos	;wreg free
   578   001470  0E20               	movlw	low _lcd_2
   579   001472  6E44               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   580   001474  0E01               	movlw	1
   581   001476  6E45               	movwf	lcd_8bit_send_string_pos@row^0,c
   582   001478  0E01               	movlw	1
   583   00147A  6E46               	movwf	lcd_8bit_send_string_pos@col^0,c
   584   00147C  0E39               	movlw	low STR_2
   585   00147E  6E47               	movwf	lcd_8bit_send_string_pos@str^0,c
   586   001480  EC27  F00B         	call	_lcd_8bit_send_string_pos	;wreg free
   587   001484                     l2627:
   588                           
   589                           ;application.c: 21:         for (lcd1_counter = 0; lcd1_counter <= 7; ++lcd1_counter) {
   590   001484  0E00               	movlw	0
   591   001486  6E56               	movwf	_lcd1_counter^0,c
   592   001488                     l2633:
   593   001488  0E2A               	movlw	low _lcd_1
   594   00148A  6E42               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   595   00148C  0E01               	movlw	1
   596   00148E  6E43               	movwf	lcd_4bit_send_string_pos@row^0,c
   597   001490  C056  F044         	movff	_lcd1_counter,lcd_4bit_send_string_pos@col
   598   001494  0E2F               	movlw	low STR_3
   599   001496  6E45               	movwf	lcd_4bit_send_string_pos@str^0,c
   600   001498  EC5B  F00B         	call	_lcd_4bit_send_string_pos	;wreg free
   601   00149C                     
   602                           ;application.c: 24:             _delay((unsigned long)((250)*(8000000UL/4000.0)));
   603   00149C  0E03               	movlw	3
   604   00149E  6E4A               	movwf	(??_main+1)^0,c
   605   0014A0  0E8A               	movlw	138
   606   0014A2  6E49               	movwf	??_main^0,c
   607   0014A4  0E56               	movlw	86
   608   0014A6                     u1737:
   609   0014A6  2EE8               	decfsz	wreg,f,c
   610   0014A8  D7FE               	bra	u1737
   611   0014AA  2E49               	decfsz	??_main^0,f,c
   612   0014AC  D7FC               	bra	u1737
   613   0014AE  2E4A               	decfsz	(??_main+1)^0,f,c
   614   0014B0  D7FA               	bra	u1737
   615   0014B2  0E2A               	movlw	low _lcd_1
   616   0014B4  6E42               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
   617   0014B6  0E01               	movlw	1
   618   0014B8  6E43               	movwf	lcd_4bit_send_char_data_pos@row^0,c
   619   0014BA  C056  F044         	movff	_lcd1_counter,lcd_4bit_send_char_data_pos@col
   620   0014BE  0E20               	movlw	32
   621   0014C0  6E45               	movwf	lcd_4bit_send_char_data_pos@data^0,c
   622   0014C2  ECB8  F00C         	call	_lcd_4bit_send_char_data_pos	;wreg free
   623   0014C6                     
   624                           ;application.c: 26:         }
   625   0014C6  2A56               	incf	_lcd1_counter^0,f,c
   626   0014C8  0E07               	movlw	7
   627   0014CA  6456               	cpfsgt	_lcd1_counter^0,c
   628   0014CC  EF6A  F00A         	goto	u1641
   629   0014D0  EF6C  F00A         	goto	u1640
   630   0014D4                     u1641:
   631   0014D4  EF44  F00A         	goto	l2633
   632   0014D8                     u1640:
   633   0014D8  0E2A               	movlw	low _lcd_1
   634   0014DA  6E42               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   635   0014DC  0E01               	movlw	1
   636   0014DE  6E43               	movwf	lcd_4bit_send_string_pos@row^0,c
   637   0014E0  0E05               	movlw	5
   638   0014E2  6E44               	movwf	lcd_4bit_send_string_pos@col^0,c
   639   0014E4  0E22               	movlw	low STR_4
   640   0014E6  6E45               	movwf	lcd_4bit_send_string_pos@str^0,c
   641   0014E8  EC5B  F00B         	call	_lcd_4bit_send_string_pos	;wreg free
   642   0014EC  EF42  F00A         	goto	l2627
   643   0014F0  EF00  F000         	goto	start
   644   0014F4                     __end_of_main:
   645                           	callstack 0
   646                           
   647 ;; *************** function _lcd_8bit_send_string_pos *****************
   648 ;; Defined at:
   649 ;;		line 305 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  lcd             1   20[COMRAM] PTR const struct .
   652 ;;		 -> lcd_2(10), 
   653 ;;  row             1   21[COMRAM] unsigned char 
   654 ;;  col             1   22[COMRAM] unsigned char 
   655 ;;  str             1   23[COMRAM] PTR unsigned char 
   656 ;;		 -> STR_2(8), 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  ret             1   24[COMRAM] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      unsigned char 
   661 ;; Registers used:
   662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;Total ram usage:        5 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; Hardware stack levels required when called: 4
   675 ;; This function calls:
   676 ;;		_lcd_8bit_send_char_data
   677 ;;		_lcd_8bit_set_cursor
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text1
   684   00164E                     __ptext1:
   685                           	callstack 0
   686   00164E                     _lcd_8bit_send_string_pos:
   687                           	callstack 26
   688   00164E                     
   689                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 307:     if (((void*)0) == lcd) {
   690   00164E  5044               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
   691   001650  A4D8               	btfss	status,2,c
   692   001652  EF2D  F00B         	goto	u1311
   693   001656  EF2F  F00B         	goto	u1310
   694   00165A                     u1311:
   695   00165A  EF33  F00B         	goto	l2339
   696   00165E                     u1310:
   697   00165E                     
   698                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 308:         ret = (STD_ReturnType)0x00;
   699   00165E  0E00               	movlw	0
   700   001660  6E48               	movwf	lcd_8bit_send_string_pos@ret^0,c
   701                           
   702                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 309:     } else {
   703   001662  EF59  F00B         	goto	l2347
   704   001666                     l2339:
   705                           
   706                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 310:         ret = lcd_8bit_set_cursor(lcd, row, col);
   707   001666  C044  F040         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
   708   00166A  C045  F041         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
   709   00166E  C046  F042         	movff	lcd_8bit_send_string_pos@col,lcd_8bit_set_cursor@col
   710   001672  EC8F  F00B         	call	_lcd_8bit_set_cursor	;wreg free
   711   001676  6E48               	movwf	lcd_8bit_send_string_pos@ret^0,c
   712                           
   713                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 311:         while (*str) {
   714   001678  EF4B  F00B         	goto	l2345
   715   00167C                     l2341:
   716                           
   717                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 312:             ret = lcd_8bit_send_char_data(lcd, *s
      +                          tr++);
   718   00167C  C044  F03A         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_char_data@lcd
   719   001680  C047  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   720   001684                     	if	1	;There is more than 1 active tblptr byte
   721   001684  0E10               	movlw	high __smallconst
   722   001686  6EF7               	movwf	tblptrh,c
   723   001688                     	endif
   724   001688                     	if	0	;tblptru may be non-zero
   725   001688                     	endif
   726   001688                     	if	0	;tblptru may be non-zero
   727   001688                     	endif
   728   001688  0008               	tblrd		*
   729   00168A  CFF5 F03B          	movff	tablat,lcd_8bit_send_char_data@data
   730   00168E  EC7A  F00A         	call	_lcd_8bit_send_char_data	;wreg free
   731   001692  6E48               	movwf	lcd_8bit_send_string_pos@ret^0,c
   732   001694  2A47               	incf	lcd_8bit_send_string_pos@str^0,f,c
   733   001696                     l2345:
   734                           
   735                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 311:         while (*str) {
   736   001696  C047  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   737   00169A                     	if	1	;There is more than 1 active tblptr byte
   738   00169A  0E10               	movlw	high __smallconst
   739   00169C  6EF7               	movwf	tblptrh,c
   740   00169E                     	endif
   741   00169E                     	if	0	;tblptru may be non-zero
   742   00169E                     	endif
   743   00169E                     	if	0	;tblptru may be non-zero
   744   00169E                     	endif
   745   00169E  0008               	tblrd		*
   746   0016A0  50F5               	movf	tablat,w,c
   747   0016A2  0900               	iorlw	0
   748   0016A4  A4D8               	btfss	status,2,c
   749   0016A6  EF57  F00B         	goto	u1321
   750   0016AA  EF59  F00B         	goto	u1320
   751   0016AE                     u1321:
   752   0016AE  EF3E  F00B         	goto	l2341
   753   0016B2                     u1320:
   754   0016B2                     l2347:
   755                           
   756                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 316:     return ret;
   757   0016B2  5048               	movf	lcd_8bit_send_string_pos@ret^0,w,c
   758   0016B4  0012               	return		;funcret
   759   0016B6                     __end_of_lcd_8bit_send_string_pos:
   760                           	callstack 0
   761                           
   762 ;; *************** function _lcd_8bit_set_cursor *****************
   763 ;; Defined at:
   764 ;;		line 413 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  lcd             1   16[COMRAM] PTR const struct .
   767 ;;		 -> lcd_2(10), 
   768 ;;  row             1   17[COMRAM] unsigned char 
   769 ;;  col             1   18[COMRAM] unsigned char 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  ret             1   19[COMRAM] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      unsigned char 
   774 ;; Registers used:
   775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   781 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;Total ram usage:        4 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 3
   788 ;; This function calls:
   789 ;;		_lcd_8bit_send_command
   790 ;; This function is called by:
   791 ;;		_lcd_8bit_send_string_pos
   792 ;;		_lcd_8bit_send_char_data_pos
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text2
   797   00171E                     __ptext2:
   798                           	callstack 0
   799   00171E                     _lcd_8bit_set_cursor:
   800                           	callstack 26
   801   00171E                     
   802                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 414:     STD_ReturnType ret = (STD_ReturnType)0x01;
   803   00171E  0E01               	movlw	1
   804   001720  6E43               	movwf	lcd_8bit_set_cursor@ret^0,c
   805                           
   806                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 415:     if (((void*)0) == lcd) {
   807   001722  5040               	movf	lcd_8bit_set_cursor@lcd^0,w,c
   808   001724  A4D8               	btfss	status,2,c
   809   001726  EF97  F00B         	goto	u1281
   810   00172A  EF99  F00B         	goto	u1280
   811   00172E                     u1281:
   812   00172E  EF9D  F00B         	goto	l2303
   813   001732                     u1280:
   814   001732                     
   815                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 416:         ret = (STD_ReturnType)0x00;
   816   001732  0E00               	movlw	0
   817   001734  6E43               	movwf	lcd_8bit_set_cursor@ret^0,c
   818                           
   819                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 417:     } else {
   820   001736  EFBD  F00B         	goto	l2313
   821   00173A                     l2303:
   822                           
   823                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 418:         col--;
   824   00173A  0642               	decf	lcd_8bit_set_cursor@col^0,f,c
   825                           
   826                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 419:         switch (row) {
   827   00173C  EFB2  F00B         	goto	l2311
   828   001740                     l2305:
   829   001740  C040  F03A         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   830   001744  5042               	movf	lcd_8bit_set_cursor@col^0,w,c
   831   001746  0F80               	addlw	128
   832   001748  6E3B               	movwf	lcd_8bit_send_command@command^0,c
   833   00174A  ECB5  F00A         	call	_lcd_8bit_send_command	;wreg free
   834                           
   835                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 421:                 break;
   836   00174E  EFBD  F00B         	goto	l2313
   837   001752                     l2307:
   838   001752  C040  F03A         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   839   001756  5042               	movf	lcd_8bit_set_cursor@col^0,w,c
   840   001758  0FC0               	addlw	192
   841   00175A  6E3B               	movwf	lcd_8bit_send_command@command^0,c
   842   00175C  ECB5  F00A         	call	_lcd_8bit_send_command	;wreg free
   843                           
   844                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 423:                 break;
   845   001760  EFBD  F00B         	goto	l2313
   846   001764                     l2311:
   847   001764  5041               	movf	lcd_8bit_set_cursor@row^0,w,c
   848                           
   849                           ; Switch size 1, requested type "simple"
   850                           ; Number of cases is 2, Range of values is 1 to 2
   851                           ; switch strategies available:
   852                           ; Name         Instructions Cycles
   853                           ; simple_byte            7     4 (average)
   854                           ;	Chosen strategy is simple_byte
   855   001766  0A01               	xorlw	1	; case 1
   856   001768  B4D8               	btfsc	status,2,c
   857   00176A  EFA0  F00B         	goto	l2305
   858   00176E  0A03               	xorlw	3	; case 2
   859   001770  B4D8               	btfsc	status,2,c
   860   001772  EFA9  F00B         	goto	l2307
   861   001776  EFBD  F00B         	goto	l2313
   862   00177A                     l2313:
   863                           
   864                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 426:     return ret;
   865   00177A  5043               	movf	lcd_8bit_set_cursor@ret^0,w,c
   866   00177C  0012               	return		;funcret
   867   00177E                     __end_of_lcd_8bit_set_cursor:
   868                           	callstack 0
   869                           
   870 ;; *************** function _lcd_8bit_send_char_data *****************
   871 ;; Defined at:
   872 ;;		line 247 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  lcd             1   10[COMRAM] PTR const struct .
   875 ;;		 -> lcd_2(10), 
   876 ;;  data            1   11[COMRAM] unsigned char 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
   879 ;;  ret             1   14[COMRAM] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      unsigned char 
   882 ;; Registers used:
   883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;Total ram usage:        6 bytes
   894 ;; Hardware stack levels used: 1
   895 ;; Hardware stack levels required when called: 2
   896 ;; This function calls:
   897 ;;		_gpio_pin_write_logic
   898 ;;		_lcd_8bits_send_enable_signal
   899 ;; This function is called by:
   900 ;;		_lcd_8bit_send_string_pos
   901 ;;		_lcd_8bit_send_char_data_pos
   902 ;;		_lcd_8bit_send_string
   903 ;;		_lcd_8bit_send_custom_char
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text3
   908   0014F4                     __ptext3:
   909                           	callstack 0
   910   0014F4                     _lcd_8bit_send_char_data:
   911                           	callstack 27
   912   0014F4                     
   913                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 249:     uint8 l_pin_counter = 0;
   914   0014F4  0E00               	movlw	0
   915   0014F6  6E3F               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   916                           
   917                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 250:     if (((void*)0) == lcd) {
   918   0014F8  503A               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   919   0014FA  A4D8               	btfss	status,2,c
   920   0014FC  EF82  F00A         	goto	u1251
   921   001500  EF84  F00A         	goto	u1250
   922   001504                     u1251:
   923   001504  EF88  F00A         	goto	l2279
   924   001508                     u1250:
   925   001508                     
   926                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 251:         ret = (STD_ReturnType)0x00;
   927   001508  0E00               	movlw	0
   928   00150A  6E3E               	movwf	lcd_8bit_send_char_data@ret^0,c
   929                           
   930                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 252:     } else {
   931   00150C  EFB3  F00A         	goto	l2295
   932   001510                     l2279:
   933   001510  C03A  F030         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
   934   001514  0E01               	movlw	1
   935   001516  6E31               	movwf	gpio_pin_write_logic@logic^0,c
   936   001518  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
   937   00151C                     
   938                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 254:         for (l_pin_counter = 0; l_pin_counter < 8
      +                          ; l_pin_counter++) {
   939   00151C  0E00               	movlw	0
   940   00151E  6E3F               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   941   001520                     l2287:
   942   001520  503A               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   943   001522  243F               	addwf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
   944   001524  0F02               	addlw	2
   945   001526  6E30               	movwf	gpio_pin_write_logic@pin_config^0,c
   946   001528  C03F  F03C         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data
   947   00152C  C03B  F03D         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
   948   001530  2A3C               	incf	??_lcd_8bit_send_char_data^0,f,c
   949   001532  EF9D  F00A         	goto	u1264
   950   001536                     u1265:
   951   001536  90D8               	bcf	status,0,c
   952   001538  323D               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
   953   00153A                     u1264:
   954   00153A  2E3C               	decfsz	??_lcd_8bit_send_char_data^0,f,c
   955   00153C  EF9B  F00A         	goto	u1265
   956   001540  503D               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
   957   001542  0B01               	andlw	1
   958   001544  6E31               	movwf	gpio_pin_write_logic@logic^0,c
   959   001546  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
   960   00154A                     
   961                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 256:         }
   962   00154A  2A3F               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
   963   00154C  0E07               	movlw	7
   964   00154E  643F               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
   965   001550  EFAC  F00A         	goto	u1271
   966   001554  EFAE  F00A         	goto	u1270
   967   001558                     u1271:
   968   001558  EF90  F00A         	goto	l2287
   969   00155C                     u1270:
   970   00155C                     
   971                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 257:         ret = lcd_8bits_send_enable_signal(lcd);
   972   00155C  C03A  F038         	movff	lcd_8bit_send_char_data@lcd,lcd_8bits_send_enable_signal@lcd
   973   001560  EC7A  F00C         	call	_lcd_8bits_send_enable_signal	;wreg free
   974   001564  6E3E               	movwf	lcd_8bit_send_char_data@ret^0,c
   975   001566                     l2295:
   976                           
   977                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 260:     return ret;
   978   001566  503E               	movf	lcd_8bit_send_char_data@ret^0,w,c
   979   001568  0012               	return		;funcret
   980   00156A                     __end_of_lcd_8bit_send_char_data:
   981                           	callstack 0
   982                           
   983 ;; *************** function _lcd_4bit_send_string_pos *****************
   984 ;; Defined at:
   985 ;;		line 143 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  lcd             1   18[COMRAM] PTR const struct .
   988 ;;		 -> lcd_1(6), 
   989 ;;  row             1   19[COMRAM] unsigned char 
   990 ;;  col             1   20[COMRAM] unsigned char 
   991 ;;  str             1   21[COMRAM] PTR unsigned char 
   992 ;;		 -> STR_4(13), STR_3(10), STR_1(17), 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  ret             1   22[COMRAM] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      unsigned char 
   997 ;; Registers used:
   998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;Total ram usage:        5 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; Hardware stack levels required when called: 4
  1011 ;; This function calls:
  1012 ;;		_lcd_4bit_send_char_data
  1013 ;;		_lcd_4bit_set_cursor
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text4
  1020   0016B6                     __ptext4:
  1021                           	callstack 0
  1022   0016B6                     _lcd_4bit_send_string_pos:
  1023                           	callstack 26
  1024   0016B6                     
  1025                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 145:     if (((void*)0) == lcd) {
  1026   0016B6  5042               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1027   0016B8  A4D8               	btfss	status,2,c
  1028   0016BA  EF61  F00B         	goto	u1291
  1029   0016BE  EF63  F00B         	goto	u1290
  1030   0016C2                     u1291:
  1031   0016C2  EF67  F00B         	goto	l2323
  1032   0016C6                     u1290:
  1033   0016C6                     
  1034                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 146:         ret = (STD_ReturnType)0x00;
  1035   0016C6  0E00               	movlw	0
  1036   0016C8  6E46               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1037                           
  1038                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 147:     } else {
  1039   0016CA  EF8D  F00B         	goto	l2331
  1040   0016CE                     l2323:
  1041                           
  1042                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 148:         ret = lcd_4bit_set_cursor(lcd, row, col);
  1043   0016CE  C042  F03E         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1044   0016D2  C043  F03F         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1045   0016D6  C044  F040         	movff	lcd_4bit_send_string_pos@col,lcd_4bit_set_cursor@col
  1046   0016DA  ECBF  F00B         	call	_lcd_4bit_set_cursor	;wreg free
  1047   0016DE  6E46               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1048                           
  1049                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 149:         while (*str) {
  1050   0016E0  EF7F  F00B         	goto	l2329
  1051   0016E4                     l2325:
  1052                           
  1053                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 150:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
  1054   0016E4  C042  F03B         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1055   0016E8  C045  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1056   0016EC                     	if	1	;There is more than 1 active tblptr byte
  1057   0016EC  0E10               	movlw	high __smallconst
  1058   0016EE  6EF7               	movwf	tblptrh,c
  1059   0016F0                     	endif
  1060   0016F0                     	if	0	;tblptru may be non-zero
  1061   0016F0                     	endif
  1062   0016F0                     	if	0	;tblptru may be non-zero
  1063   0016F0                     	endif
  1064   0016F0  0008               	tblrd		*
  1065   0016F2  CFF5 F03C          	movff	tablat,lcd_4bit_send_char_data@data
  1066   0016F6  EC1E  F00C         	call	_lcd_4bit_send_char_data	;wreg free
  1067   0016FA  6E46               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1068   0016FC  2A45               	incf	lcd_4bit_send_string_pos@str^0,f,c
  1069   0016FE                     l2329:
  1070                           
  1071                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 149:         while (*str) {
  1072   0016FE  C045  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1073   001702                     	if	1	;There is more than 1 active tblptr byte
  1074   001702  0E10               	movlw	high __smallconst
  1075   001704  6EF7               	movwf	tblptrh,c
  1076   001706                     	endif
  1077   001706                     	if	0	;tblptru may be non-zero
  1078   001706                     	endif
  1079   001706                     	if	0	;tblptru may be non-zero
  1080   001706                     	endif
  1081   001706  0008               	tblrd		*
  1082   001708  50F5               	movf	tablat,w,c
  1083   00170A  0900               	iorlw	0
  1084   00170C  A4D8               	btfss	status,2,c
  1085   00170E  EF8B  F00B         	goto	u1301
  1086   001712  EF8D  F00B         	goto	u1300
  1087   001716                     u1301:
  1088   001716  EF72  F00B         	goto	l2325
  1089   00171A                     u1300:
  1090   00171A                     l2331:
  1091                           
  1092                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 156:     return ret;
  1093   00171A  5046               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1094   00171C  0012               	return		;funcret
  1095   00171E                     __end_of_lcd_4bit_send_string_pos:
  1096                           	callstack 0
  1097                           
  1098 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  1099 ;; Defined at:
  1100 ;;		line 102 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  lcd             1   18[COMRAM] PTR const struct .
  1103 ;;		 -> lcd_1(6), 
  1104 ;;  row             1   19[COMRAM] unsigned char 
  1105 ;;  col             1   20[COMRAM] unsigned char 
  1106 ;;  data            1   21[COMRAM] unsigned char 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  ret             1   22[COMRAM] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      unsigned char 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;Total ram usage:        5 bytes
  1123 ;; Hardware stack levels used: 1
  1124 ;; Hardware stack levels required when called: 4
  1125 ;; This function calls:
  1126 ;;		_lcd_4bit_send_char_data
  1127 ;;		_lcd_4bit_set_cursor
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;;		_lcd_4bit_send_custom_char
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text5
  1135   001970                     __ptext5:
  1136                           	callstack 0
  1137   001970                     _lcd_4bit_send_char_data_pos:
  1138                           	callstack 26
  1139   001970                     
  1140                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 104:     if (((void*)0) == lcd) {
  1141   001970  5042               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  1142   001972  A4D8               	btfss	status,2,c
  1143   001974  EFBE  F00C         	goto	u1331
  1144   001978  EFC0  F00C         	goto	u1330
  1145   00197C                     u1331:
  1146   00197C  EFC4  F00C         	goto	l2355
  1147   001980                     u1330:
  1148   001980                     
  1149                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 105:         ret = (STD_ReturnType)0x00;
  1150   001980  0E00               	movlw	0
  1151   001982  6E46               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1152                           
  1153                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 106:     } else {
  1154   001984  EFD4  F00C         	goto	l2357
  1155   001988                     l2355:
  1156                           
  1157                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 107:         ret = lcd_4bit_set_cursor(lcd, row, col);
  1158   001988  C042  F03E         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  1159   00198C  C043  F03F         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  1160   001990  C044  F040         	movff	lcd_4bit_send_char_data_pos@col,lcd_4bit_set_cursor@col
  1161   001994  ECBF  F00B         	call	_lcd_4bit_set_cursor	;wreg free
  1162   001998  6E46               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1163                           
  1164                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 108:         ret = lcd_4bit_send_char_data(lcd, data);
  1165   00199A  C042  F03B         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  1166   00199E  C045  F03C         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  1167   0019A2  EC1E  F00C         	call	_lcd_4bit_send_char_data	;wreg free
  1168   0019A6  6E46               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1169   0019A8                     l2357:
  1170                           
  1171                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 111:     return ret;
  1172   0019A8  5046               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  1173   0019AA  0012               	return		;funcret
  1174   0019AC                     __end_of_lcd_4bit_send_char_data_pos:
  1175                           	callstack 0
  1176                           
  1177 ;; *************** function _lcd_4bit_set_cursor *****************
  1178 ;; Defined at:
  1179 ;;		line 429 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  lcd             1   14[COMRAM] PTR const struct .
  1182 ;;		 -> lcd_1(6), 
  1183 ;;  row             1   15[COMRAM] unsigned char 
  1184 ;;  col             1   16[COMRAM] unsigned char 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  ret             1   17[COMRAM] unsigned char 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      unsigned char 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1196 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;Total ram usage:        4 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; Hardware stack levels required when called: 3
  1203 ;; This function calls:
  1204 ;;		_lcd_4bit_send_command
  1205 ;; This function is called by:
  1206 ;;		_lcd_4bit_send_char_data_pos
  1207 ;;		_lcd_4bit_send_string_pos
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text6
  1212   00177E                     __ptext6:
  1213                           	callstack 0
  1214   00177E                     _lcd_4bit_set_cursor:
  1215                           	callstack 26
  1216   00177E                     
  1217                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 430:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1218   00177E  0E01               	movlw	1
  1219   001780  6E41               	movwf	lcd_4bit_set_cursor@ret^0,c
  1220                           
  1221                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 431:     if (((void*)0) == lcd) {
  1222   001782  503E               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1223   001784  A4D8               	btfss	status,2,c
  1224   001786  EFC7  F00B         	goto	u1241
  1225   00178A  EFC9  F00B         	goto	u1240
  1226   00178E                     u1241:
  1227   00178E  EFCD  F00B         	goto	l2261
  1228   001792                     u1240:
  1229   001792                     
  1230                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 432:         ret = (STD_ReturnType)0x00;
  1231   001792  0E00               	movlw	0
  1232   001794  6E41               	movwf	lcd_4bit_set_cursor@ret^0,c
  1233                           
  1234                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 433:     } else {
  1235   001796  EFED  F00B         	goto	l2271
  1236   00179A                     l2261:
  1237                           
  1238                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 434:         col--;
  1239   00179A  0640               	decf	lcd_4bit_set_cursor@col^0,f,c
  1240                           
  1241                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 435:         switch (row) {
  1242   00179C  EFE2  F00B         	goto	l2269
  1243   0017A0                     l2263:
  1244   0017A0  C03E  F03B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1245   0017A4  5040               	movf	lcd_4bit_set_cursor@col^0,w,c
  1246   0017A6  0F80               	addlw	128
  1247   0017A8  6E3C               	movwf	lcd_4bit_send_command@command^0,c
  1248   0017AA  EC4C  F00C         	call	_lcd_4bit_send_command	;wreg free
  1249                           
  1250                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 437:                 break;
  1251   0017AE  EFED  F00B         	goto	l2271
  1252   0017B2                     l2265:
  1253   0017B2  C03E  F03B         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1254   0017B6  5040               	movf	lcd_4bit_set_cursor@col^0,w,c
  1255   0017B8  0FC0               	addlw	192
  1256   0017BA  6E3C               	movwf	lcd_4bit_send_command@command^0,c
  1257   0017BC  EC4C  F00C         	call	_lcd_4bit_send_command	;wreg free
  1258                           
  1259                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 439:                 break;
  1260   0017C0  EFED  F00B         	goto	l2271
  1261   0017C4                     l2269:
  1262   0017C4  503F               	movf	lcd_4bit_set_cursor@row^0,w,c
  1263                           
  1264                           ; Switch size 1, requested type "simple"
  1265                           ; Number of cases is 2, Range of values is 1 to 2
  1266                           ; switch strategies available:
  1267                           ; Name         Instructions Cycles
  1268                           ; simple_byte            7     4 (average)
  1269                           ;	Chosen strategy is simple_byte
  1270   0017C6  0A01               	xorlw	1	; case 1
  1271   0017C8  B4D8               	btfsc	status,2,c
  1272   0017CA  EFD0  F00B         	goto	l2263
  1273   0017CE  0A03               	xorlw	3	; case 2
  1274   0017D0  B4D8               	btfsc	status,2,c
  1275   0017D2  EFD9  F00B         	goto	l2265
  1276   0017D6  EFED  F00B         	goto	l2271
  1277   0017DA                     l2271:
  1278                           
  1279                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 442:     return ret;
  1280   0017DA  5041               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1281   0017DC  0012               	return		;funcret
  1282   0017DE                     __end_of_lcd_4bit_set_cursor:
  1283                           	callstack 0
  1284                           
  1285 ;; *************** function _lcd_4bit_send_char_data *****************
  1286 ;; Defined at:
  1287 ;;		line 78 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  lcd             1   11[COMRAM] PTR const struct .
  1290 ;;		 -> lcd_1(6), 
  1291 ;;  data            1   12[COMRAM] unsigned char 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  ret             1   13[COMRAM] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      unsigned char 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;Total ram usage:        3 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; Hardware stack levels required when called: 2
  1310 ;; This function calls:
  1311 ;;		_gpio_pin_write_logic
  1312 ;;		_lcd_4bits_send_enable_signal
  1313 ;;		_lcd_send_4bits
  1314 ;; This function is called by:
  1315 ;;		_lcd_4bit_send_char_data_pos
  1316 ;;		_lcd_4bit_send_string_pos
  1317 ;;		_lcd_4bit_send_string
  1318 ;;		_lcd_4bit_send_custom_char
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text7
  1323   00183C                     __ptext7:
  1324                           	callstack 0
  1325   00183C                     _lcd_4bit_send_char_data:
  1326                           	callstack 27
  1327   00183C                     
  1328                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 80:     if (((void*)0) == lcd) {
  1329   00183C  503B               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1330   00183E  A4D8               	btfss	status,2,c
  1331   001840  EF24  F00C         	goto	u1231
  1332   001844  EF26  F00C         	goto	u1230
  1333   001848                     u1231:
  1334   001848  EF2A  F00C         	goto	l2251
  1335   00184C                     u1230:
  1336   00184C                     
  1337                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 81:         ret = (STD_ReturnType)0x00;
  1338   00184C  0E00               	movlw	0
  1339   00184E  6E3D               	movwf	lcd_4bit_send_char_data@ret^0,c
  1340                           
  1341                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 82:     } else {
  1342   001850  EF4A  F00C         	goto	l2253
  1343   001854                     l2251:
  1344                           
  1345                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 83:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  1346   001854  C03B  F030         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1347   001858  0E01               	movlw	1
  1348   00185A  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1349   00185C  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  1350   001860  6E3D               	movwf	lcd_4bit_send_char_data@ret^0,c
  1351                           
  1352                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 84:         ret = lcd_send_4bits(lcd, data >> 4);
  1353   001862  C03B  F038         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1354   001866  383C               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1355   001868  0B0F               	andlw	15
  1356   00186A  6E39               	movwf	lcd_send_4bits@_command^0,c
  1357   00186C  ECF0  F00A         	call	_lcd_send_4bits	;wreg free
  1358   001870  6E3D               	movwf	lcd_4bit_send_char_data@ret^0,c
  1359                           
  1360                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 85:         ret = lcd_4bits_send_enable_signal(lcd);
  1361   001872  C03B  F038         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1362   001876  EC99  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  1363   00187A  6E3D               	movwf	lcd_4bit_send_char_data@ret^0,c
  1364                           
  1365                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 86:         ret = lcd_send_4bits(lcd, data);
  1366   00187C  C03B  F038         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1367   001880  C03C  F039         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_command
  1368   001884  ECF0  F00A         	call	_lcd_send_4bits	;wreg free
  1369   001888  6E3D               	movwf	lcd_4bit_send_char_data@ret^0,c
  1370                           
  1371                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 87:         ret = lcd_4bits_send_enable_signal(lcd);
  1372   00188A  C03B  F038         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1373   00188E  EC99  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  1374   001892  6E3D               	movwf	lcd_4bit_send_char_data@ret^0,c
  1375   001894                     l2253:
  1376                           
  1377                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 91:     return ret;
  1378   001894  503D               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1379   001896  0012               	return		;funcret
  1380   001898                     __end_of_lcd_4bit_send_char_data:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _application_initialize *****************
  1384 ;; Defined at:
  1385 ;;		line 32 in file "application.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; Hardware stack levels required when called: 5
  1406 ;; This function calls:
  1407 ;;		_ecu_layer_initialize
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text8
  1414   001A24                     __ptext8:
  1415                           	callstack 0
  1416   001A24                     _application_initialize:
  1417                           	callstack 25
  1418   001A24                     
  1419                           ;application.c: 34:     ecu_layer_initialize();
  1420   001A24  EC09  F00D         	call	_ecu_layer_initialize	;wreg free
  1421   001A28  0012               	return		;funcret
  1422   001A2A                     __end_of_application_initialize:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _ecu_layer_initialize *****************
  1426 ;; Defined at:
  1427 ;;		line 96 in file "ECU_Layer/ecu_layer_init.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  ret             1    0        unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;Total ram usage:        0 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 4
  1448 ;; This function calls:
  1449 ;;		_lcd_4bit_initialize
  1450 ;;		_lcd_8bit_initialize
  1451 ;; This function is called by:
  1452 ;;		_application_initialize
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text9
  1457   001A12                     __ptext9:
  1458                           	callstack 0
  1459   001A12                     _ecu_layer_initialize:
  1460                           	callstack 25
  1461   001A12  0E2A               	movlw	low _lcd_1
  1462   001A14  6E3E               	movwf	lcd_4bit_initialize@lcd^0,c
  1463   001A16  ECB0  F009         	call	_lcd_4bit_initialize	;wreg free
  1464   001A1A  0E20               	movlw	low _lcd_2
  1465   001A1C  6E40               	movwf	lcd_8bit_initialize@lcd^0,c
  1466   001A1E  EC34  F009         	call	_lcd_8bit_initialize	;wreg free
  1467   001A22  0012               	return		;funcret
  1468   001A24                     __end_of_ecu_layer_initialize:
  1469                           	callstack 0
  1470                           
  1471 ;; *************** function _lcd_8bit_initialize *****************
  1472 ;; Defined at:
  1473 ;;		line 190 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  lcd             1   16[COMRAM] PTR const struct .
  1476 ;;		 -> lcd_2(10), 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  ret             1   20[COMRAM] unsigned char 
  1479 ;;  l_data_pins_    1   19[COMRAM] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      unsigned char 
  1482 ;; Registers used:
  1483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1489 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;Total ram usage:        5 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; Hardware stack levels required when called: 3
  1496 ;; This function calls:
  1497 ;;		_gpio_pin_initialization
  1498 ;;		_lcd_8bit_send_command
  1499 ;; This function is called by:
  1500 ;;		_ecu_layer_initialize
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text10
  1505   001268                     __ptext10:
  1506                           	callstack 0
  1507   001268                     _lcd_8bit_initialize:
  1508                           	callstack 25
  1509   001268                     
  1510                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 192:     uint8 l_data_pins_counter = 0;
  1511   001268  0E00               	movlw	0
  1512   00126A  6E43               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  1513                           
  1514                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 193:     if (((void*)0) == lcd) {
  1515   00126C  5040               	movf	lcd_8bit_initialize@lcd^0,w,c
  1516   00126E  A4D8               	btfss	status,2,c
  1517   001270  EF3C  F009         	goto	u1211
  1518   001274  EF3E  F009         	goto	u1210
  1519   001278                     u1211:
  1520   001278  EF42  F009         	goto	l2201
  1521   00127C                     u1210:
  1522   00127C                     
  1523                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 194:         ret = (STD_ReturnType)0x00;
  1524   00127C  0E00               	movlw	0
  1525   00127E  6E44               	movwf	lcd_8bit_initialize@ret^0,c
  1526                           
  1527                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 195:     } else {
  1528   001280  EFAE  F009         	goto	l2237
  1529   001284                     l2201:
  1530                           
  1531                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 196:         ret = gpio_pin_initialization(&(lcd->lcd_
      +                          rs));
  1532   001284  C040  F038         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialization@pin_config
  1533   001288  ECEF  F00B         	call	_gpio_pin_initialization	;wreg free
  1534   00128C  6E44               	movwf	lcd_8bit_initialize@ret^0,c
  1535                           
  1536                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 197:         ret = gpio_pin_initialization(&(lcd->lcd_
      +                          en));
  1537   00128E  2840               	incf	lcd_8bit_initialize@lcd^0,w,c
  1538   001290  6E38               	movwf	gpio_pin_initialization@pin_config^0,c
  1539   001292  ECEF  F00B         	call	_gpio_pin_initialization	;wreg free
  1540   001296  6E44               	movwf	lcd_8bit_initialize@ret^0,c
  1541   001298                     
  1542                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 198:         for (l_data_pins_counter = 0; l_data_pins
      +                          _counter < 8; l_data_pins_counter++) {
  1543   001298  0E00               	movlw	0
  1544   00129A  6E43               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  1545   00129C                     l2209:
  1546   00129C  5040               	movf	lcd_8bit_initialize@lcd^0,w,c
  1547   00129E  2443               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
  1548   0012A0  0F02               	addlw	2
  1549   0012A2  6E38               	movwf	gpio_pin_initialization@pin_config^0,c
  1550   0012A4  ECEF  F00B         	call	_gpio_pin_initialization	;wreg free
  1551   0012A8                     
  1552                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 200:         }
  1553   0012A8  2A43               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
  1554   0012AA  0E07               	movlw	7
  1555   0012AC  6443               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
  1556   0012AE  EF5B  F009         	goto	u1221
  1557   0012B2  EF5D  F009         	goto	u1220
  1558   0012B6                     u1221:
  1559   0012B6  EF4E  F009         	goto	l2209
  1560   0012BA                     u1220:
  1561   0012BA                     
  1562                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 201:         _delay((unsigned long)((20)*(8000000UL/40
      +                          00.0)));
  1563   0012BA  0E34               	movlw	52
  1564   0012BC  6E41               	movwf	??_lcd_8bit_initialize^0,c
  1565   0012BE  0EF2               	movlw	242
  1566   0012C0                     u1747:
  1567   0012C0  2EE8               	decfsz	wreg,f,c
  1568   0012C2  D7FE               	bra	u1747
  1569   0012C4  2E41               	decfsz	??_lcd_8bit_initialize^0,f,c
  1570   0012C6  D7FC               	bra	u1747
  1571   0012C8  C040  F03A         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1572   0012CC  0E38               	movlw	56
  1573   0012CE  6E3B               	movwf	lcd_8bit_send_command@command^0,c
  1574   0012D0  ECB5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1575   0012D4                     
  1576                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 203:         _delay((unsigned long)((5)*(8000000UL/400
      +                          0.0)));
  1577   0012D4  0E0D               	movlw	13
  1578   0012D6  6E41               	movwf	??_lcd_8bit_initialize^0,c
  1579   0012D8  0EFC               	movlw	252
  1580   0012DA                     u1757:
  1581   0012DA  2EE8               	decfsz	wreg,f,c
  1582   0012DC  D7FE               	bra	u1757
  1583   0012DE  2E41               	decfsz	??_lcd_8bit_initialize^0,f,c
  1584   0012E0  D7FC               	bra	u1757
  1585   0012E2  C040  F03A         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1586   0012E6  0E38               	movlw	56
  1587   0012E8  6E3B               	movwf	lcd_8bit_send_command@command^0,c
  1588   0012EA  ECB5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1589   0012EE                     
  1590                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 205:         _delay((unsigned long)((150)*(8000000UL/4
      +                          000.0)));
  1591   0012EE  0E02               	movlw	2
  1592   0012F0  6E42               	movwf	(??_lcd_8bit_initialize+1)^0,c
  1593   0012F2  0E86               	movlw	134
  1594   0012F4  6E41               	movwf	??_lcd_8bit_initialize^0,c
  1595   0012F6  0E99               	movlw	153
  1596   0012F8                     u1767:
  1597   0012F8  2EE8               	decfsz	wreg,f,c
  1598   0012FA  D7FE               	bra	u1767
  1599   0012FC  2E41               	decfsz	??_lcd_8bit_initialize^0,f,c
  1600   0012FE  D7FC               	bra	u1767
  1601   001300  2E42               	decfsz	(??_lcd_8bit_initialize+1)^0,f,c
  1602   001302  D7FA               	bra	u1767
  1603   001304  0000               	nop	
  1604   001306  C040  F03A         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1605   00130A  0E38               	movlw	56
  1606   00130C  6E3B               	movwf	lcd_8bit_send_command@command^0,c
  1607   00130E  ECB5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1608   001312  C040  F03A         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1609   001316  0E01               	movlw	1
  1610   001318  6E3B               	movwf	lcd_8bit_send_command@command^0,c
  1611   00131A  ECB5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1612   00131E  C040  F03A         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1613   001322  0E02               	movlw	2
  1614   001324  6E3B               	movwf	lcd_8bit_send_command@command^0,c
  1615   001326  ECB5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1616   00132A  C040  F03A         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1617   00132E  0E06               	movlw	6
  1618   001330  6E3B               	movwf	lcd_8bit_send_command@command^0,c
  1619   001332  ECB5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1620   001336  C040  F03A         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1621   00133A  0E0C               	movlw	12
  1622   00133C  6E3B               	movwf	lcd_8bit_send_command@command^0,c
  1623   00133E  ECB5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1624   001342  C040  F03A         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1625   001346  0E38               	movlw	56
  1626   001348  6E3B               	movwf	lcd_8bit_send_command@command^0,c
  1627   00134A  ECB5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1628   00134E                     
  1629                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 212:         ret = lcd_8bit_send_command(lcd, 0x80);
  1630   00134E  C040  F03A         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1631   001352  0E80               	movlw	128
  1632   001354  6E3B               	movwf	lcd_8bit_send_command@command^0,c
  1633   001356  ECB5  F00A         	call	_lcd_8bit_send_command	;wreg free
  1634   00135A  6E44               	movwf	lcd_8bit_initialize@ret^0,c
  1635   00135C                     l2237:
  1636                           
  1637                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 215:     return ret;
  1638   00135C  5044               	movf	lcd_8bit_initialize@ret^0,w,c
  1639   00135E  0012               	return		;funcret
  1640   001360                     __end_of_lcd_8bit_initialize:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function _lcd_8bit_send_command *****************
  1644 ;; Defined at:
  1645 ;;		line 224 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  lcd             1   10[COMRAM] PTR const struct .
  1648 ;;		 -> lcd_2(10), 
  1649 ;;  command         1   11[COMRAM] unsigned char 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
  1652 ;;  ret             1   14[COMRAM] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      unsigned char 
  1655 ;; Registers used:
  1656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;Total ram usage:        6 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 2
  1669 ;; This function calls:
  1670 ;;		_gpio_pin_write_logic
  1671 ;;		_lcd_8bits_send_enable_signal
  1672 ;; This function is called by:
  1673 ;;		_lcd_8bit_initialize
  1674 ;;		_lcd_8bit_set_cursor
  1675 ;;		_lcd_8bit_send_custom_char
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text11
  1680   00156A                     __ptext11:
  1681                           	callstack 0
  1682   00156A                     _lcd_8bit_send_command:
  1683                           	callstack 26
  1684   00156A                     
  1685                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 226:     uint8 l_pin_counter = 0;
  1686   00156A  0E00               	movlw	0
  1687   00156C  6E3F               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1688                           
  1689                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 227:     if (((void*)0) == lcd) {
  1690   00156E  503A               	movf	lcd_8bit_send_command@lcd^0,w,c
  1691   001570  A4D8               	btfss	status,2,c
  1692   001572  EFBD  F00A         	goto	u1161
  1693   001576  EFBF  F00A         	goto	u1160
  1694   00157A                     u1161:
  1695   00157A  EFC3  F00A         	goto	l2133
  1696   00157E                     u1160:
  1697   00157E                     
  1698                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 228:         ret = (STD_ReturnType)0x00;
  1699   00157E  0E00               	movlw	0
  1700   001580  6E3E               	movwf	lcd_8bit_send_command@ret^0,c
  1701                           
  1702                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 229:     } else {
  1703   001582  EFEE  F00A         	goto	l2149
  1704   001586                     l2133:
  1705   001586  C03A  F030         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@pin_config
  1706   00158A  0E00               	movlw	0
  1707   00158C  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1708   00158E  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  1709   001592                     
  1710                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 231:         for (l_pin_counter = 0; l_pin_counter < 8
      +                          ; l_pin_counter++) {
  1711   001592  0E00               	movlw	0
  1712   001594  6E3F               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1713   001596                     l2141:
  1714   001596  503A               	movf	lcd_8bit_send_command@lcd^0,w,c
  1715   001598  243F               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1716   00159A  0F02               	addlw	2
  1717   00159C  6E30               	movwf	gpio_pin_write_logic@pin_config^0,c
  1718   00159E  C03F  F03C         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  1719   0015A2  C03B  F03D         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1720   0015A6  2A3C               	incf	??_lcd_8bit_send_command^0,f,c
  1721   0015A8  EFD8  F00A         	goto	u1174
  1722   0015AC                     u1175:
  1723   0015AC  90D8               	bcf	status,0,c
  1724   0015AE  323D               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1725   0015B0                     u1174:
  1726   0015B0  2E3C               	decfsz	??_lcd_8bit_send_command^0,f,c
  1727   0015B2  EFD6  F00A         	goto	u1175
  1728   0015B6  503D               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1729   0015B8  0B01               	andlw	1
  1730   0015BA  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1731   0015BC  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  1732   0015C0                     
  1733                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 233:         }
  1734   0015C0  2A3F               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1735   0015C2  0E07               	movlw	7
  1736   0015C4  643F               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1737   0015C6  EFE7  F00A         	goto	u1181
  1738   0015CA  EFE9  F00A         	goto	u1180
  1739   0015CE                     u1181:
  1740   0015CE  EFCB  F00A         	goto	l2141
  1741   0015D2                     u1180:
  1742   0015D2                     
  1743                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 234:         ret = lcd_8bits_send_enable_signal(lcd);
  1744   0015D2  C03A  F038         	movff	lcd_8bit_send_command@lcd,lcd_8bits_send_enable_signal@lcd
  1745   0015D6  EC7A  F00C         	call	_lcd_8bits_send_enable_signal	;wreg free
  1746   0015DA  6E3E               	movwf	lcd_8bit_send_command@ret^0,c
  1747   0015DC                     l2149:
  1748                           
  1749                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 237:     return ret;
  1750   0015DC  503E               	movf	lcd_8bit_send_command@ret^0,w,c
  1751   0015DE  0012               	return		;funcret
  1752   0015E0                     __end_of_lcd_8bit_send_command:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function _lcd_8bits_send_enable_signal *****************
  1756 ;; Defined at:
  1757 ;;		line 401 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  lcd             1    8[COMRAM] PTR const struct .
  1760 ;;		 -> lcd_2(10), 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  ret             1    9[COMRAM] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      unsigned char 
  1765 ;; Registers used:
  1766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1772 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;Total ram usage:        2 bytes
  1777 ;; Hardware stack levels used: 1
  1778 ;; Hardware stack levels required when called: 1
  1779 ;; This function calls:
  1780 ;;		_gpio_pin_write_logic
  1781 ;; This function is called by:
  1782 ;;		_lcd_8bit_send_command
  1783 ;;		_lcd_8bit_send_char_data
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text12
  1788   0018F4                     __ptext12:
  1789                           	callstack 0
  1790   0018F4                     _lcd_8bits_send_enable_signal:
  1791                           	callstack 26
  1792   0018F4                     
  1793                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 403:     if (((void*)0) == lcd) {
  1794   0018F4  5038               	movf	lcd_8bits_send_enable_signal@lcd^0,w,c
  1795   0018F6  A4D8               	btfss	status,2,c
  1796   0018F8  EF80  F00C         	goto	u1121
  1797   0018FC  EF82  F00C         	goto	u1120
  1798   001900                     u1121:
  1799   001900  EF86  F00C         	goto	l2097
  1800   001904                     u1120:
  1801   001904                     
  1802                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 404:         ret = (STD_ReturnType)0x00;
  1803   001904  0E00               	movlw	0
  1804   001906  6E39               	movwf	lcd_8bits_send_enable_signal@ret^0,c
  1805                           
  1806                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 405:     } else {
  1807   001908  EF97  F00C         	goto	l2103
  1808   00190C                     l2097:
  1809                           
  1810                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 406:         gpio_pin_write_logic(&(lcd->lcd_en), GPIO
      +                          _HIGH);
  1811   00190C  2838               	incf	lcd_8bits_send_enable_signal@lcd^0,w,c
  1812   00190E  6E30               	movwf	gpio_pin_write_logic@pin_config^0,c
  1813   001910  0E01               	movlw	1
  1814   001912  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1815   001914  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  1816   001918                     
  1817                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 407:         _delay((unsigned long)((5)*(8000000UL/400
      +                          0000.0)));
  1818   001918  0E03               	movlw	3
  1819   00191A                     u1777:
  1820   00191A  2EE8               	decfsz	wreg,f,c
  1821   00191C  D7FE               	bra	u1777
  1822   00191E  0000               	nop	
  1823   001920                     
  1824                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 408:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOW);
  1825   001920  2838               	incf	lcd_8bits_send_enable_signal@lcd^0,w,c
  1826   001922  6E30               	movwf	gpio_pin_write_logic@pin_config^0,c
  1827   001924  0E00               	movlw	0
  1828   001926  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1829   001928  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  1830   00192C  6E39               	movwf	lcd_8bits_send_enable_signal@ret^0,c
  1831   00192E                     l2103:
  1832                           
  1833                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 410:     return ret;
  1834   00192E  5039               	movf	lcd_8bits_send_enable_signal@ret^0,w,c
  1835   001930  0012               	return		;funcret
  1836   001932                     __end_of_lcd_8bits_send_enable_signal:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function _lcd_4bit_initialize *****************
  1840 ;; Defined at:
  1841 ;;		line 23 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  lcd             1   14[COMRAM] PTR const struct .
  1844 ;;		 -> lcd_1(6), 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  ret             1   18[COMRAM] unsigned char 
  1847 ;;  l_data_pins_    1   17[COMRAM] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      unsigned char 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1857 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;Total ram usage:        5 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; Hardware stack levels required when called: 3
  1864 ;; This function calls:
  1865 ;;		_gpio_pin_initialization
  1866 ;;		_lcd_4bit_send_command
  1867 ;; This function is called by:
  1868 ;;		_ecu_layer_initialize
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text13
  1873   001360                     __ptext13:
  1874                           	callstack 0
  1875   001360                     _lcd_4bit_initialize:
  1876                           	callstack 25
  1877   001360                     
  1878                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 25:     uint8 l_data_pins_counter = 0;
  1879   001360  0E00               	movlw	0
  1880   001362  6E41               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1881                           
  1882                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 26:     if (((void*)0) == lcd) {
  1883   001364  503E               	movf	lcd_4bit_initialize@lcd^0,w,c
  1884   001366  A4D8               	btfss	status,2,c
  1885   001368  EFB8  F009         	goto	u1191
  1886   00136C  EFBA  F009         	goto	u1190
  1887   001370                     u1191:
  1888   001370  EFBE  F009         	goto	l2157
  1889   001374                     u1190:
  1890   001374                     
  1891                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         ret = (STD_ReturnType)0x00;
  1892   001374  0E00               	movlw	0
  1893   001376  6E42               	movwf	lcd_4bit_initialize@ret^0,c
  1894                           
  1895                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 28:     } else {
  1896   001378  EF2A  F00A         	goto	l2193
  1897   00137C                     l2157:
  1898                           
  1899                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 29:         ret = gpio_pin_initialization(&(lcd->lcd_r
      +                          s));
  1900   00137C  C03E  F038         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialization@pin_config
  1901   001380  ECEF  F00B         	call	_gpio_pin_initialization	;wreg free
  1902   001384  6E42               	movwf	lcd_4bit_initialize@ret^0,c
  1903                           
  1904                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 30:         ret = gpio_pin_initialization(&(lcd->lcd_e
      +                          n));
  1905   001386  283E               	incf	lcd_4bit_initialize@lcd^0,w,c
  1906   001388  6E38               	movwf	gpio_pin_initialization@pin_config^0,c
  1907   00138A  ECEF  F00B         	call	_gpio_pin_initialization	;wreg free
  1908   00138E  6E42               	movwf	lcd_4bit_initialize@ret^0,c
  1909   001390                     
  1910                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 31:         for (l_data_pins_counter = 0; l_data_pins_
      +                          counter < 4; l_data_pins_counter++) {
  1911   001390  0E00               	movlw	0
  1912   001392  6E41               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1913   001394                     l2165:
  1914   001394  503E               	movf	lcd_4bit_initialize@lcd^0,w,c
  1915   001396  2441               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  1916   001398  0F02               	addlw	2
  1917   00139A  6E38               	movwf	gpio_pin_initialization@pin_config^0,c
  1918   00139C  ECEF  F00B         	call	_gpio_pin_initialization	;wreg free
  1919   0013A0                     
  1920                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 33:         }
  1921   0013A0  2A41               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  1922   0013A2  0E03               	movlw	3
  1923   0013A4  6441               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  1924   0013A6  EFD7  F009         	goto	u1201
  1925   0013AA  EFD9  F009         	goto	u1200
  1926   0013AE                     u1201:
  1927   0013AE  EFCA  F009         	goto	l2165
  1928   0013B2                     u1200:
  1929   0013B2                     
  1930                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 34:         _delay((unsigned long)((20)*(8000000UL/400
      +                          0.0)));
  1931   0013B2  0E34               	movlw	52
  1932   0013B4  6E3F               	movwf	??_lcd_4bit_initialize^0,c
  1933   0013B6  0EF2               	movlw	242
  1934   0013B8                     u1787:
  1935   0013B8  2EE8               	decfsz	wreg,f,c
  1936   0013BA  D7FE               	bra	u1787
  1937   0013BC  2E3F               	decfsz	??_lcd_4bit_initialize^0,f,c
  1938   0013BE  D7FC               	bra	u1787
  1939   0013C0  C03E  F03B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1940   0013C4  0E38               	movlw	56
  1941   0013C6  6E3C               	movwf	lcd_4bit_send_command@command^0,c
  1942   0013C8  EC4C  F00C         	call	_lcd_4bit_send_command	;wreg free
  1943   0013CC                     
  1944                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 36:         _delay((unsigned long)((5)*(8000000UL/4000
      +                          .0)));
  1945   0013CC  0E0D               	movlw	13
  1946   0013CE  6E3F               	movwf	??_lcd_4bit_initialize^0,c
  1947   0013D0  0EFC               	movlw	252
  1948   0013D2                     u1797:
  1949   0013D2  2EE8               	decfsz	wreg,f,c
  1950   0013D4  D7FE               	bra	u1797
  1951   0013D6  2E3F               	decfsz	??_lcd_4bit_initialize^0,f,c
  1952   0013D8  D7FC               	bra	u1797
  1953   0013DA  C03E  F03B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1954   0013DE  0E38               	movlw	56
  1955   0013E0  6E3C               	movwf	lcd_4bit_send_command@command^0,c
  1956   0013E2  EC4C  F00C         	call	_lcd_4bit_send_command	;wreg free
  1957   0013E6                     
  1958                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 38:         _delay((unsigned long)((150)*(8000000UL/40
      +                          00.0)));
  1959   0013E6  0E02               	movlw	2
  1960   0013E8  6E40               	movwf	(??_lcd_4bit_initialize+1)^0,c
  1961   0013EA  0E86               	movlw	134
  1962   0013EC  6E3F               	movwf	??_lcd_4bit_initialize^0,c
  1963   0013EE  0E99               	movlw	153
  1964   0013F0                     u1807:
  1965   0013F0  2EE8               	decfsz	wreg,f,c
  1966   0013F2  D7FE               	bra	u1807
  1967   0013F4  2E3F               	decfsz	??_lcd_4bit_initialize^0,f,c
  1968   0013F6  D7FC               	bra	u1807
  1969   0013F8  2E40               	decfsz	(??_lcd_4bit_initialize+1)^0,f,c
  1970   0013FA  D7FA               	bra	u1807
  1971   0013FC  0000               	nop	
  1972   0013FE  C03E  F03B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1973   001402  0E38               	movlw	56
  1974   001404  6E3C               	movwf	lcd_4bit_send_command@command^0,c
  1975   001406  EC4C  F00C         	call	_lcd_4bit_send_command	;wreg free
  1976   00140A  C03E  F03B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1977   00140E  0E01               	movlw	1
  1978   001410  6E3C               	movwf	lcd_4bit_send_command@command^0,c
  1979   001412  EC4C  F00C         	call	_lcd_4bit_send_command	;wreg free
  1980   001416  C03E  F03B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1981   00141A  0E02               	movlw	2
  1982   00141C  6E3C               	movwf	lcd_4bit_send_command@command^0,c
  1983   00141E  EC4C  F00C         	call	_lcd_4bit_send_command	;wreg free
  1984   001422  C03E  F03B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1985   001426  0E06               	movlw	6
  1986   001428  6E3C               	movwf	lcd_4bit_send_command@command^0,c
  1987   00142A  EC4C  F00C         	call	_lcd_4bit_send_command	;wreg free
  1988   00142E  C03E  F03B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1989   001432  0E0C               	movlw	12
  1990   001434  6E3C               	movwf	lcd_4bit_send_command@command^0,c
  1991   001436  EC4C  F00C         	call	_lcd_4bit_send_command	;wreg free
  1992   00143A  C03E  F03B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1993   00143E  0E28               	movlw	40
  1994   001440  6E3C               	movwf	lcd_4bit_send_command@command^0,c
  1995   001442  EC4C  F00C         	call	_lcd_4bit_send_command	;wreg free
  1996   001446                     
  1997                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 45:         ret = lcd_4bit_send_command(lcd, 0x80);
  1998   001446  C03E  F03B         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1999   00144A  0E80               	movlw	128
  2000   00144C  6E3C               	movwf	lcd_4bit_send_command@command^0,c
  2001   00144E  EC4C  F00C         	call	_lcd_4bit_send_command	;wreg free
  2002   001452  6E42               	movwf	lcd_4bit_initialize@ret^0,c
  2003   001454                     l2193:
  2004                           
  2005                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 48:     return ret;
  2006   001454  5042               	movf	lcd_4bit_initialize@ret^0,w,c
  2007   001456  0012               	return		;funcret
  2008   001458                     __end_of_lcd_4bit_initialize:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _lcd_4bit_send_command *****************
  2012 ;; Defined at:
  2013 ;;		line 57 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  lcd             1   11[COMRAM] PTR const struct .
  2016 ;;		 -> lcd_1(6), 
  2017 ;;  command         1   12[COMRAM] unsigned char 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  ret             1   13[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      unsigned char 
  2022 ;; Registers used:
  2023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;Total ram usage:        3 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 2
  2036 ;; This function calls:
  2037 ;;		_gpio_pin_write_logic
  2038 ;;		_lcd_4bits_send_enable_signal
  2039 ;;		_lcd_send_4bits
  2040 ;; This function is called by:
  2041 ;;		_lcd_4bit_initialize
  2042 ;;		_lcd_4bit_set_cursor
  2043 ;;		_lcd_4bit_send_custom_char
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text14
  2048   001898                     __ptext14:
  2049                           	callstack 0
  2050   001898                     _lcd_4bit_send_command:
  2051                           	callstack 26
  2052   001898                     
  2053                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 59:     if (((void*)0) == lcd) {
  2054   001898  503B               	movf	lcd_4bit_send_command@lcd^0,w,c
  2055   00189A  A4D8               	btfss	status,2,c
  2056   00189C  EF52  F00C         	goto	u1151
  2057   0018A0  EF54  F00C         	goto	u1150
  2058   0018A4                     u1151:
  2059   0018A4  EF58  F00C         	goto	l2123
  2060   0018A8                     u1150:
  2061   0018A8                     
  2062                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 60:         ret = (STD_ReturnType)0x00;
  2063   0018A8  0E00               	movlw	0
  2064   0018AA  6E3D               	movwf	lcd_4bit_send_command@ret^0,c
  2065                           
  2066                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 61:     } else {
  2067   0018AC  EF78  F00C         	goto	l2125
  2068   0018B0                     l2123:
  2069                           
  2070                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 62:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  2071   0018B0  C03B  F030         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin_config
  2072   0018B4  0E00               	movlw	0
  2073   0018B6  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2074   0018B8  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  2075   0018BC  6E3D               	movwf	lcd_4bit_send_command@ret^0,c
  2076                           
  2077                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 63:         ret = lcd_send_4bits(lcd, command >> 4);
  2078   0018BE  C03B  F038         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2079   0018C2  383C               	swapf	lcd_4bit_send_command@command^0,w,c
  2080   0018C4  0B0F               	andlw	15
  2081   0018C6  6E39               	movwf	lcd_send_4bits@_command^0,c
  2082   0018C8  ECF0  F00A         	call	_lcd_send_4bits	;wreg free
  2083   0018CC  6E3D               	movwf	lcd_4bit_send_command@ret^0,c
  2084                           
  2085                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 64:         ret = lcd_4bits_send_enable_signal(lcd);
  2086   0018CE  C03B  F038         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  2087   0018D2  EC99  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  2088   0018D6  6E3D               	movwf	lcd_4bit_send_command@ret^0,c
  2089                           
  2090                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 65:         ret = lcd_send_4bits(lcd, command);
  2091   0018D8  C03B  F038         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2092   0018DC  C03C  F039         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_command
  2093   0018E0  ECF0  F00A         	call	_lcd_send_4bits	;wreg free
  2094   0018E4  6E3D               	movwf	lcd_4bit_send_command@ret^0,c
  2095                           
  2096                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 66:         ret = lcd_4bits_send_enable_signal(lcd);
  2097   0018E6  C03B  F038         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  2098   0018EA  EC99  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  2099   0018EE  6E3D               	movwf	lcd_4bit_send_command@ret^0,c
  2100   0018F0                     l2125:
  2101                           
  2102                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:     return ret;
  2103   0018F0  503D               	movf	lcd_4bit_send_command@ret^0,w,c
  2104   0018F2  0012               	return		;funcret
  2105   0018F4                     __end_of_lcd_4bit_send_command:
  2106                           	callstack 0
  2107                           
  2108 ;; *************** function _lcd_send_4bits *****************
  2109 ;; Defined at:
  2110 ;;		line 374 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  lcd             1    8[COMRAM] PTR const struct .
  2113 ;;		 -> lcd_1(6), 
  2114 ;;  _command        1    9[COMRAM] unsigned char 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  ret             1   10[COMRAM] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      unsigned char 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;Total ram usage:        3 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; Hardware stack levels required when called: 1
  2133 ;; This function calls:
  2134 ;;		_gpio_pin_write_logic
  2135 ;; This function is called by:
  2136 ;;		_lcd_4bit_send_command
  2137 ;;		_lcd_4bit_send_char_data
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text15
  2142   0015E0                     __ptext15:
  2143                           	callstack 0
  2144   0015E0                     _lcd_send_4bits:
  2145                           	callstack 26
  2146   0015E0                     
  2147                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 376:     if (((void*)0) == lcd) {
  2148   0015E0  5038               	movf	lcd_send_4bits@lcd^0,w,c
  2149   0015E2  A4D8               	btfss	status,2,c
  2150   0015E4  EFF6  F00A         	goto	u1101
  2151   0015E8  EFF8  F00A         	goto	u1100
  2152   0015EC                     u1101:
  2153   0015EC  EFFC  F00A         	goto	l2073
  2154   0015F0                     u1100:
  2155   0015F0                     
  2156                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 377:         ret = (STD_ReturnType)0x00;
  2157   0015F0  0E00               	movlw	0
  2158   0015F2  6E3A               	movwf	lcd_send_4bits@ret^0,c
  2159                           
  2160                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 378:     } else {
  2161   0015F4  EF25  F00B         	goto	l2075
  2162   0015F8                     l2073:
  2163                           
  2164                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 379:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[0]), (_command >> 0) & (uint8) 0x01);
  2165   0015F8  5038               	movf	lcd_send_4bits@lcd^0,w,c
  2166   0015FA  0F02               	addlw	2
  2167   0015FC  6E30               	movwf	gpio_pin_write_logic@pin_config^0,c
  2168   0015FE  5039               	movf	lcd_send_4bits@_command^0,w,c
  2169   001600  0B01               	andlw	1
  2170   001602  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2171   001604  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  2172   001608  6E3A               	movwf	lcd_send_4bits@ret^0,c
  2173                           
  2174                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 380:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[1]), (_command >> 1) & (uint8) 0x01);
  2175   00160A  5038               	movf	lcd_send_4bits@lcd^0,w,c
  2176   00160C  0F03               	addlw	3
  2177   00160E  6E30               	movwf	gpio_pin_write_logic@pin_config^0,c
  2178   001610  90D8               	bcf	status,0,c
  2179   001612  3039               	rrcf	lcd_send_4bits@_command^0,w,c
  2180   001614  0B01               	andlw	1
  2181   001616  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2182   001618  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  2183   00161C  6E3A               	movwf	lcd_send_4bits@ret^0,c
  2184                           
  2185                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 381:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[2]), (_command >> 2) & (uint8) 0x01);
  2186   00161E  5038               	movf	lcd_send_4bits@lcd^0,w,c
  2187   001620  0F04               	addlw	4
  2188   001622  6E30               	movwf	gpio_pin_write_logic@pin_config^0,c
  2189   001624  4039               	rrncf	lcd_send_4bits@_command^0,w,c
  2190   001626  42E8               	rrncf	wreg,f,c
  2191   001628  0B3F               	andlw	63
  2192   00162A  0B01               	andlw	1
  2193   00162C  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2194   00162E  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  2195   001632  6E3A               	movwf	lcd_send_4bits@ret^0,c
  2196                           
  2197                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 382:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[3]), (_command >> 3) & (uint8) 0x01);
  2198   001634  5038               	movf	lcd_send_4bits@lcd^0,w,c
  2199   001636  0F05               	addlw	5
  2200   001638  6E30               	movwf	gpio_pin_write_logic@pin_config^0,c
  2201   00163A  3839               	swapf	lcd_send_4bits@_command^0,w,c
  2202   00163C  46E8               	rlncf	wreg,f,c
  2203   00163E  0B1F               	andlw	31
  2204   001640  0B01               	andlw	1
  2205   001642  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2206   001644  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  2207   001648  6E3A               	movwf	lcd_send_4bits@ret^0,c
  2208   00164A                     l2075:
  2209                           
  2210                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 385:     return ret;
  2211   00164A  503A               	movf	lcd_send_4bits@ret^0,w,c
  2212   00164C  0012               	return		;funcret
  2213   00164E                     __end_of_lcd_send_4bits:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _lcd_4bits_send_enable_signal *****************
  2217 ;; Defined at:
  2218 ;;		line 389 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  lcd             1    8[COMRAM] PTR const struct .
  2221 ;;		 -> lcd_1(6), 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  ret             1    9[COMRAM] unsigned char 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      unsigned char 
  2226 ;; Registers used:
  2227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2233 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;Total ram usage:        2 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 1
  2240 ;; This function calls:
  2241 ;;		_gpio_pin_write_logic
  2242 ;; This function is called by:
  2243 ;;		_lcd_4bit_send_command
  2244 ;;		_lcd_4bit_send_char_data
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text16
  2249   001932                     __ptext16:
  2250                           	callstack 0
  2251   001932                     _lcd_4bits_send_enable_signal:
  2252                           	callstack 26
  2253   001932                     
  2254                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 391:     if (((void*)0) == lcd) {
  2255   001932  5038               	movf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2256   001934  A4D8               	btfss	status,2,c
  2257   001936  EF9F  F00C         	goto	u1111
  2258   00193A  EFA1  F00C         	goto	u1110
  2259   00193E                     u1111:
  2260   00193E  EFA5  F00C         	goto	l2083
  2261   001942                     u1110:
  2262   001942                     
  2263                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 392:         ret = (STD_ReturnType)0x00;
  2264   001942  0E00               	movlw	0
  2265   001944  6E39               	movwf	lcd_4bits_send_enable_signal@ret^0,c
  2266                           
  2267                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 393:     } else {
  2268   001946  EFB6  F00C         	goto	l2089
  2269   00194A                     l2083:
  2270                           
  2271                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 394:         gpio_pin_write_logic(&(lcd->lcd_en), GPIO
      +                          _HIGH);
  2272   00194A  2838               	incf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2273   00194C  6E30               	movwf	gpio_pin_write_logic@pin_config^0,c
  2274   00194E  0E01               	movlw	1
  2275   001950  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2276   001952  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  2277   001956                     
  2278                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 395:         _delay((unsigned long)((5)*(8000000UL/400
      +                          0000.0)));
  2279   001956  0E03               	movlw	3
  2280   001958                     u1817:
  2281   001958  2EE8               	decfsz	wreg,f,c
  2282   00195A  D7FE               	bra	u1817
  2283   00195C  0000               	nop	
  2284   00195E                     
  2285                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 396:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOW);
  2286   00195E  2838               	incf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2287   001960  6E30               	movwf	gpio_pin_write_logic@pin_config^0,c
  2288   001962  0E00               	movlw	0
  2289   001964  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2290   001966  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  2291   00196A  6E39               	movwf	lcd_4bits_send_enable_signal@ret^0,c
  2292   00196C                     l2089:
  2293                           
  2294                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 398:     return ret;
  2295   00196C  5039               	movf	lcd_4bits_send_enable_signal@ret^0,w,c
  2296   00196E  0012               	return		;funcret
  2297   001970                     __end_of_lcd_4bits_send_enable_signal:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _gpio_pin_initialization *****************
  2301 ;; Defined at:
  2302 ;;		line 140 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  pin_config      1    8[COMRAM] PTR const struct .
  2305 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  2306 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  ret             1   10[COMRAM] unsigned char 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      unsigned char 
  2311 ;; Registers used:
  2312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2318 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;Total ram usage:        3 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; Hardware stack levels required when called: 1
  2325 ;; This function calls:
  2326 ;;		_gpio_pin_direction_initialization
  2327 ;;		_gpio_pin_write_logic
  2328 ;; This function is called by:
  2329 ;;		_lcd_4bit_initialize
  2330 ;;		_lcd_8bit_initialize
  2331 ;;		_seven_segment_initialize
  2332 ;;		_dc_motor_initialize
  2333 ;;		_keypad_initialize
  2334 ;;		_led_initialize
  2335 ;;		_relay_initialize
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text17
  2340   0017DE                     __ptext17:
  2341                           	callstack 0
  2342   0017DE                     _gpio_pin_initialization:
  2343                           	callstack 26
  2344   0017DE                     
  2345                           ;MCAL_Layer/GPIO/hal_gpio.c: 141:     STD_ReturnType ret = (STD_ReturnType)0x01;
  2346   0017DE  0E01               	movlw	1
  2347   0017E0  6E3A               	movwf	gpio_pin_initialization@ret^0,c
  2348                           
  2349                           ;MCAL_Layer/GPIO/hal_gpio.c: 142:     if ((((void*)0) == pin_config) || (pin_config->pin
      +                           > 8 - 1)) {
  2350   0017E2  5038               	movf	gpio_pin_initialization@pin_config^0,w,c
  2351   0017E4  B4D8               	btfsc	status,2,c
  2352   0017E6  EFF7  F00B         	goto	u1131
  2353   0017EA  EFF9  F00B         	goto	u1130
  2354   0017EE                     u1131:
  2355   0017EE  EF09  F00C         	goto	l2111
  2356   0017F2                     u1130:
  2357   0017F2  5038               	movf	gpio_pin_initialization@pin_config^0,w,c
  2358   0017F4  6ED9               	movwf	fsr2l,c
  2359   0017F6  6ADA               	clrf	fsr2h,c
  2360   0017F8  30DF               	rrcf	223,w,c
  2361   0017FA  32E8               	rrcf	wreg,f,c
  2362   0017FC  32E8               	rrcf	wreg,f,c
  2363   0017FE  0B07               	andlw	7
  2364   001800  6E39               	movwf	??_gpio_pin_initialization^0,c
  2365   001802  0E07               	movlw	7
  2366   001804  6439               	cpfsgt	??_gpio_pin_initialization^0,c
  2367   001806  EF07  F00C         	goto	u1141
  2368   00180A  EF09  F00C         	goto	u1140
  2369   00180E                     u1141:
  2370   00180E  EF0D  F00C         	goto	l2113
  2371   001812                     u1140:
  2372   001812                     l2111:
  2373                           
  2374                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:         ret = (STD_ReturnType)0x00;
  2375   001812  0E00               	movlw	0
  2376   001814  6E3A               	movwf	gpio_pin_initialization@ret^0,c
  2377                           
  2378                           ;MCAL_Layer/GPIO/hal_gpio.c: 144:     } else {
  2379   001816  EF1C  F00C         	goto	l2115
  2380   00181A                     l2113:
  2381                           
  2382                           ;MCAL_Layer/GPIO/hal_gpio.c: 145:         gpio_pin_direction_initialization(pin_config);
  2383   00181A  C038  F030         	movff	gpio_pin_initialization@pin_config,gpio_pin_direction_initialization@pin_config
  2384   00181E  EC23  F008         	call	_gpio_pin_direction_initialization	;wreg free
  2385                           
  2386                           ;MCAL_Layer/GPIO/hal_gpio.c: 146:         gpio_pin_write_logic(pin_config, pin_config->l
      +                          ogic);
  2387   001822  C038  F030         	movff	gpio_pin_initialization@pin_config,gpio_pin_write_logic@pin_config
  2388   001826  5038               	movf	gpio_pin_initialization@pin_config^0,w,c
  2389   001828  6ED9               	movwf	fsr2l,c
  2390   00182A  6ADA               	clrf	fsr2h,c
  2391   00182C  0E00               	movlw	0
  2392   00182E  BEDF               	btfsc	indf2,7,c
  2393   001830  0E01               	movlw	1
  2394   001832  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2395   001834  ECAC  F008         	call	_gpio_pin_write_logic	;wreg free
  2396   001838                     l2115:
  2397                           
  2398                           ;MCAL_Layer/GPIO/hal_gpio.c: 148:     return ret;
  2399   001838  503A               	movf	gpio_pin_initialization@ret^0,w,c
  2400   00183A  0012               	return		;funcret
  2401   00183C                     __end_of_gpio_pin_initialization:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _gpio_pin_write_logic *****************
  2405 ;; Defined at:
  2406 ;;		line 73 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  pin_config      1    0[COMRAM] PTR const struct .
  2409 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  2410 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  2411 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  2412 ;;  logic           1    1[COMRAM] enum E3230
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  ret             1    7[COMRAM] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      unsigned char 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;Total ram usage:        8 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_gpio_pin_initialization
  2434 ;;		_lcd_4bit_send_command
  2435 ;;		_lcd_4bit_send_char_data
  2436 ;;		_lcd_8bit_send_command
  2437 ;;		_lcd_8bit_send_char_data
  2438 ;;		_lcd_send_4bits
  2439 ;;		_lcd_4bits_send_enable_signal
  2440 ;;		_lcd_8bits_send_enable_signal
  2441 ;;		_seven_segment_write_number
  2442 ;;		_dc_motor_move_right
  2443 ;;		_dc_motor_move_left
  2444 ;;		_dc_motor_stop
  2445 ;;		_keypad_get_value
  2446 ;;		_led_turn_on
  2447 ;;		_led_turn_off
  2448 ;;		_relay_turn_on
  2449 ;;		_relay_turn_off
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text18
  2454   001158                     __ptext18:
  2455                           	callstack 0
  2456   001158                     _gpio_pin_write_logic:
  2457                           	callstack 26
  2458   001158                     
  2459                           ;MCAL_Layer/GPIO/hal_gpio.c: 74:     STD_ReturnType ret = (STD_ReturnType)0x01;
  2460   001158  0E01               	movlw	1
  2461   00115A  6E37               	movwf	gpio_pin_write_logic@ret^0,c
  2462                           
  2463                           ;MCAL_Layer/GPIO/hal_gpio.c: 75:     if ((((void*)0) == pin_config) || (pin_config->pin 
      +                          > 8 - 1)) {
  2464   00115C  5030               	movf	gpio_pin_write_logic@pin_config^0,w,c
  2465   00115E  B4D8               	btfsc	status,2,c
  2466   001160  EFB4  F008         	goto	u1011
  2467   001164  EFB6  F008         	goto	u1010
  2468   001168                     u1011:
  2469   001168  EFC6  F008         	goto	l2033
  2470   00116C                     u1010:
  2471   00116C  5030               	movf	gpio_pin_write_logic@pin_config^0,w,c
  2472   00116E  6ED9               	movwf	fsr2l,c
  2473   001170  6ADA               	clrf	fsr2h,c
  2474   001172  30DF               	rrcf	223,w,c
  2475   001174  32E8               	rrcf	wreg,f,c
  2476   001176  32E8               	rrcf	wreg,f,c
  2477   001178  0B07               	andlw	7
  2478   00117A  6E32               	movwf	??_gpio_pin_write_logic^0,c
  2479   00117C  0E07               	movlw	7
  2480   00117E  6432               	cpfsgt	??_gpio_pin_write_logic^0,c
  2481   001180  EFC4  F008         	goto	u1021
  2482   001184  EFC6  F008         	goto	u1020
  2483   001188                     u1021:
  2484   001188  EF1D  F009         	goto	l2041
  2485   00118C                     u1020:
  2486   00118C                     l2033:
  2487                           
  2488                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:         ret = (STD_ReturnType)0x00;
  2489   00118C  0E00               	movlw	0
  2490   00118E  6E37               	movwf	gpio_pin_write_logic@ret^0,c
  2491                           
  2492                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     } else {
  2493   001190  EF32  F009         	goto	l2043
  2494   001194                     l2035:
  2495                           
  2496                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 (*lat_registers[pin_config->port] &= ~(
      +                          1 << pin_config->pin));
  2497   001194  5030               	movf	gpio_pin_write_logic@pin_config^0,w,c
  2498   001196  6ED9               	movwf	fsr2l,c
  2499   001198  6ADA               	clrf	fsr2h,c
  2500   00119A  30DF               	rrcf	223,w,c
  2501   00119C  32E8               	rrcf	wreg,f,c
  2502   00119E  32E8               	rrcf	wreg,f,c
  2503   0011A0  0B07               	andlw	7
  2504   0011A2  6E32               	movwf	??_gpio_pin_write_logic^0,c
  2505   0011A4  0E01               	movlw	1
  2506   0011A6  6E33               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2507   0011A8  2A32               	incf	??_gpio_pin_write_logic^0,f,c
  2508   0011AA  EFD9  F008         	goto	u1034
  2509   0011AE                     u1035:
  2510   0011AE  90D8               	bcf	status,0,c
  2511   0011B0  3633               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2512   0011B2                     u1034:
  2513   0011B2  2E32               	decfsz	??_gpio_pin_write_logic^0,f,c
  2514   0011B4  EFD7  F008         	goto	u1035
  2515   0011B8  5033               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2516   0011BA  0AFF               	xorlw	255
  2517   0011BC  6E34               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2518   0011BE  5030               	movf	gpio_pin_write_logic@pin_config^0,w,c
  2519   0011C0  6ED9               	movwf	fsr2l,c
  2520   0011C2  6ADA               	clrf	fsr2h,c
  2521   0011C4  50DF               	movf	223,w,c
  2522   0011C6  0B07               	andlw	7
  2523   0011C8  0D02               	mullw	2
  2524   0011CA  50F3               	movf	243,w,c
  2525   0011CC  0F0B               	addlw	low _lat_registers
  2526   0011CE  6ED9               	movwf	fsr2l,c
  2527   0011D0  6ADA               	clrf	fsr2h,c
  2528   0011D2  CFDE F035          	movff	postinc2,??_gpio_pin_write_logic+3
  2529   0011D6  CFDD F036          	movff	postdec2,??_gpio_pin_write_logic+4
  2530   0011DA  C035  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2531   0011DE  C036  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2532   0011E2  5034               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2533   0011E4  16DF               	andwf	indf2,f,c
  2534                           
  2535                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:                 break;
  2536   0011E6  EF32  F009         	goto	l2043
  2537   0011EA                     l2037:
  2538                           
  2539                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 (*lat_registers[pin_config->port] |= (1
      +                           << pin_config->pin));
  2540   0011EA  5030               	movf	gpio_pin_write_logic@pin_config^0,w,c
  2541   0011EC  6ED9               	movwf	fsr2l,c
  2542   0011EE  6ADA               	clrf	fsr2h,c
  2543   0011F0  30DF               	rrcf	223,w,c
  2544   0011F2  32E8               	rrcf	wreg,f,c
  2545   0011F4  32E8               	rrcf	wreg,f,c
  2546   0011F6  0B07               	andlw	7
  2547   0011F8  6E32               	movwf	??_gpio_pin_write_logic^0,c
  2548   0011FA  0E01               	movlw	1
  2549   0011FC  6E33               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2550   0011FE  2A32               	incf	??_gpio_pin_write_logic^0,f,c
  2551   001200  EF04  F009         	goto	u1044
  2552   001204                     u1045:
  2553   001204  90D8               	bcf	status,0,c
  2554   001206  3633               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2555   001208                     u1044:
  2556   001208  2E32               	decfsz	??_gpio_pin_write_logic^0,f,c
  2557   00120A  EF02  F009         	goto	u1045
  2558   00120E  5030               	movf	gpio_pin_write_logic@pin_config^0,w,c
  2559   001210  6ED9               	movwf	fsr2l,c
  2560   001212  6ADA               	clrf	fsr2h,c
  2561   001214  50DF               	movf	223,w,c
  2562   001216  0B07               	andlw	7
  2563   001218  0D02               	mullw	2
  2564   00121A  50F3               	movf	243,w,c
  2565   00121C  0F0B               	addlw	low _lat_registers
  2566   00121E  6ED9               	movwf	fsr2l,c
  2567   001220  6ADA               	clrf	fsr2h,c
  2568   001222  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+2
  2569   001226  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+3
  2570   00122A  C034  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2571   00122E  C035  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2572   001232  5033               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2573   001234  12DF               	iorwf	indf2,f,c
  2574                           
  2575                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:                 break;
  2576   001236  EF32  F009         	goto	l2043
  2577   00123A                     l2041:
  2578   00123A  5031               	movf	gpio_pin_write_logic@logic^0,w,c
  2579   00123C  6E32               	movwf	??_gpio_pin_write_logic^0,c
  2580   00123E  6A33               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2581                           
  2582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2583                           ; Switch size 1, requested type "simple"
  2584                           ; Number of cases is 1, Range of values is 0 to 0
  2585                           ; switch strategies available:
  2586                           ; Name         Instructions Cycles
  2587                           ; simple_byte            4     3 (average)
  2588                           ;	Chosen strategy is simple_byte
  2589   001240  5033               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2590   001242  0A00               	xorlw	0	; case 0
  2591   001244  B4D8               	btfsc	status,2,c
  2592   001246  EF27  F009         	goto	l2721
  2593   00124A  EFC6  F008         	goto	l2033
  2594   00124E                     l2721:
  2595                           
  2596                           ; Switch size 1, requested type "simple"
  2597                           ; Number of cases is 2, Range of values is 0 to 1
  2598                           ; switch strategies available:
  2599                           ; Name         Instructions Cycles
  2600                           ; simple_byte            7     4 (average)
  2601                           ;	Chosen strategy is simple_byte
  2602   00124E  5032               	movf	??_gpio_pin_write_logic^0,w,c
  2603   001250  0A00               	xorlw	0	; case 0
  2604   001252  B4D8               	btfsc	status,2,c
  2605   001254  EFCA  F008         	goto	l2035
  2606   001258  0A01               	xorlw	1	; case 1
  2607   00125A  B4D8               	btfsc	status,2,c
  2608   00125C  EFF5  F008         	goto	l2037
  2609   001260  EFC6  F008         	goto	l2033
  2610   001264                     l2043:
  2611                           
  2612                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:     return ret;
  2613   001264  5037               	movf	gpio_pin_write_logic@ret^0,w,c
  2614   001266  0012               	return		;funcret
  2615   001268                     __end_of_gpio_pin_write_logic:
  2616                           	callstack 0
  2617                           
  2618 ;; *************** function _gpio_pin_direction_initialization *****************
  2619 ;; Defined at:
  2620 ;;		line 25 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  pin_config      1    0[COMRAM] PTR const struct .
  2623 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  2624 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  ret             1    6[COMRAM] unsigned char 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      unsigned char 
  2629 ;; Registers used:
  2630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2636 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2640 ;;Total ram usage:        7 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_gpio_pin_initialization
  2646 ;;		_button_initialize
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text19
  2651   001046                     __ptext19:
  2652                           	callstack 0
  2653   001046                     _gpio_pin_direction_initialization:
  2654                           	callstack 26
  2655   001046                     
  2656                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     STD_ReturnType ret = (STD_ReturnType)0x01;
  2657   001046  0E01               	movlw	1
  2658   001048  6E36               	movwf	gpio_pin_direction_initialization@ret^0,c
  2659                           
  2660                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if ((((void*)0) == pin_config) || (pin_config->pin 
      +                          > 8 - 1)) {
  2661   00104A  5030               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  2662   00104C  B4D8               	btfsc	status,2,c
  2663   00104E  EF2B  F008         	goto	u1051
  2664   001052  EF2D  F008         	goto	u1050
  2665   001056                     u1051:
  2666   001056  EF3D  F008         	goto	l2055
  2667   00105A                     u1050:
  2668   00105A  5030               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  2669   00105C  6ED9               	movwf	fsr2l,c
  2670   00105E  6ADA               	clrf	fsr2h,c
  2671   001060  30DF               	rrcf	223,w,c
  2672   001062  32E8               	rrcf	wreg,f,c
  2673   001064  32E8               	rrcf	wreg,f,c
  2674   001066  0B07               	andlw	7
  2675   001068  6E31               	movwf	??_gpio_pin_direction_initialization^0,c
  2676   00106A  0E07               	movlw	7
  2677   00106C  6431               	cpfsgt	??_gpio_pin_direction_initialization^0,c
  2678   00106E  EF3B  F008         	goto	u1061
  2679   001072  EF3D  F008         	goto	u1060
  2680   001076                     u1061:
  2681   001076  EF94  F008         	goto	l2063
  2682   00107A                     u1060:
  2683   00107A                     l2055:
  2684                           
  2685                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         ret = (STD_ReturnType)0x00;
  2686   00107A  0E00               	movlw	0
  2687   00107C  6E36               	movwf	gpio_pin_direction_initialization@ret^0,c
  2688                           
  2689                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     } else {
  2690   00107E  EFAA  F008         	goto	l2065
  2691   001082                     l2057:
  2692                           
  2693                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 (*tris_registers[pin_config->port] &= ~
      +                          (1 << pin_config->pin));
  2694   001082  5030               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  2695   001084  6ED9               	movwf	fsr2l,c
  2696   001086  6ADA               	clrf	fsr2h,c
  2697   001088  30DF               	rrcf	223,w,c
  2698   00108A  32E8               	rrcf	wreg,f,c
  2699   00108C  32E8               	rrcf	wreg,f,c
  2700   00108E  0B07               	andlw	7
  2701   001090  6E31               	movwf	??_gpio_pin_direction_initialization^0,c
  2702   001092  0E01               	movlw	1
  2703   001094  6E32               	movwf	(??_gpio_pin_direction_initialization+1)^0,c
  2704   001096  2A31               	incf	??_gpio_pin_direction_initialization^0,f,c
  2705   001098  EF50  F008         	goto	u1074
  2706   00109C                     u1075:
  2707   00109C  90D8               	bcf	status,0,c
  2708   00109E  3632               	rlcf	(??_gpio_pin_direction_initialization+1)^0,f,c
  2709   0010A0                     u1074:
  2710   0010A0  2E31               	decfsz	??_gpio_pin_direction_initialization^0,f,c
  2711   0010A2  EF4E  F008         	goto	u1075
  2712   0010A6  5032               	movf	(??_gpio_pin_direction_initialization+1)^0,w,c
  2713   0010A8  0AFF               	xorlw	255
  2714   0010AA  6E33               	movwf	(??_gpio_pin_direction_initialization+2)^0,c
  2715   0010AC  5030               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  2716   0010AE  6ED9               	movwf	fsr2l,c
  2717   0010B0  6ADA               	clrf	fsr2h,c
  2718   0010B2  50DF               	movf	223,w,c
  2719   0010B4  0B07               	andlw	7
  2720   0010B6  0D02               	mullw	2
  2721   0010B8  50F3               	movf	243,w,c
  2722   0010BA  0F15               	addlw	low _tris_registers
  2723   0010BC  6ED9               	movwf	fsr2l,c
  2724   0010BE  6ADA               	clrf	fsr2h,c
  2725   0010C0  CFDE F034          	movff	postinc2,??_gpio_pin_direction_initialization+3
  2726   0010C4  CFDD F035          	movff	postdec2,??_gpio_pin_direction_initialization+4
  2727   0010C8  C034  FFD9         	movff	??_gpio_pin_direction_initialization+3,fsr2l
  2728   0010CC  C035  FFDA         	movff	??_gpio_pin_direction_initialization+4,fsr2h
  2729   0010D0  5033               	movf	(??_gpio_pin_direction_initialization+2)^0,w,c
  2730   0010D2  16DF               	andwf	indf2,f,c
  2731                           
  2732                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 break;
  2733   0010D4  EFAA  F008         	goto	l2065
  2734   0010D8                     l2059:
  2735                           
  2736                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:                 (*tris_registers[pin_config->port] |= (
      +                          1 << pin_config->pin));
  2737   0010D8  5030               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  2738   0010DA  6ED9               	movwf	fsr2l,c
  2739   0010DC  6ADA               	clrf	fsr2h,c
  2740   0010DE  30DF               	rrcf	223,w,c
  2741   0010E0  32E8               	rrcf	wreg,f,c
  2742   0010E2  32E8               	rrcf	wreg,f,c
  2743   0010E4  0B07               	andlw	7
  2744   0010E6  6E31               	movwf	??_gpio_pin_direction_initialization^0,c
  2745   0010E8  0E01               	movlw	1
  2746   0010EA  6E32               	movwf	(??_gpio_pin_direction_initialization+1)^0,c
  2747   0010EC  2A31               	incf	??_gpio_pin_direction_initialization^0,f,c
  2748   0010EE  EF7B  F008         	goto	u1084
  2749   0010F2                     u1085:
  2750   0010F2  90D8               	bcf	status,0,c
  2751   0010F4  3632               	rlcf	(??_gpio_pin_direction_initialization+1)^0,f,c
  2752   0010F6                     u1084:
  2753   0010F6  2E31               	decfsz	??_gpio_pin_direction_initialization^0,f,c
  2754   0010F8  EF79  F008         	goto	u1085
  2755   0010FC  5030               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  2756   0010FE  6ED9               	movwf	fsr2l,c
  2757   001100  6ADA               	clrf	fsr2h,c
  2758   001102  50DF               	movf	223,w,c
  2759   001104  0B07               	andlw	7
  2760   001106  0D02               	mullw	2
  2761   001108  50F3               	movf	243,w,c
  2762   00110A  0F15               	addlw	low _tris_registers
  2763   00110C  6ED9               	movwf	fsr2l,c
  2764   00110E  6ADA               	clrf	fsr2h,c
  2765   001110  CFDE F033          	movff	postinc2,??_gpio_pin_direction_initialization+2
  2766   001114  CFDD F034          	movff	postdec2,??_gpio_pin_direction_initialization+3
  2767   001118  C033  FFD9         	movff	??_gpio_pin_direction_initialization+2,fsr2l
  2768   00111C  C034  FFDA         	movff	??_gpio_pin_direction_initialization+3,fsr2h
  2769   001120  5032               	movf	(??_gpio_pin_direction_initialization+1)^0,w,c
  2770   001122  12DF               	iorwf	indf2,f,c
  2771                           
  2772                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 break;
  2773   001124  EFAA  F008         	goto	l2065
  2774   001128                     l2063:
  2775   001128  5030               	movf	gpio_pin_direction_initialization@pin_config^0,w,c
  2776   00112A  6ED9               	movwf	fsr2l,c
  2777   00112C  6ADA               	clrf	fsr2h,c
  2778   00112E  BCDF               	btfsc	indf2,6,c
  2779   001130  EF9C  F008         	goto	u1091
  2780   001134  EF9F  F008         	goto	u1090
  2781   001138                     u1091:
  2782   001138  0E01               	movlw	1
  2783   00113A  EFA0  F008         	goto	u1096
  2784   00113E                     u1090:
  2785   00113E  0E00               	movlw	0
  2786   001140                     u1096:
  2787                           
  2788                           ; Switch size 1, requested type "simple"
  2789                           ; Number of cases is 2, Range of values is 0 to 1
  2790                           ; switch strategies available:
  2791                           ; Name         Instructions Cycles
  2792                           ; simple_byte            7     4 (average)
  2793                           ;	Chosen strategy is simple_byte
  2794   001140  0A00               	xorlw	0	; case 0
  2795   001142  B4D8               	btfsc	status,2,c
  2796   001144  EF41  F008         	goto	l2057
  2797   001148  0A01               	xorlw	1	; case 1
  2798   00114A  B4D8               	btfsc	status,2,c
  2799   00114C  EF6C  F008         	goto	l2059
  2800   001150  EF3D  F008         	goto	l2055
  2801   001154                     l2065:
  2802                           
  2803                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:     return ret;
  2804   001154  5036               	movf	gpio_pin_direction_initialization@ret^0,w,c
  2805   001156  0012               	return		;funcret
  2806   001158                     __end_of_gpio_pin_direction_initialization:
  2807                           	callstack 0
  2808                           
  2809                           	psect	rparam
  2810   000000                     
  2811                           	psect	config
  2812                           
  2813                           ; Padding undefined space
  2814   300000                     	org	3145728
  2815   300000  FF                 	db	255
  2816                           
  2817                           ;Config register CONFIG1H @ 0x300001
  2818                           ;	Oscillator Selection bits
  2819                           ;	FOSC = HS, HS oscillator
  2820                           ;	Fail-Safe Clock Monitor Enable bit
  2821                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2822                           ;	Internal/External Oscillator Switchover bit
  2823                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2824   300001                     	org	3145729
  2825   300001  02                 	db	2
  2826                           
  2827                           ;Config register CONFIG2L @ 0x300002
  2828                           ;	Power-up Timer Enable bit
  2829                           ;	PWRTEN = OFF, PWRT disabled
  2830                           ;	Brown-out Reset Enable bits
  2831                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2832                           ;	Brown Out Reset Voltage bits
  2833                           ;	BORV = 18, VBOR set to 1.8 V nominal
  2834   300002                     	org	3145730
  2835   300002  1F                 	db	31
  2836                           
  2837                           ;Config register CONFIG2H @ 0x300003
  2838                           ;	Watchdog Timer Enable bit
  2839                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2840                           ;	Watchdog Timer Postscale Select bits
  2841                           ;	WDTPS = 32768, 1:32768
  2842   300003                     	org	3145731
  2843   300003  1E                 	db	30
  2844                           
  2845                           ; Padding undefined space
  2846   300004                     	org	3145732
  2847   300004  FF                 	db	255
  2848                           
  2849                           ;Config register CONFIG3H @ 0x300005
  2850                           ;	CCP2 MUX bit
  2851                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2852                           ;	PORTB A/D Enable bit
  2853                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2854                           ;	Low-Power Timer1 Oscillator Enable bit
  2855                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2856                           ;	HFINTOSC Fast Start-up
  2857                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  2858                           ;	MCLR Pin Enable bit
  2859                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2860   300005                     	org	3145733
  2861   300005  81                 	db	129
  2862                           
  2863                           ;Config register CONFIG4L @ 0x300006
  2864                           ;	Stack Full/Underflow Reset Enable bit
  2865                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2866                           ;	Single-Supply ICSP Enable bit
  2867                           ;	LVP = OFF, Single-Supply ICSP disabled
  2868                           ;	Extended Instruction Set Enable bit
  2869                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2870                           ;	Background Debugger Enable bit
  2871                           ;	DEBUG = 0x1, unprogrammed default
  2872   300006                     	org	3145734
  2873   300006  81                 	db	129
  2874                           
  2875                           ; Padding undefined space
  2876   300007                     	org	3145735
  2877   300007  FF                 	db	255
  2878                           
  2879                           ;Config register CONFIG5L @ 0x300008
  2880                           ;	Code Protection Block 0
  2881                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2882                           ;	Code Protection Block 1
  2883                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2884                           ;	Code Protection Block 2
  2885                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2886                           ;	Code Protection Block 3
  2887                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2888   300008                     	org	3145736
  2889   300008  0F                 	db	15
  2890                           
  2891                           ;Config register CONFIG5H @ 0x300009
  2892                           ;	Boot Block Code Protection bit
  2893                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2894                           ;	Data EEPROM Code Protection bit
  2895                           ;	CPD = OFF, Data EEPROM not code-protected
  2896   300009                     	org	3145737
  2897   300009  C0                 	db	192
  2898                           
  2899                           ;Config register CONFIG6L @ 0x30000A
  2900                           ;	Write Protection Block 0
  2901                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2902                           ;	Write Protection Block 1
  2903                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2904                           ;	Write Protection Block 2
  2905                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2906                           ;	Write Protection Block 3
  2907                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  2908   30000A                     	org	3145738
  2909   30000A  0F                 	db	15
  2910                           
  2911                           ;Config register CONFIG6H @ 0x30000B
  2912                           ;	Configuration Register Write Protection bit
  2913                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2914                           ;	Boot Block Write Protection bit
  2915                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2916                           ;	Data EEPROM Write Protection bit
  2917                           ;	WRTD = OFF, Data EEPROM not write-protected
  2918   30000B                     	org	3145739
  2919   30000B  E0                 	db	224
  2920                           
  2921                           ;Config register CONFIG7L @ 0x30000C
  2922                           ;	Table Read Protection Block 0
  2923                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2924                           ;	Table Read Protection Block 1
  2925                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2926                           ;	Table Read Protection Block 2
  2927                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2928                           ;	Table Read Protection Block 3
  2929                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2930   30000C                     	org	3145740
  2931   30000C  0F                 	db	15
  2932                           
  2933                           ;Config register CONFIG7H @ 0x30000D
  2934                           ;	Boot Block Table Read Protection bit
  2935                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2936   30000D                     	org	3145741
  2937   30000D  40                 	db	64
  2938                           tosu	equ	0xFFF
  2939                           tosh	equ	0xFFE
  2940                           tosl	equ	0xFFD
  2941                           stkptr	equ	0xFFC
  2942                           pclatu	equ	0xFFB
  2943                           pclath	equ	0xFFA
  2944                           pcl	equ	0xFF9
  2945                           tblptru	equ	0xFF8
  2946                           tblptrh	equ	0xFF7
  2947                           tblptrl	equ	0xFF6
  2948                           tablat	equ	0xFF5
  2949                           prodh	equ	0xFF4
  2950                           prodl	equ	0xFF3
  2951                           indf0	equ	0xFEF
  2952                           postinc0	equ	0xFEE
  2953                           postdec0	equ	0xFED
  2954                           preinc0	equ	0xFEC
  2955                           plusw0	equ	0xFEB
  2956                           fsr0h	equ	0xFEA
  2957                           fsr0l	equ	0xFE9
  2958                           wreg	equ	0xFE8
  2959                           indf1	equ	0xFE7
  2960                           postinc1	equ	0xFE6
  2961                           postdec1	equ	0xFE5
  2962                           preinc1	equ	0xFE4
  2963                           plusw1	equ	0xFE3
  2964                           fsr1h	equ	0xFE2
  2965                           fsr1l	equ	0xFE1
  2966                           bsr	equ	0xFE0
  2967                           indf2	equ	0xFDF
  2968                           postinc2	equ	0xFDE
  2969                           postdec2	equ	0xFDD
  2970                           preinc2	equ	0xFDC
  2971                           plusw2	equ	0xFDB
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8

Data Sizes:
    Strings     51
    Constant    16
    Data        47
    BSS         11
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      86
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialization@pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialization@pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_3(CODE[10]), STR_4(CODE[13]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bits_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlll[1]), PORTB(BITBIGSFRllh[1]), PORTC(BITBIGSFRllh[1]), PORTD(BITBIGSFRllh[1]), 
		 -> PORTE(BITBIGSFRllh[1]), 

    S1288$buffer	PTR unsigned char  size(2) Largest target is 0

    S1288$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_string_pos
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bits_send_enable_signal
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _ecu_layer_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bits_send_enable_signal
    _lcd_8bits_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bits_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialization->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  140508
                                             25 COMRAM     2     2      0
             _application_initialize
        _lcd_4bit_send_char_data_pos
           _lcd_4bit_send_string_pos
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             5     1      4   24036
                                             20 COMRAM     5     1      4
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  4     1      3   12690
                                             16 COMRAM     4     1      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              6     4      2   10861
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             5     1      4   36352
                                             18 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          5     1      4   36025
                                             18 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  4     1      3   18544
                                             14 COMRAM     4     1      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2   16715
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   44089
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   44089
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  5     4      1   19116
                                             16 COMRAM     5     4      1
            _gpio_pin_initialization
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12077
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bits_send_enable_signal                         2     1      1    5134
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  5     4      1   24970
                                             14 COMRAM     5     4      1
            _gpio_pin_initialization
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   17931
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    5725
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         2     1      1    5286
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialization                              3     2      1    6572
                                              8 COMRAM     3     2      1
  _gpio_pin_direction_initialization
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialization                    7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialization
           _gpio_pin_direction_initialization
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bits_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialization
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bits_send_enable_signal
             _gpio_pin_write_logic
   _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
     _lcd_4bit_set_cursor
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      56       1       90.5%
BITBIGSFRlll        20      0       0      39        0.0%
BITBIGSFRllh         4      0       0      38        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      56      40        0.0%
DATA                 0      0      56       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Sep 01 17:44:11 2024

                            ?_lcd_send_4bits 0038                                          l212 1156  
                                        l231 1266                                          l314 1A28  
                                        l252 183A                                          l164 1A22  
                                        l404 1568                                          l350 18F2  
                                        l360 19AA                                          l345 1456  
                                        l425 16B4                                          l355 1896  
                                        l452 164C                                          l462 1930  
                                        l390 135E                                          l471 177C  
                                        l480 17DC                                          l376 171C  
                                        l457 196E                                          l397 15DE  
       __end_of_lcd_4bits_send_enable_signal 1970                 _lcd_4bits_send_enable_signal 1932  
                        led_initialize@F3310 0055                    ?_lcd_8bit_send_string_pos 0044  
                                        wreg 0FE8                        relay_initialize@F3304 0051  
                __end_of_lcd_8bit_set_cursor 177E                                         l2101 1920  
                                       l2031 116C                                         l2111 1812  
                                       l2103 192E                                         l2041 123A  
                                       l2033 118C                                         l2113 181A  
                                       l2121 18A8                                         l2201 1284  
                                       l2051 1046                                         l2035 1194  
                                       l2043 1264                                         l2115 1838  
                                       l2107 17DE                                         l2123 18B0  
                                       l2131 157E                                         l2211 12A8  
                                       l2203 1298                                         l2053 105A  
                                       l2037 11EA                                         l2029 1158  
                                       l2109 17F2                                         l2125 18F0  
                                       l2141 1596                                         l2133 1586  
                                       l2221 12EE                                         l2213 12AA  
                                       l2301 1732                                         l2063 1128  
                                       l2055 107A                                         l2071 15F0  
                                       l2119 1898                                         l2143 15C0  
                                       l2135 1592                                         l2231 1336  
                                       l2223 1306                                         l2215 12BA  
                                       l2311 1764                                         l2303 173A  
                                       l2057 1082                                         l2065 1154  
                                       l2081 1942                                         l2073 15F8  
                                       l2153 1360                                         l2145 15C2  
                                       l2129 156A                                         l2233 1342  
                                       l2225 1312                                         l2217 12C8  
                                       l2209 129C                                         l2241 1A12  
                                       l2321 16C6                                         l2305 1740  
                                       l2313 177A                                         l2059 10D8  
                                       l2083 194A                                         l2075 164A  
                                       l2171 13B2                                         l2155 1374  
                                       l2147 15D2                                         l2235 134E  
                                       l2227 131E                                         l2219 12D4  
                                       l2243 1A12                                         l2251 1854  
                                       l2331 171A                                         l2323 16CE  
                                       l2307 1752                                         l2085 1956  
                                       l2069 15E0                                         l2181 140A  
                                       l2173 13C0                                         l2165 1394  
                                       l2157 137C                                         l2093 18F4  
                                       l2149 15DC                                         l2229 132A  
                                       l2237 135C                                         l2245 1A1A  
                                       l2317 1A24                                         l2253 1894  
                                       l2261 179A                                         l2325 16E4  
                                       l2341 167C                                         l2087 195E  
                                       l2079 1932                                         l2191 1446  
                                       l2183 1416                                         l2175 13CC  
                                       l2167 13A0                                         l2159 1390  
                                       l2095 1904                                         l2247 183C  
                                       l2263 17A0                                         l2271 17DA  
                                       l2351 1970                                         l2327 16FC  
                                       l2319 16B6                                         l2343 1694  
                                       l2335 164E                                         l2089 196C  
                                       l2185 1422                                         l2177 13E6  
                                       l2169 13A2                                         l2193 1454  
                                       l2097 190C                                         l2249 184C  
                                       l2265 17B2                                         l2257 177E  
                                       l2353 1980                                         l2329 16FE  
                                       l2281 151C                                         l2345 1696  
                                       l2337 165E                                         l2187 142E  
                                       l2179 13FE                                         l2099 1918  
                                       l2259 1792                                         l2355 1988  
                                       l2291 154C                                         l2275 14F4  
                                       l2347 16B2                                         l2339 1666  
                                       l2189 143A                                         l2197 1268  
                                       l2269 17C4                                         l2357 19A8  
                                       l2293 155C                                         l2277 1508  
                                       l2621 1458                                         l2199 127C  
                                       l2287 1520                                         l2295 1566  
                                       l2279 1510                                         l2623 145C  
                                       l2721 124E                                         l2289 154A  
                                       l2641 14C8                                         l2633 1488  
                                       l2625 1470                                         l2299 171E  
                                       l2643 14D8                                         l2635 149C  
                                       l2627 1484                                         l2619 1458  
                                       l2637 14B2                                         l2639 14C6  
                                       STR_1 1011                                         STR_2 1039  
                                       STR_3 102F                                         STR_4 1022  
                                       STR_5 1041                                         u1010 116C  
                                       u1011 1168                                         u1020 118C  
                                       u1100 15F0                                         u1021 1188  
                                       u1101 15EC                                         u1110 1942  
                                       u1111 193E                                         u1200 13B2  
                                       u1120 1904                                         u1201 13AE  
                                       u1121 1900                                         u1050 105A  
                                       u1034 11B2                                         u1130 17F2  
                                       u1210 127C                                         u1051 1056  
                                       u1035 11AE                                         u1131 17EE  
                                       u1211 1278                                         u1060 107A  
                                       u1044 1208                                         u1140 1812  
                                       u1220 12BA                                         u1300 171A  
                                       u1061 1076                                         u1045 1204  
                                       u1141 180E                                         u1221 12B6  
                                       u1301 1716                                         u1150 18A8  
                                       u1230 184C                                         u1310 165E  
                                       u1151 18A4                                         u1231 1848  
                                       u1311 165A                                         u1160 157E  
                                       u1240 1792                                         u1320 16B2  
         lcd_8bit_send_command@l_pin_counter 003F                                         u1161 157A  
                                       u1241 178E                                         u1321 16AE  
                                       u1090 113E                                         u1074 10A0  
                                       u1330 1980                                         u1250 1508  
                                       u1091 1138                                         u1075 109C  
                                       u1331 197C                                         u1251 1504  
                                       u1084 10F6                                         u1180 15D2  
                                       u1085 10F2                                         u1181 15CE  
                                       _LATA 0F89                                         u1190 1374  
                                       u1174 15B0                                         u1270 155C  
                                       _LATB 0F8A                                         u1191 1370  
                                       u1175 15AC                                         u1271 1558  
                                       _LATC 0F8B                                         u1096 1140  
                                       u1264 153A                                         u1280 1732  
                                       _LATD 0F8C                                         u1265 1536  
                                       u1281 172E                                         _LATE 0F8D  
                                       u1290 16C6                                         u1291 16C2  
                                       u1640 14D8                                         u1641 14D4  
                                       u1807 13F0                                         u1817 1958  
                                       u1737 14A6                                         u1747 12C0  
                                       u1757 12DA                                         u1767 12F8  
                                       u1777 191A                                         u1787 13B8  
                                       u1797 13D2                                         _main 1458  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                                       prodl 0FF3                                         start 0000  
              __end_of_lcd_8bit_send_command 15E0                   gpio_pin_initialization@ret 003A  
                               ___param_bank 0000                        _lcd_4bit_send_command 1898  
                       _gpio_pin_write_logic 1158                                        ?_main 0030  
                   ??_application_initialize 0045                          relay_turn_off@F3314 004F  
                                      _PORTA 0F80                                        _PORTB 0F81  
                                      _PORTC 0F82                                        _PORTD 0F83  
                                      _PORTE 0F84                                        _TRISA 0F92  
                                      _TRISB 0F93                                        _TRISC 0F94  
                                      _TRISD 0F95                                        _TRISE 0F96  
              ?_lcd_4bits_send_enable_signal 0038                                        _lcd_1 002A  
                                      _lcd_2 0020                     ?_lcd_8bit_send_char_data 003A  
                                      tablat 0FF5                                        status 0FD8  
                            __initialization 19AC                                 __end_of_main 14F4  
                      ?_gpio_pin_write_logic 0030                       lcd_8bit_set_cursor@col 0042  
                     lcd_8bit_set_cursor@lcd 0040                       lcd_8bit_set_cursor@ret 0043  
                     lcd_8bit_set_cursor@row 0041                                _lat_registers 000B  
                                     ??_main 0049                                __activetblptr 0002  
                           led_turn_on@F3315 0054                       lcd_send_4bits@_command 0039  
           __end_of_lcd_4bit_send_string_pos 171E                       ?_lcd_4bit_send_command 003B  
                                     clear_0 19D2                                       isa$std 0001  
                lcd_8bit_send_string_pos@col 0046                  lcd_8bit_send_string_pos@lcd 0044  
                lcd_8bit_send_string_pos@ret 0048                  lcd_8bit_send_string_pos@row 0045  
                lcd_8bit_send_string_pos@str 0047                                 __pdataCOMRAM 0001  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                               _lcd1_counter 0056              lcd_8bits_send_enable_signal@lcd 0038  
            lcd_8bits_send_enable_signal@ret 0039                                   __accesstop 0060  
                    __end_of__initialization 19D8                                ___rparam_used 0001  
                           ??_lcd_send_4bits 003A                      _lcd_4bit_send_char_data 183C  
                     ??_gpio_pin_write_logic 0032                               __pcstackCOMRAM 0030  
                   lcd_4bit_send_command@lcd 003B                     lcd_4bit_send_command@ret 003D  
               ?_lcd_4bit_send_char_data_pos 0042                       _application_initialize 1A24  
            lcd_4bits_send_enable_signal@lcd 0038                                   __pnvCOMRAM 0056  
            lcd_4bits_send_enable_signal@ret 0039                       lcd_8bit_initialize@lcd 0040  
                     lcd_8bit_initialize@ret 0044               ??_lcd_8bits_send_enable_signal 0039  
                          led_turn_off@F3320 0053                    ?_lcd_4bit_send_string_pos 0042  
                       led_turn_toggle@F3325 0052                                   _btn_values 1001  
                             _tris_registers 0015                    ??_lcd_4bit_send_char_data 003D  
     lcd_8bit_initialize@l_data_pins_counter 0043       lcd_4bit_initialize@l_data_pins_counter 0041  
                                    __Hparam 0000                                      __Lparam 0000  
                      _lcd_8bit_send_command 156A                                 __psmallconst 1000  
                                    __pcinit 19AC                                      __ramtop 1000  
                   _lcd_8bit_send_string_pos 164E                                      __ptext0 1458  
                                    __ptext1 164E                                      __ptext2 171E  
                                    __ptext3 14F4                                      __ptext4 16B6  
                                    __ptext5 1970                                      __ptext6 177E  
                                    __ptext7 183C                                      __ptext8 1A24  
                                    __ptext9 1A12                         end_of_initialization 19D8  
                          lcd_send_4bits@lcd 0038                            lcd_send_4bits@ret 003A  
                              __Lmediumconst 0000                      ??_lcd_4bit_send_command 003D  
          gpio_pin_initialization@pin_config 0038                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc2 0FDE                          _lcd_4bit_initialize 1360  
            __end_of_lcd_4bit_send_char_data 1898                      _gpio_pin_initialization 17DE  
                 lcd_4bit_send_char_data@lcd 003B                   lcd_4bit_send_char_data@ret 003D  
            lcd_4bit_send_char_data_pos@data 0045                         ?_lcd_4bit_initialize 003E  
                        _lcd_4bit_set_cursor 177E                           relay_turn_on@F3309 0050  
                     ?_lcd_8bit_send_command 003A                  lcd_4bit_send_string_pos@col 0044  
                lcd_4bit_send_string_pos@lcd 0042                  lcd_4bit_send_string_pos@ret 0046  
                lcd_4bit_send_string_pos@row 0043                  lcd_4bit_send_string_pos@str 0045  
                              __pidataCOMRAM 19E2                          start_initialization 19AC  
                       ?_lcd_4bit_set_cursor 003E                          _lcd_8bit_initialize 1268  
                    ?_application_initialize 0030                        ??_lcd_4bit_initialize 003F  
       gpio_pin_direction_initialization@ret 0036                         ?_lcd_8bit_initialize 0040  
                    _lcd_8bit_send_char_data 14F4                    ??_gpio_pin_initialization 0039  
               __end_of_ecu_layer_initialize 1A24                          _lcd_8bit_set_cursor 171E  
               lcd_4bit_send_command@command 003C                     lcd_8bit_send_command@lcd 003A  
                   lcd_8bit_send_command@ret 003E                                  __pbssCOMRAM 004B  
                      ??_lcd_4bit_set_cursor 0041               __end_of_application_initialize 1A2A  
                       ?_lcd_8bit_set_cursor 0040               ??_lcd_4bits_send_enable_signal 0039  
             gpio_pin_write_logic@pin_config 0030                        ??_lcd_8bit_initialize 0041  
                 ??_lcd_8bit_send_string_pos 0048                  lcd_8bit_send_char_data@data 003B  
                            _lcd_counter_txt 004B                    gpio_pin_write_logic@logic 0031  
                                __smallconst 1000         __end_of_lcd_8bits_send_enable_signal 1932  
               _lcd_8bits_send_enable_signal 18F4              __end_of_gpio_pin_initialization 183C  
                      ??_lcd_8bit_set_cursor 0043                    ??_lcd_8bit_send_char_data 003C  
                                _lcd_counter 001F                __end_of_lcd_4bit_send_command 18F4  
  __end_of_gpio_pin_direction_initialization 1158          ??_gpio_pin_direction_initialization 0031  
         ?_gpio_pin_direction_initialization 0030            _gpio_pin_direction_initialization 1046  
       lcd_8bit_send_char_data@l_pin_counter 003F                     _lcd_4bit_send_string_pos 16B6  
             lcd_4bit_send_char_data_pos@col 0044               lcd_4bit_send_char_data_pos@lcd 0042  
             lcd_4bit_send_char_data_pos@ret 0046               lcd_4bit_send_char_data_pos@row 0043  
        __end_of_lcd_4bit_send_char_data_pos 19AC                  _lcd_4bit_send_char_data_pos 1970  
                    gpio_pin_write_logic@ret 0037                     ?_lcd_4bit_send_char_data 003B  
                                  copy_data0 19C0                ?_lcd_8bits_send_enable_signal 0038  
                       _ecu_layer_initialize 1A12                ??_lcd_4bit_send_char_data_pos 0046  
                    ??_lcd_8bit_send_command 003C                                     __Hrparam 0000  
                                   __Lrparam 0000                       lcd_4bit_set_cursor@col 0040  
                     lcd_4bit_set_cursor@lcd 003E                       lcd_4bit_set_cursor@ret 0041  
                     lcd_4bit_set_cursor@row 003F              __end_of_lcd_8bit_send_char_data 156A  
                         __end_of_btn_values 1011  gpio_pin_direction_initialization@pin_config 0030  
                 lcd_8bit_send_char_data@lcd 003A                   lcd_8bit_send_char_data@ret 003E  
                                   __ptext10 1268                                     __ptext11 156A  
                                   __ptext12 18F4                                     __ptext13 1360  
                                   __ptext14 1898                                     __ptext15 15E0  
                                   __ptext16 1932                                     __ptext17 17DE  
                                   __ptext18 1158                                     __ptext19 1046  
                      ?_ecu_layer_initialize 0030             __end_of_lcd_8bit_send_string_pos 16B6  
                                   isa$xinst 0000                               _lcd_send_4bits 15E0  
                __end_of_lcd_4bit_initialize 1458                 __end_of_gpio_pin_write_logic 1268  
                     __end_of_lcd_send_4bits 164E                  __end_of_lcd_4bit_set_cursor 17DE  
                             _port_registers 0001                       ??_ecu_layer_initialize 0045  
                __end_of_lcd_8bit_initialize 1360                 lcd_8bit_send_command@command 003B  
                lcd_4bit_send_char_data@data 003C                   ??_lcd_4bit_send_string_pos 0046  
                     lcd_4bit_initialize@lcd 003E                       lcd_4bit_initialize@ret 0042  
                   ?_gpio_pin_initialization 0038  
